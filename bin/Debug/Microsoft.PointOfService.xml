<?xml version="1.0" encoding="utf-8"?>
<doc>
	<assembly>
		<name>Microsoft.PointOfService</name>
	</assembly>
	<members>
		<member name="T:Microsoft.PointOfService.BarCodeSymbology">
			<summary>Enumerates the valid bar code symbol types.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.Aztec">
			<summary>Aztec</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.Cca">
			<summary>Composite Component A--up to 56 characters of data</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.Ccb">
			<summary>Composite Component B--up to 338 characters of data</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.Ccc">
			<summary>Composite Conponent C--up to 2361 characters of data</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.Tlc39">
			<summary>Tlc39</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.Codabar">
			<summary>CodaBar</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.Code128">
			<summary>Code 128</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.Code128Parsed">
			<summary>Code 128 with parsing</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.Code39">
			<summary>Code 39</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.Code93">
			<summary>Code 93</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.DataMatrix">
			<summary>DataMatrix</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.Ean128">
			<summary>EAN-128</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.Ean13S">
			<summary>EAN-13</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.Ean8S">
			<summary>EAN-8</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.EanJan13">
			<summary>EAN/JAN-13</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.EanJan8">
			<summary>EAN/JAN-8</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.Itf">
			<summary>Interleaved 2 of 5</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.Maxicode">
			<summary>Maxicode</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.MicroPDF417">
			<summary>MicroPDF417</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.Gs1DataMatrix">
			<summary>Gs1DataMatrix</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.Gs1QRCode">
			<summary>Gs1QRCode</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.Code49">
			<summary>Code49</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.Code16k">
			<summary>Code16k</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.CodablockA">
			<summary>CodablockA</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.CodablockF">
			<summary>CodablockF</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.Codablock256">
			<summary>Codablock256</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.HANXIN">
			<summary>HANXIN</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.AusPost">
			<summary>AusPost</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.CanPost">
			<summary>CanPost</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.ChinaPost">
			<summary>ChinaPost</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.DutchKix">
			<summary>DutchKix</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.JapanPost">
			<summary>JapanPost</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.KoreanPost">
			<summary>KoreanPost</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.SwedenPost">
			<summary>SwedenPost</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.UkPost">
			<summary>UkPost</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.UsIntelligent">
			<summary>UsIntelligent</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.UsPlanet">
			<summary>UsPlanet</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.PostNet">
			<summary>PostNet</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.MicroQRCode">
			<summary>MicroQRCode</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.Ocra">
			<summary>OCRa</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.Ocrb">
			<summary>OCRb</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.Other">
			<summary>If greater than or equal to this type, the service object has returned an undefined symbology</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.Pdf417">
			<summary>PDF417</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.QRCode">
			<summary>QRCode</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.Rss14">
			<summary>Reduced space symbology</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.RssExpanded">
			<summary>Reduced space symbology - expanded</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.ItfCK">
			<summary>ItfCK</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.Gs1DataBar_Type2">
			<summary>Gs1DataBar_Type2</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.Ames">
			<summary>Ames</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.TFMAT">
			<summary>TFMAT</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.Code39Ck">
			<summary>Code39Ck</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.Code32">
			<summary>Code32</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.CodeCIP">
			<summary>CodeCIP</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.TriOptic39">
			<summary>TriOptic39</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.ISBT128">
			<summary>ISBT128</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.Code11">
			<summary>Code11</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.MSI">
			<summary>MSI</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.Plessey">
			<summary>Plessey</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.Telepen">
			<summary>Telepen</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.TF">
			<summary>Standard (or discrete) 2 of 5</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.Unknown">
			<summary>The service object cannot determine the barcode symbology</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.Upca">
			<summary>UPC-A</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.Upcas">
			<summary>UPC-A with supplemental barcode</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.Upcd1">
			<summary>UPC 1-digit supplement</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.Upcd2">
			<summary>UPC 2-digit supplement</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.Upcd3">
			<summary>UPC 3-digit supplement</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.Upcd4">
			<summary>UPC 4-digit supplement</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.Upcd5">
			<summary>UPC 5-digit supplement</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.Upce">
			<summary>UPC-E</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeSymbology.Upces">
			<summary>UPC-E with supplemental barcode</summary>
		</member>
		<member name="T:Microsoft.PointOfService.BarCodeTextPosition">
			<summary>Enumerates possible placements for the readable character string of a bar code.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeTextPosition.Above">
			<summary>Indicates to print the text above the bar code.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeTextPosition.Below">
			<summary>Indicates to print the text below the bar code.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BarCodeTextPosition.None">
			<summary>Indicates that no text is printed. Only prints the bar code.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.BeginDetectionType">
			<summary>Enumerates the card detection process.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BeginDetectionType.Any">
			<summary>The content of the detected card can be anything.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BeginDetectionType.Specific">
			<summary>When this method is called, only the card that corresponds to the identifier in the <see cref="P:Microsoft.PointOfService.ElectronicValueRW.MediumId"></see> property can be detected.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.Belt">
			<summary>Defines the programmatic interface for a UPOS Belt Device.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.Belt.#ctor">
			<summary>Creates an instance of the <see cref="T:Microsoft.PointOfService.Belt"></see> class.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Belt.StatusAutoStop">
			<summary>Indicates that the belt has stopped automatically.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Belt.StatusEmergencyStop">
			<summary>Indicates that the belt has stopped caused by an emergency condition, either a security flap is open or an emergency button has been pressed. </summary>
		</member>
		<member name="F:Microsoft.PointOfService.Belt.StatusLightBarrierBackwardInterrupted">
			<summary>Indicates that the belt has stopped for safety reasons. </summary>
		</member>
		<member name="F:Microsoft.PointOfService.Belt.StatusLightBarrierBackwardOk">
			<summary>Indicates that the light barrier in backward direction is no longer interrupted.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Belt.StatusLightBarrierForwardInterrupted">
			<summary>Indicates that the light barrier in forward direction is interrupted.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Belt.StatusLightBarrierForwardOk">
			<summary>Indicates that the light barrier in forward direction is no longer interrupted.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Belt.StatusMotorFuseDefect">
			<summary>Indicates that the belt has stopped due to a defective fuse.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Belt.StatusMotorOverheating">
			<summary>Indicates that the belt has stopped due to a motor overheating.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Belt.StatusSafetyStop">
			<summary>Indicates that the belt has stopped for safety reasons. </summary>
		</member>
		<member name="F:Microsoft.PointOfService.Belt.StatusSecurityFlapBackwardClosed">
			<summary>Indicates that the security flap in backward direction is closed.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Belt.StatusSecurityFlapBackwardOpened">
			<summary>Indicates that the security flap in backward direction is open.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Belt.StatusSecurityFlapForwardClosed">
			<summary>Indicates that the security flap in forward direction is closed.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Belt.StatusSecurityFlapForwardOpened">
			<summary>Indicates that the security flap in forward direction is open.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Belt.StatusTimeoutStop">
			<summary>Indicates that the belt has stopped due to a hardware time-out protecting the motor against overheating.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.Belt.AdjustItemCount(Microsoft.PointOfService.BeltDirection,System.Int32)">
			<summary>Indicates the direction of a belt and adjusts the item count accordingly.</summary>
			<param name="direction">Specifies the auto stop item count property to be adjusted. May be either <see cref="F:Microsoft.PointOfService.BeltDirection.Backward"></see> or<see cref="F:Microsoft.PointOfService.BeltDirection.Forward"></see>.</param>
			<param name="count">Contains the number of items to be adjusted.</param>
		</member>
		<member name="M:Microsoft.PointOfService.Belt.MoveBackward(System.Int32)">
			<summary>Starts the belt motor to move backward with the specified speed.</summary>
			<param name="speed">Specifies the speed step. Valid speed steps are 1 through <see cref="P:Microsoft.PointOfService.Belt.CapSpeedStepsForward"></see>.</param>
		</member>
		<member name="M:Microsoft.PointOfService.Belt.MoveForward(System.Int32)">
			<summary>Starts the belt motor to move forward with the specified speed.</summary>
			<param name="speed">Specifies the speed step. Valid speed steps are 1 through <see cref="P:Microsoft.PointOfService.Belt.CapSpeedStepsForward"></see>.</param>
		</member>
		<member name="M:Microsoft.PointOfService.Belt.ResetBelt">
			<summary>Resets the belt after an emergency stop caused by an open security flap or a pressed emergency button.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.Belt.ResetItemCount(Microsoft.PointOfService.BeltDirection)">
			<summary>Resets the item counter of the belt direction. </summary>
			<param name="direction">Specifies the auto stop item count property to be reset. May be either <see cref="F:Microsoft.PointOfService.BeltDirection.Backward"></see> or <see cref="F:Microsoft.PointOfService.BeltDirection.Forward"></see>.</param>
		</member>
		<member name="M:Microsoft.PointOfService.Belt.StopBelt">
			<summary>Stops the belt motor.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.BeltDirection">
			<summary>Enumerates the belt direction.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BeltDirection.Backward">
			<summary>Indicates that the belt moves in backward direction.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BeltDirection.Forward">
			<summary>Indicates that the belt moves in forward direction.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.BeltMotionStatus">
			<summary>Enumerates possible values of the current motion state of the device.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BeltMotionStatus.Backward">
			<summary>The device is moving backward.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BeltMotionStatus.Emergency">
			<summary>Emergency stop. Either a security flap is open or the emergency button was pressed. Technical help is needed to reactivate the belt device.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BeltMotionStatus.Forward">
			<summary>The device is moving forward.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BeltMotionStatus.MotorFault">
			<summary>The device has stopped because of a motor failure like overheating or a defective fuse. Technical help may be needed to reactivate the motor.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BeltMotionStatus.Stopped">
			<summary>The device has stopped because of an automatic stop, security stop or motor time-out stop.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.BillAcceptor">
			<summary>Defines the programmatic interface for a UPOS Bill Acceptor device.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.BillAcceptor.#ctor">
			<summary>Creates an instance of the <see cref="T:Microsoft.PointOfService.BillAcceptor"></see> class.</summary>
		</member>
		<member name="E:Microsoft.PointOfService.BillAcceptor.DataEvent">
			<summary>Notifies the application when the Bill Acceptor has accepted a bill.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BillAcceptor.StatusFull">
			<summary>Indicates that the Bill Acceptor is full.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BillAcceptor.StatusFullOk">
			<summary>Indicates that the Bill Acceptor is no longer full.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BillAcceptor.StatusJam">
			<summary>Indicates that a mechanical problem has occurred.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BillAcceptor.StatusJamOk">
			<summary>Indicates that the Bill Acceptor is no longer jammed.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BillAcceptor.StatusNearFull">
			<summary>Indicates that the Bill Acceptor is almost full.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.BillAcceptor.AdjustCashCounts(System.Collections.Generic.IEnumerable{Microsoft.PointOfService.CashCount})">
			<summary>Sets the amount currently in the device to specific values.</summary>
			<param name="cashCounts">The cashCounts parameter contains cash types and amounts to be initialized.</param>
		</member>
		<member name="M:Microsoft.PointOfService.BillAcceptor.BeginDeposit">
			<summary>Begins the cash acceptance process.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.BillAcceptor.ClearInput">
			<summary>Clears all device input that has been buffered.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.BillAcceptor.EndDeposit(Microsoft.PointOfService.EndDepositAction)">
			<summary>Ends the cash acceptance process.</summary>
			<param name="success">The deposit is accepted and the process is complete.</param>
		</member>
		<member name="M:Microsoft.PointOfService.BillAcceptor.FixDeposit">
			<summary>Updates property values to reflect the current values in the Bill Acceptor.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.BillAcceptor.PauseDeposit(Microsoft.PointOfService.CashDepositPause)">
			<summary>Suspends or resumes the process of depositing cash.</summary>
			<param name="control">Indicates whether the cash acceptance process is paused or restarted. If the value of this parameter is Pause, acceptance is paused. If the value is Restart, cash acceptance resumes.</param>
		</member>
		<member name="P:Microsoft.PointOfService.BillAcceptor.IsExclusiveUseDevice">
			<summary>Gets the Boolean value that indicates whether the Bill Acceptor is an exclusive-use device.</summary>
			<returns>A Boolean value of true indicates the fiscal printer is an exclusive-use device. Otherwise, the value is false.</returns>
		</member>
		<member name="T:Microsoft.PointOfService.BillDispenser">
			<summary>Defines the programmatic interface for a UPOS Bill Dispenser device.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.BillDispenser.#ctor">
			<summary>Creates an instance of the <see cref="T:Microsoft.PointOfService.BillDispenser"></see> class.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BillDispenser.ExtendedErrorOverDispense">
			<summary>Indicates the specified cash cannot be dispensed because of a cash shortage.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BillDispenser.StatusAsync">
			<summary>Indicates an asynchronously performed method has finished.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BillDispenser.StatusEmpty">
			<summary>Indicates some cash slots are empty.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BillDispenser.StatusEmptyOk">
			<summary>Indicates no cash slots are empty or almost empty.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BillDispenser.StatusJam">
			<summary>Indicates a mechanical fault has occurred.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BillDispenser.StatusJamOk">
			<summary>Indicates a mechanical fault has recovered.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BillDispenser.StatusNearEmpty">
			<summary>Indicates some cash slots are almost empty.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.BillDispenser.AdjustCashCounts(System.Collections.Generic.IEnumerable{Microsoft.PointOfService.CashCount})">
			<summary>Sets or adjusts the cash count in the bill dispenser.</summary>
			<param name="cashCounts">Indicates the cash types and amounts to be initialized.</param>
		</member>
		<member name="M:Microsoft.PointOfService.BillDispenser.DispenseCash(System.Collections.Generic.IEnumerable{Microsoft.PointOfService.CashCount})">
			<summary>Dispenses the specified cash units and cash counts from the device.</summary>
			<param name="cashCounts">Indicates the dispensing cash units and counts.</param>
		</member>
		<member name="M:Microsoft.PointOfService.BillDispenser.ReadCashCounts">
			<summary>Reads the current cash counts in the bill dispenser.</summary>
			<returns>A <see cref="T:Microsoft.PointOfService.CashCounts"></see> structure representing the cash in the bill dispenser.</returns>
		</member>
		<member name="P:Microsoft.PointOfService.BillDispenser.CapNearEmptySensor">
			<summary>Gets a Boolean value that indicates whether the device can report that some cash slots are almost empty.</summary>
			<returns>If true, the bill dispenser can report the condition that some cash slots are almost empty.This property is initialized by the <see cref="M:Microsoft.PointOfService.PosCommon.Open"></see> method.</returns>
		</member>
		<member name="P:Microsoft.PointOfService.BillDispenser.IsExclusiveUseDevice">
			<summary>Gets a Boolean value that indicates whether the bill dispenser is an exclusive-use device.</summary>
			<returns>A value of true indicates the fiscal printer is an exclusive-use device. Otherwise, the value is false.</returns>
		</member>
		<member name="T:Microsoft.PointOfService.BinaryConversion">
			<summary>Enumerates the possible binary conversion methods for legacy controls.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BinaryConversion.Decimal">
			<summary>Each byte is converted into three characters. This option provides for the easiest conversion between binary and ASCII characters for Visual Basic and similar languages.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BinaryConversion.Nibble">
			<summary>Each byte is converted into two characters. This option provides for the fastest conversion between binary and ASCII characters.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BinaryConversion.None">
			<summary>Data is placed one byte per character, with no conversion. This is the default.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.Biometrics">
			<summary>Defines the programmatic interface for a UPOS Biometrics device.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.Biometrics.#ctor">
			<summary>Creates an instance of the <see cref="T:Microsoft.PointOfService.Biometrics"></see> class.</summary>
		</member>
		<member name="E:Microsoft.PointOfService.Biometrics.DataEvent">
			<summary>Notifies the application that input data is available.</summary>
		</member>
		<member name="E:Microsoft.PointOfService.Biometrics.ErrorEvent">
			<summary>Notifies the application that a Biometrics device error has been detected and that a suitable response by the application is necessary to process the error condition.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Biometrics.DataEventEnroll">
			<summary>Indicates the status of enrollment for captured biometrics data.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Biometrics.DataEventVerify">
			<summary>Indicates the status of data verification for captured biometrics data.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Biometrics.StatisticAverageFalseAcceptRate">
			<summary>Indicates the average false acceptance rate.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Biometrics.StatisticAverageFalseRejectRate">
			<summary>Indicates the average false rejection rate.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Biometrics.StatisticSuccessfulMatchCount">
			<summary>Increments the number when a match is completed successfully.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Biometrics.StatisticUnsuccessfulMatchCount">
			<summary>Increments the number when a match is completed unsuccessfully.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Biometrics.StatusMoveAway">
			<summary>Indicates that the position was too close.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Biometrics.StatusMoveBackward">
			<summary>Indicates that the position was too far forward.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Biometrics.StatusMoveCloser">
			<summary>Indicates that the position was too far away.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Biometrics.StatusMoveDown">
			<summary>Indicates that the position was too high.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Biometrics.StatusMoveFaster">
			<summary>Indicates that the motion was too slow.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Biometrics.StatusMoveForward">
			<summary>Indicates that the position was too far backward.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Biometrics.StatusMoveLeft">
			<summary>Indicates that the position was too far to the right.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Biometrics.StatusMoveRight">
			<summary>Indicates that the position was too far to the left.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Biometrics.StatusMoveSlower">
			<summary>Indicates that the motion was too fast.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Biometrics.StatusMoveUp">
			<summary>Indicates that the position was too low.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Biometrics.StatusRawData">
			<summary>Indicates that raw image data is available.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Biometrics.StatusSensorDirty">
			<summary>Indicates that the sensor is dirty.</summary>
		</member>
        <member name="F:Microsoft.PointOfService.Biometrics.StatusSensorFailedRead">
            <summary>Indicates that the sensor failed to capture data.</summary>
        </member>
        <member name="F:Microsoft.PointOfService.Biometrics.StatusSensorReady">
            <summary>Indicates that the sensor is ready to scan.</summary>
        </member>
        <member name="F:Microsoft.PointOfService.Biometrics.StatusSensorComplete">
            <summary>Indicates that the sensor scan is complete.</summary>
        </member>
        <member name="M:Microsoft.PointOfService.Biometrics.BeginEnrollCapture(Microsoft.PointOfService.BiometricsInformationRecord,System.Byte[])">
			<summary>Begins capturing biometrics data for enrollment.</summary>
			<param name="payload">Data that will be stored by the BSP. This parameter is ignored if it is empty.</param>
			<param name="referenceBir">Optional Biometrics Information Record to be adapted (updated). This parameter is ignored if it is empty.</param>
		</member>
		<member name="M:Microsoft.PointOfService.Biometrics.BeginVerifyCapture">
			<summary>Begins capturing biometrics data for verification.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.Biometrics.ClearInput">
			<summary>Clears all buffered device input.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.Biometrics.ClearInputProperties">
			<summary>Resets the values of properties altered by <see cref="E:Microsoft.PointOfService.Biometrics.DataEvent"></see> or <see cref="E:Microsoft.PointOfService.Biometrics.ErrorEvent"></see>.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.Biometrics.EndCapture">
			<summary>Ends the capturing of biometrics data.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.Biometrics.Identify(System.Int32,System.Int32,System.Boolean,System.Collections.Generic.IEnumerable{Microsoft.PointOfService.BiometricsInformationRecord},System.Int32)">
			<summary>Captures biometrics data, compares it to an array of <see cref="P:Microsoft.PointOfService.Biometrics.BiometricsInformationRecord"></see>s, and then returns a rank ordered array of indexes.</summary>
			<param name="maximumFalseAcceptRateRequested">The requested FAR criterion for successful verification.</param>
			<param name="referenceBirPopulation">A collection of <see cref="P:Microsoft.PointOfService.Biometrics.BiometricsInformationRecord"></see> properties against which the Identify match is performed.</param>
			<param name="maximumFalseRejectRateRequested">The requested FRR criterion for successful verification.</param>
			<param name="timeout">Maximum number of milliseconds to try a successful biometric capture before failing.</param>
			<param name="falseAcceptRatePrecedence">If both criteria are provided, this parameter indicates which takes precedence. falseAcceptRatePrecedence indicates that maxFARRRequested takes precedence; falseRejectRatePrecedence indicates that maxFRRRequested takes precedence.</param>
		</member>
		<member name="M:Microsoft.PointOfService.Biometrics.IdentifyMatch(System.Int32,System.Int32,System.Boolean,Microsoft.PointOfService.BiometricsInformationRecord,System.Collections.Generic.IEnumerable{Microsoft.PointOfService.BiometricsInformationRecord})">
			<summary>Compares a sample Biometrics Information Record against the entries of a collection of other Biometrics Information Records, and then returns a rank ordered array of indexes.</summary>
			<param name="referenceBirPopulation">An array of <see cref="P:Microsoft.PointOfService.Biometrics.BiometricsInformationRecord"></see> properties against which the Identify match is performed.</param>
			<param name="maximumFalseAcceptRateRequested">The requested FAR criterion for successful verification.</param>
			<param name="sampleBir">The <see cref="P:Microsoft.PointOfService.Biometrics.BiometricsInformationRecord"></see> property to be identified.</param>
			<param name="maximumFalseRejectRateRequested">The requested FRR criterion for successful verification.An EMPTY pointer indicates that this criterion is not provided.</param>
			<param name="falseAcceptRatePrecedence">If both criteria are provided, this parameter indicates which takes precedence. falseAcceptRatePrecedence indicates that maxFARRRequested takes precedence, falseRejectRatePrecedence indicates that maxFRRRequested takes precedence.</param>
		</member>
		<member name="M:Microsoft.PointOfService.Biometrics.ProcessPrematchData(Microsoft.PointOfService.BiometricsInformationRecord,Microsoft.PointOfService.BiometricsInformationRecord)">
			<summary>Creates biometric samples for use by Match-On-Card and enabled Match-On-Card implementations that require prematch data before matching operations.</summary>
			<param name="sampleBir">The <see cref="P:Microsoft.PointOfService.Biometrics.BiometricsInformationRecord"></see> to be processed.</param>
			<param name="prematchDataBir">The <see cref="P:Microsoft.PointOfService.Biometrics.BiometricsInformationRecord"></see> property that contains prematch data previously emitted by the associated Match-On-Card Library.</param>
		</member>
		<member name="M:Microsoft.PointOfService.Biometrics.Verify(System.Int32,System.Int32,System.Boolean,Microsoft.PointOfService.BiometricsInformationRecord,System.Boolean,System.Int32)">
			<summary>Captures biometrics data and compares it against a designated Biometrics Information Record. </summary>
			<param name="maximumFalseAcceptRateRequested">The requested FAR criterion for successful verification.</param>
			<param name="adaptBir">Indicates whether the referenceBir will be adapted from information taken from the captured <see cref="P:Microsoft.PointOfService.Biometrics.BiometricsInformationRecord"></see>.</param>
			<param name="maximumFalseRejectRateRequested">The requested FRR criterion for successful verification.</param>
			<param name="timeout">Maximum number of milliseconds to try a successful biometric capture before failing.</param>
			<param name="falseAcceptRatePrecedence">If both criteria are provided, this parameter indicates which takes precedence. </param>
			<param name="referenceBir">The <see cref="P:Microsoft.PointOfService.Biometrics.BiometricsInformationRecord"></see> to be verified against.</param>
		</member>
		<member name="M:Microsoft.PointOfService.Biometrics.VerifyMatch(System.Int32,System.Int32,System.Boolean,Microsoft.PointOfService.BiometricsInformationRecord,Microsoft.PointOfService.BiometricsInformationRecord,System.Boolean)">
			<summary>Indicates the event type for <see cref="DataEvent"></see> events.</summary>
			<param name="adapt Bir">Indicates whether the referenceBir will be adapted from information taken from the captured <see cref="P:Microsoft.PointOfService.Biometrics.BiometricsInformationRecord"></see>.</param>
			<param name="maximumFalseAcceptRateRequested">The requested FAR criterion for successful verification.</param>
			<param name="sampleBir">The <see cref="P:Microsoft.PointOfService.Biometrics.BiometricsInformationRecord"></see> to be identified.</param>
			<param name="maximumFalseRejectRateRequested">The requested FRR criterion for successful verification.</param>
			<param name="falseAcceptRatePrecedence">If both criteria are provided, this parameter indicates which takes precedence. </param>
			<param name="referenceBir">The <see cref="P:Microsoft.PointOfService.Biometrics.BiometricsInformationRecord"></see> to be verified against.</param>
		</member>
		<member name="P:Microsoft.PointOfService.Biometrics.IsExclusiveUseDevice">
			<summary>Gets a Boolean value that indicates whether Biometrics is an exclusive-use device.</summary>
			<returns>A value of true indicates the fiscal printer is an exclusive-use device. Otherwise, the value is false.</returns>
		</member>
		<member name="T:Microsoft.PointOfService.BiometricsInformationRecord">
			<summary>Represents the Biometrics data that is returned to the application from a Biometrics device.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.BiometricsInformationRecord.#ctor(Microsoft.PointOfService.BiometricsInformationRecord)">
			<summary>Creates an instance of the BiometricsInformationRecord class by using data copied from the specified BiometricsInformationRecord.</summary>
			<param name="bir">The BIR from which data are used to populate the new BIR.</param>
		</member>
		<member name="M:Microsoft.PointOfService.BiometricsInformationRecord.#ctor(System.Version,Microsoft.PointOfService.BirDataTypes,System.Int32,System.Int32,Microsoft.PointOfService.BirPurpose,Microsoft.PointOfService.SensorType,System.Byte[])">
			<summary>Creates an instance of the BiometricsInformationRecord class.</summary>
			<param name="version">The version of the BIR, which is defined by the service object.</param>
			<param name="biometricDataBlock">The recorded biometrics data, in a format that is defined by the service object. Other information about the BIR such as a checksum or proprietary information may also be included in the biometric data.</param>
			<param name="formatId">Assigned by the format owner; optionally registered with the IBIA.</param>
			<param name="purpose">The purpose of the biometrics information.</param>
			<param name="formatOwner">FormatOwner values that are assigned and registered by the International Biometric Industry Association (IBIA).</param>
			<param name="dataType">The type of data contained in the BIR.</param>
			<param name="sensorType">The type of the Biometric sensor used to record the data.</param>
		</member>
		<member name="T:Microsoft.PointOfService.BiometricsVerifyResult">
			<summary>Defines the programmatic interface that is used for verifying biometrics data.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.BiometricsVerifyResult.#ctor(System.Boolean,System.Int32,System.Int32,Microsoft.PointOfService.BiometricsInformationRecord,System.Byte[])">
			<summary>Creates an instance of the <see cref="T:Microsoft.PointOfService.BiometricsVerifyResult"></see> class and initializes its members to the specified values.</summary>
			<param name="falseAcceptRateAchieved">Contains the value of the false accept rate achieved for the match. This value is an indicator of the closeness of match.</param>
			<param name="falseRejectRateAchieved">Contains the value of the false reject rate achieved for the match. This value is an indicator of the closeness of the match.</param>
			<param name="adaptedBir">A pointer to handle the adapted BIR. If this parameter is left empty, an adapted BIR is not created.</param>
			<param name="result">A Boolean value that is true for a successful match or false for a failed match.</param>
			<param name="payload">If a payload is associated with the referenceBIR, it is returned in an allocated byte[] if the FARAchieved satisfies the match criteria of the Service.</param>
		</member>
		<member name="T:Microsoft.PointOfService.BirDataTypes">
			<summary>Enumerates the possible types of data that the <see cref="T:Microsoft.PointOfService.BiometricsInformationRecord"></see> (BIR) class can hold.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BirDataTypes.Encrypted">
			<summary>The BIR is encrypted.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BirDataTypes.Intermediate">
			<summary>The BIR contains intermediate data.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BirDataTypes.Processed">
			<summary>The BIR contains processed data.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BirDataTypes.Raw">
			<summary>The BIR contains raw data.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BirDataTypes.Signed">
			<summary>The BIR contains signed data.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.BirPurpose">
			<summary>Enumerates the possible purpose for gathering the biometrics information.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BirPurpose.Audit">
			<summary>The biometrics data was gathered for auditing purposes.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BirPurpose.Enroll">
			<summary>BIR was generated for Enrollment.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BirPurpose.EnrollForIdentificationOnly">
			<summary>The biometrics data was gathered for verification only. Verification does not require the same level of quality as enrollment.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BirPurpose.EnrollForVerificationOnly">
			<summary>The biometrics data was gathered for comparison against other data only.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BirPurpose.Identify">
			<summary>The biometrics data was gathered for comparison against other data.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BirPurpose.Unspecified">
			<summary>The purpose of the biometrics data is unspecified.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BirPurpose.Verify">
			<summary>The biometrics data was gathered for verification purposes. Verification does not require the same level of quality as enrollment.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.BorderType">
			<summary>Enumerates the possible types of borders to display.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BorderType.Double">
			<summary>A double line border.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BorderType.Single">
			<summary>A single line border.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BorderType.Solid">
			<summary>A solid block border.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.BumpBar">
			<summary>Defines the programmatic interface for a UPOS Bump Bar device.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.BumpBar.#ctor">
			<summary>Creates an instance of the <see cref="BumpBar"></see> class.</summary>
		</member>
		<member name="E:Microsoft.PointOfService.BumpBar.DataEvent">
			<summary>Raised by the service object to notify the application that input data from the bump bar is available.</summary>
		</member>
		<member name="E:Microsoft.PointOfService.BumpBar.ErrorEvent">
			<summary>Raised by the service object to notify the application that a bump bar error has been detected and a suitable response by the application is necessary to process the error condition.</summary>
		</member>
		<member name="E:Microsoft.PointOfService.BumpBar.OutputCompleteEvent">
			<summary>Raised by the service object to notify the application that the queued output request associated with the <see cref="P:Microsoft.PointOfService.BumpBar.OutputId"></see> property has completed successfully.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BumpBar.DataEventKey">
			<summary>Indicates the event type for <see cref="DataEvent"></see> events.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.BumpBar.StatisticBumpCount">
			<summary>Incremented every time that the bump bar is pressed.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.BumpBar.BumpBarSound(Microsoft.PointOfService.DeviceUnits,System.Int32,System.Int32,System.Int32,System.Int32)">
			<summary>Sounds the bump bar enunciator for the bump bar(s) specified by the units parameter.</summary>
			<param name="units">Bitwise mask that indicates which bump bar unit(s) to operate on.</param>
			<param name="interSoundWait">When numberOfCycles is not one, pauses for interSoundWait milliseconds before repeating the tone cycle, that is before playing the tone again.</param>
			<param name="numberOfCycles">If <see cref="F:Microsoft.PointOfService.PosCommon.WaitForever"></see>, starts bump bar sounding and, repeats continuously. Else performs the specified number of cycles.</param>
			<param name="duration">Tone duration in milliseconds.</param>
			<param name="frequency">Tone frequency in Hertz.</param>
		</member>
		<member name="M:Microsoft.PointOfService.BumpBar.ClearInput">
			<summary>Clears all buffered device input.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.BumpBar.ClearOutput">
			<summary>Clears all buffered tone outputs. </summary>
		</member>
		<member name="M:Microsoft.PointOfService.BumpBar.SetKeyTranslation(Microsoft.PointOfService.DeviceUnits,System.Int32,System.Int32)">
			<summary>Assigns a logical key value to key scan code.</summary>
			<param name="logicalKey">The translated logical key value. Valid values 0-255.</param>
			<param name="scanCode">The bump bar generated key scan code. Valid values 0-255.</param>
			<param name="units">Bitwise mask that indicates which bump bar unit(s) to set key translation for.</param>
		</member>
		<member name="P:Microsoft.PointOfService.BumpBar.AsyncMode">
			<summary>Gets or sets a Boolean value that indicates whether the <see cref="M:Microsoft.PointOfService.BumpBar.BumpBarSound(Microsoft.PointOfService.DeviceUnits,System.Int32,System.Int32,System.Int32,System.Int32)"></see> method is performed asynchronously.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.BumpBar.AutoToneDuration">
			<summary>Gets or sets the duration of the automatic tone.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.BumpBar.AutoToneFrequency">
			<summary>Gets or sets the frequency of the automatic tone.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.BumpBar.BumpBarDataCount">
			<summary>Gets the number of queued <see cref="E:Microsoft.PointOfService.BumpBar.DataEvents"></see>.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.BumpBar.CapTone">
			<summary>Gets a Boolean value that indicates whether the bump bar device supports an enunciator.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.BumpBar.CurrentUnitId">
			<summary>Gets or sets the current bump bar unit ID.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.BumpBar.DataCount">
			<summary>Gets the number of currently queued <see cref="E:Microsoft.PointOfService.BumpBar.DataEvent"></see> events.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.BumpBar.DataEventEnabled">
			<summary>Gets or sets a Boolean value that indicates whether a <see cref="E:Microsoft.PointOfService.BumpBar.DataEvent"></see> event is delivered when input data is queued.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.BumpBar.ErrorString">
			<summary>Gets an error description.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.BumpBar.ErrorUnits">
			<summary>Gets a bitwise mask of the unit(s) that encountered an error.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.BumpBar.EventString">
			<summary>Gets a description of the error that occurred to the specified unit(s).</summary>
		</member>
		<member name="P:Microsoft.PointOfService.BumpBar.EventUnitId">
			<summary>Gets the bump bar unit ID causing a <see cref="E:Microsoft.PointOfService.BumpBar.DataEvent"></see> event. </summary>
		</member>
		<member name="P:Microsoft.PointOfService.BumpBar.EventUnits">
			<summary>Gets a bitwise mask of the unit(s) when some events are delivered.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.BumpBar.IsExclusiveUseDevice">
			<summary>Gets a Boolean value that indicates whether the Bump Bar is an exclusive-use device.</summary>
			<returns>The Boolean value of true indicates that the physical printer is an exclusive-use device. Otherwise, the value is false.</returns>
		</member>
		<member name="P:Microsoft.PointOfService.BumpBar.Keys">
			<summary>Gets the number of keys on the specified bump bar unit.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.BumpBar.OutputId">
			<summary>Gets the identifier of the most recently started asynchronous output.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.BumpBar.Timeout">
			<summary>Gets or sets the time-out value that is used to complete output methods.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.BumpBar.UnitsOnline">
			<summary>Gets a bitwise mask that indicates which bump bar units are online.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.CapSensorColors">
			<summary>Enumerates the possible image formats that the device supports.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CapSensorColors.Color16">
			<summary>16 Colors</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CapSensorColors.Color256">
			<summary>256 Colors</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CapSensorColors.Full">
			<summary>Full Colors</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CapSensorColors.Grayscale">
			<summary>Grayscale</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CapSensorColors.Mono">
			<summary>Bi-tonal (B/W)</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CapSensorColors.None">
			<summary>No supported Image formats specified</summary>
		</member>
		<member name="T:Microsoft.PointOfService.CapSensorOrientations">
			<summary>Enumerates the possible degrees of rotation of the sensor image prior to processing.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CapSensorOrientations.Inverted">
			<summary>180°</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CapSensorOrientations.Left">
			<summary>270°</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CapSensorOrientations.None">
			<summary>No specified value</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CapSensorOrientations.Normal">
			<summary>0°</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CapSensorOrientations.Right">
			<summary>90°</summary>
		</member>
		<member name="T:Microsoft.PointOfService.CapSensorTypes">
			<summary>Enumerates the types of biometrics data that can be captured by the attached sensor. </summary>
		</member>
		<member name="F:Microsoft.PointOfService.CapSensorTypes.FacialFeatures">
			<summary>Facial Features/Topography</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CapSensorTypes.Fingerprint">
			<summary>Fingerprint</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CapSensorTypes.Gait">
			<summary>Gait/Stride</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CapSensorTypes.HandGeometry">
			<summary>Hand Geometry</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CapSensorTypes.Iris">
			<summary>Iris</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CapSensorTypes.KeystrokeDynamics">
			<summary>Keystrokes</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CapSensorTypes.LipMovement">
			<summary>Lip Movement</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CapSensorTypes.None">
			<summary>None</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CapSensorTypes.Password">
			<summary>Password</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CapSensorTypes.Retina">
			<summary>Retina</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CapSensorTypes.SignatureDynamics">
			<summary>Signature</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CapSensorTypes.ThermalFaceImage">
			<summary>Face Image</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CapSensorTypes.ThermalHandImage">
			<summary>Hand Image</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CapSensorTypes.Voice">
			<summary>Voice</summary>
		</member>
		<member name="T:Microsoft.PointOfService.CardDetectionControl">
			<summary>Enumerates whether the application or the reader/writer can control the detection processing, ejection processing, or storing processing of the card.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CardDetectionControl.Application">
			<summary>The application can control the detection, ejection, or storing processing. </summary>
		</member>
		<member name="F:Microsoft.PointOfService.CardDetectionControl.Device">
			<summary>The Electronic Value Reader/Writer (R/W) device can control the detection ejection, or storing processing.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.CardDetectionTypes">
			<summary>Enumerates the types of card detection.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CardDetectionTypes.Capture">
			<summary>The card is in the stock space. The stock space sensor detects the card.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CardDetectionTypes.Detect">
			<summary>There is a card in the device. The card detection sensor detects the card.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CardDetectionTypes.Entry">
			<summary>Card remaining at the insertion slot. The insertion slot sensor detects the card.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.CashChanger">
			<summary>Defines the programmatic interface for a UPOS Cash Changer device.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.CashChanger.#ctor">
			<summary>Creates an instance of <see cref="T:Microsoft.PointOfService.CashChanger"></see> class.</summary>
		</member>
		<member name="E:Microsoft.PointOfService.CashChanger.DataEvent">
			<summary>Raised by the service object to notify the application when the cash changer has a status change.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CashChanger.ExtendedErrorOverDispense">
			<summary>Indicates that the specified cash cannot be dispensed because of a cash shortage.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CashChanger.StatusAsync">
			<summary>Indicates that an asynchronously performed method has finished.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CashChanger.StatusEmpty">
			<summary>Indicates that some cash slots are empty.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CashChanger.StatusEmptyOK">
			<summary>Indicates that no cash slots are empty or almost empty.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CashChanger.StatusFull">
			<summary>Indicates that some cash slots are full.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CashChanger.StatusFullOK">
			<summary>Indicates that no cash slots are full or almost full.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CashChanger.StatusJam">
			<summary>Indicates that a mechanical fault has occurred.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CashChanger.StatusJamOK">
			<summary>Indicates that a mechanical fault has recovered.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CashChanger.StatusNearEmpty">
			<summary>Indicates that some cash slots are almost empty.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CashChanger.StatusNearFull">
			<summary>Indicates that some cash slots are almost full.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CashChanger.StatusOK">
			<summary>Indicates that the device is ready to dispense coinage.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.CashChanger.AdjustCashCounts(System.Collections.Generic.IEnumerable{Microsoft.PointOfService.CashCount})">
			<summary>Sets the initial amount of cash after setup or adjusts cash counts after replenishment or removal.</summary>
			<param name="cashCounts">The cashCounts parameter contains cash types and amounts to be initialized.</param>
		</member>
		<member name="M:Microsoft.PointOfService.CashChanger.BeginDeposit">
			<summary>Starts a cash acceptance operation.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.CashChanger.ClearInput">
			<summary>Clears all device input that has been buffered.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.CashChanger.DispenseCash(Microsoft.PointOfService.CashCount[])">
			<summary>Dispenses the specified cash units and cash counts from the device.</summary>
			<param name="cashCounts">Contains the dispensing cash units and counts, as an array of <see cref="T:Microsoft.PointOfService.CashCount"></see> objects.</param>
		</member>
		<member name="M:Microsoft.PointOfService.CashChanger.DispenseChange(System.Int32)">
			<summary>Dispenses the specified amount of cash.</summary>
			<param name="amount">Indicates the change to be dispensed. </param>
		</member>
		<member name="M:Microsoft.PointOfService.CashChanger.EndDeposit(Microsoft.PointOfService.CashDepositAction)">
			<summary>Completes a cash acceptance operation.</summary>
			<param name="successAction">Valid values are defined by the <see cref="T:Microsoft.PointOfService.CashDepositAction"></see> enumeration.</param>
		</member>
		<member name="M:Microsoft.PointOfService.CashChanger.FixDeposit">
			<summary>Updates property values to reflect the current values in the device.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.CashChanger.PauseDeposit(Microsoft.PointOfService.CashDepositPause)">
			<summary>Suspends or resumes depositing cash.</summary>
			<param name="pauseAction">Valid values are defined by the <see cref="T:Microsoft.PointOfService.CashDepositPause"></see> enumeration.</param>
		</member>
		<member name="M:Microsoft.PointOfService.CashChanger.ReadCashCounts">
			<summary>Reads the current cash counts.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.CashChanger.AsyncMode">
			<summary>Gets or sets a Boolean value that indicates whether <see cref="T:Microsoft.PointOfService.CashChanger"></see> methods are performed asynchronously.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.CashChanger.AsyncResultCode">
			<summary>Gets the completion status of the last asynchronous dispense request.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.CashChanger.AsyncResultCodeExtended">
			<summary>Gets the completion status of the last asynchronous dispense request.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.CashChanger.CapDeposit">
			<summary>Gets a Boolean value that indicates whether the device supports cash acceptance.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.CashChanger.CapDepositDataEvent">
			<summary>Gets a Boolean value that indicates whether the device can report cash acceptance events.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.CashChanger.CapDiscrepancy">
			<summary>Gets a Boolean value that indicates whether <see cref="M:Microsoft.PointOfService.CashChanger.ReadCashCounts"></see> can report effective <see cref="P:Microsoft.PointOfService.CashCounts.Discrepancy"></see> values.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.CashChanger.CapEmptySensor">
			<summary>Gets a Boolean value that indicates whether the device can report that some cash slots are empty.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.CashChanger.CapFullSensor">
			<summary>Gets a Boolean value that indicates whether the device can report that some cash slots are full.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.CashChanger.CapJamSensor">
			<summary>Gets a Boolean value that indicates whether the device can report that a mechanical fault has occurred in the cash changer.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.CashChanger.CapNearEmptySensor">
			<summary>Gets a Boolean value that indicates whether the device can report that some cash slots are almost empty.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.CashChanger.CapNearFullSensor">
			<summary>Gets a Boolean value that indicates whether the device can report that some cash slots are almost full.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.CashChanger.CapPauseDeposit">
			<summary>Gets a Boolean value that indicates whether the device can suspend cash acceptance.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.CashChanger.CapRealTimeData">
			<summary>Gets a Boolean value that indicates whether the device may supply data as the money is being accepted.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.CashChanger.CapRepayDeposit">
			<summary>Gets a Boolean value that indicates whether the device can return deposited money.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.CashChanger.CurrencyCashList">
			<summary>Gets a list of cash units supported in the cash changer for the currency represented by the <see cref="P:Microsoft.PointOfService.CashChanger.CurrencyCode"></see> property.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.CashChanger.CurrencyCode">
			<summary>Gets or sets the active currency code to be used by cash changer operations.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.CashChanger.CurrencyCodeList">
			<summary>Gets a list of ASCII 3-character ISO 4217 currency codes, separated by commas.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.CashChanger.CurrentExit">
			<summary>Gets or sets a value that indicates the current cash-dispensing exit.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.CashChanger.CurrentService">
			<summary>Gets or sets the current service.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.CashChanger.DataCount">
			<summary>Gets the number of currently queued <see cref="E:Microsoft.PointOfService.CashChanger.DataEvent"></see> events.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.CashChanger.DataEventEnabled">
			<summary>Gets or sets a Boolean value that indicates whether a <see cref="E:Microsoft.PointOfService.CashChanger.DataEvent"></see> event can be delivered when input data is queued.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.CashChanger.DepositAmount">
			<summary>Gets the total amount of cash accepted.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.CashChanger.DepositCashList">
			<summary>Gets the cash units supported in the cash changer for the currency represented by the <see cref="P:Microsoft.PointOfService.CashChanger.CurrencyCode"></see> property.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.CashChanger.DepositCodeList">
			<summary>Gets a list of the currency code indicators for the cash accepted.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.CashChanger.DepositCounts">
			<summary>Gets the total of the cash accepted by the cash units.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.CashChanger.DepositStatus">
			<summary>Gets the current status of the cash acceptance operation.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.CashChanger.DeviceExits">
			<summary>Gets the number of exits for dispensing cash.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.CashChanger.DeviceStatus">
			<summary>Gets the current status of the cash changer. </summary>
		</member>
		<member name="P:Microsoft.PointOfService.CashChanger.ExitCashList">
			<summary>Gets the cash units that can be dispensed to the exit denoted by the <see cref="P:Microsoft.PointOfService.CashChanger.CurrentExit"></see> property.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.CashChanger.FullStatus">
			<summary>Gets the current full status of the cash slots. </summary>
		</member>
		<member name="P:Microsoft.PointOfService.CashChanger.IsExclusiveUseDevice">
			<summary>Gets a Boolean value that indicated whether the Cash Changer is an exclusive-use device.</summary>
			<returns>A value of true indicates the fiscal printer is an exclusive-use device. Otherwise, the value is false.</returns>
		</member>
		<member name="T:Microsoft.PointOfService.CashChangerFullStatus">
			<summary>Enumerates values that describe the full status of cash slots in a Cash Changer device. </summary>
		</member>
		<member name="F:Microsoft.PointOfService.CashChangerFullStatus.Full">
			<summary>Some cash slots are full.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CashChangerFullStatus.NearFull">
			<summary>Some cash slots are almost full.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CashChangerFullStatus.OK">
			<summary>All cash slots are neither almost full nor full.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.CashChangerStatus">
			<summary>Enumerates possible current status values for the <see cref="T:Microsoft.PointOfService.CashChanger"></see> class.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CashChangerStatus.Empty">
			<summary>Some cash slots are empty.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CashChangerStatus.Jam">
			<summary>A mechanical fault has occurred.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CashChangerStatus.NearEmpty">
			<summary>Some cash slots are nearly empty.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CashChangerStatus.OK">
			<summary>The current condition of the cash changer is satisfactory.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.CashCount">
			<summary>Represents an individual count of a particular type of currency for a Cash Changer or Bill Dispenser device.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.CashCount.#ctor(Microsoft.PointOfService.CashCountType,System.Int32,System.Int32)">
			<summary>Creates an instance of the <see cref="T:Microsoft.PointOfService.CashCount"></see> structure from parameters specifying the instance's constituent parts.</summary>
			<param name="t ype">One of the cash type values that are defined by the <see cref="T:Microsoft.PointOfService.CashCountType"></see> enumeration.</param>
			<param name="c ount">The number of currency units (either bills or coins) to be held by this <see cref="T:Microsoft.PointOfService.CashCount"></see>.</param>
			<param name="nominalValue">The face value of each unit of currency to be held by this <see cref="T:Microsoft.PointOfService.CashCount"></see>.</param>
		</member>
		<member name="M:Microsoft.PointOfService.CashCount.op_Equality(Microsoft.PointOfService.CashCount,System.Object)">
			<summary>Compares the specified <see cref="T:Microsoft.PointOfService.CashCount"></see> and object to determine whether they are the same.</summary>
			<returns>True if a is equal to b; otherwise, false.</returns>
			<param name="a">The <see cref="T:Microsoft.PointOfService.CashCount"></see> to be compared to b.</param>
			<param name="b">The object to be compared to a.</param>
		</member>
		<member name="M:Microsoft.PointOfService.CashCount.op_Inequality(Microsoft.PointOfService.CashCount,System.Object)">
			<summary>Compares the specified <see cref="T:Microsoft.PointOfService.CashCount"></see> and object to determine whether they are different.</summary>
			<param name="a">The <see cref="T:Microsoft.PointOfService.CashCount"></see> to be compared to b.</param>
			<param name="b">The object to be compared to a.</param>
		</member>
		<member name="P:Microsoft.PointOfService.CashCount.Count">
			<summary>Gets the number of bills or coins.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.CashCount.NominalValue">
			<summary>Gets the face value of the bill or coin.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.CashCount.Type">
			<summary>Gets the type of cash, currency or coins.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.CashCounts">
			<summary>Defines a programmatic structure used to create an array representing the total cash in a Cash Changer device.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.CashCounts.#ctor(Microsoft.PointOfService.CashCount[],System.Boolean)">
			<summary>Creates an instance of the <see cref="T:Microsoft.PointOfService.CashCounts"></see> structure from parameters specifying the instance's constituent parts.</summary>
			<param name="discrepancy">If true, some cash could not be included in counts; otherwise, false.</param>
			<param name="counts"><see cref="T:Microsoft.PointOfService.CashCount"></see> array.</param>
		</member>
		<member name="M:Microsoft.PointOfService.CashCounts.op_Equality(Microsoft.PointOfService.CashCounts,System.Object)">
			<summary>Compares the specified <see cref="T:Microsoft.PointOfService.CashCounts"></see> and object and determines whether they are equal.</summary>
			<returns>True if a and b are equal. Otherwise, false.</returns>
			<param name="a">The <see cref="T:Microsoft.PointOfService.CashCounts"></see> to compare with b.</param>
			<param name="b">The object to compare with a.</param>
		</member>
		<member name="M:Microsoft.PointOfService.CashCounts.op_Inequality(Microsoft.PointOfService.CashCounts,System.Object)">
			<summary>Compares the specified <see cref="T:Microsoft.PointOfService.CashCounts"></see> and object and determines whether they are unequal.</summary>
			<returns>True if a and b are not equal. Otherwise, false.</returns>
			<param name="a">The <see cref="T:Microsoft.PointOfService.CashCounts"></see> to compare with b.</param>
			<param name="b">The object to compare with a.</param>
		</member>
		<member name="P:Microsoft.PointOfService.CashCounts.Discrepancy">
			<summary>Gets a Boolean value that indicates the discrepancy of cash that is not included in the count.</summary>
			<returns>If true, some cash could not be included in a <see cref="T:Microsoft.PointOfService.CashCount"></see>; otherwise, false.</returns>
		</member>
		<member name="T:Microsoft.PointOfService.CashCountType">
			<summary>Enumerates the possible types of cash, bill or coin.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CashCountType.Bill">
			<summary>Indicates paper currency.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CashCountType.Coin">
			<summary>Indicates coin currency.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.CashDepositAction">
			<summary>Enumerates the possible ways to deal with deposited cash.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CashDepositAction.Change">
			<summary>The deposited amount is greater than the amount required.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CashDepositAction.NoChange">
			<summary>The deposited amount is equal to or less than the amount required.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CashDepositAction.Repay">
			<summary>The deposit is to be repaid through the cash deposit exit or the cash payment exit.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.CashDepositPause">
			<summary>Enumerates two possible values, Pause and Resume, for a cash acceptance operation.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CashDepositPause.Pause">
			<summary>Cash acceptance is paused.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CashDepositPause.Restart">
			<summary>Cash acceptance is resumed.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.CashDepositStatus">
			<summary>Enumerates the possible current status values of the cash acceptance operation.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CashDepositStatus.Count">
			<summary>Counting or repaying the cash accepted.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CashDepositStatus.End">
			<summary>Finished accepting cash.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CashDepositStatus.Jam">
			<summary>A mechanical fault has occurred.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CashDepositStatus.None">
			<summary>Does not support cash acceptance.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CashDepositStatus.Start">
			<summary>Start accepting cash.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.CashDrawer">
			<summary>Defines the programmatic interface for a UPOS Cash Drawer device.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.CashDrawer.#ctor">
			<summary>Creates an instance of the <see cref="T:Microsoft.PointOfService.CashDrawer"></see> class.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CashDrawer.StatisticDrawerFailedOpenCount">
			<summary>Incremented during the <see cref="OpenDrawer"></see> method if the cash drawer does not open.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CashDrawer.StatisticDrawerGoodOpenCount">
			<summary>Incremented during the <see cref="OpenDrawer"></see> method if the cash drawer successfully opens.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CashDrawer.StatusClosed">
			<summary>Indicates that the cash drawer is closed. </summary>
		</member>
		<member name="F:Microsoft.PointOfService.CashDrawer.StatusOpen">
			<summary>Indicates that the cash drawer is open. </summary>
		</member>
		<member name="M:Microsoft.PointOfService.CashDrawer.OpenDrawer">
			<summary>Physically opens the cash drawer.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.CashDrawer.WaitForDrawerClose(System.Int32,System.Int32,System.Int32,System.Int32)">
			<summary>The application calls <see cref="WaitForDrawerClose"></see> to wait until the cash drawer is closed. If the drawer is still open after beepTimeout milliseconds, the message beeper should be started.</summary>
			<param name="beepDelay">Number of milliseconds between the sounding of beeper tones.</param>
			<param name="beepDuration">Number of milliseconds that the beep tone sounds.</param>
			<param name="beepFrequency">Audio frequency of the message beeper in hertz.</param>
			<param name="beepTimeout">Number of milliseconds to wait before starting a message beeper.</param>
		</member>
		<member name="P:Microsoft.PointOfService.CashDrawer.CapStatus">
			<summary>Gets the status of the cash drawer status, open or closed.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.CashDrawer.CapStatusMultiDrawerDetect">
			<summary>Gets the Boolean value that indicates the status of multidrawer configurations. </summary>
		</member>
		<member name="P:Microsoft.PointOfService.CashDrawer.DrawerOpened">
			<summary>Gets the Boolean value that indicates whether the drawer is open.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.CashDrawer.IsExclusiveUseDevice">
			<summary>Gets the Boolean value that indicates whether the Cash Drawer is an exclusive-use device.</summary>
			<returns>A value of true indicates the fiscal printer is an exclusive-use device. Otherwise, the value is false.</returns>
		</member>
		<member name="T:Microsoft.PointOfService.CashUnits">
			<summary>Holds arrays of bill and coin types for use in POS devices such as Cash Changers and Bill Dispensers.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.CashUnits.#ctor(System.Int32[],System.Int32[])">
			<summary>Creates an instance of the <see cref="T:Microsoft.PointOfService.CashUnits"></see> class from parameters specifying the constituent parts of the instance.</summary>
			<param name="c oins">An integer array that contains a set of coin types for the current currency type.</param>
			<param name="b ills">An integer array that contains a set of bill types for the current currency type.</param>
		</member>
		<member name="M:Microsoft.PointOfService.CashUnits.op_Equality(Microsoft.PointOfService.CashUnits,System.Object)">
			<summary>Compares the specified CashUnits and object to determine whether they are equal.</summary>
			<returns>True if a is equal to b; otherwise, false.</returns>
			<param name="a">The <see cref="T:Microsoft.PointOfService.CashUnits"></see> to be compared to b.</param>
			<param name="b">The object to be compared to a.</param>
		</member>
		<member name="M:Microsoft.PointOfService.CashUnits.op_Inequality(Microsoft.PointOfService.CashUnits,System.Object)">
			<summary>Returns a value that indicates whether an instance of <see cref="T:Microsoft.PointOfService.CashUnits"></see> and an object are not equal.</summary>
			<returns>True if a is not equal to b; otherwise, false.</returns>
			<param name="a">The <see cref="T:Microsoft.PointOfService.CashUnits"></see> to be compared to b.</param>
			<param name="b">The object to be compared to a.</param>
		</member>
		<member name="T:Microsoft.PointOfService.Cat">
			<summary>Defines the programmatic interface for a UPOS credit authorization terminal (CAT) device.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.Cat.#ctor">
			<summary>Creates an instance of the <see cref="Cat"></see> class.</summary>
		</member>
		<member name="E:Microsoft.PointOfService.Cat.ErrorEvent">
			<summary>Notifies the application that a CAT error has been detected and suitable response by the application is necessary to process the error condition.</summary>
		</member>
		<member name="E:Microsoft.PointOfService.Cat.OutputCompleteEvent">
			<summary>Notifies the application that the queued output request associated with the <see cref="P:Microsoft.PointOfService.OutputCompleteEventArgs.OutputId"></see> property has completed successfully.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Cat.ExtendedErrorCenterError">
			<summary>Indicates an error was returned from the approval agency in <see cref="P:Microsoft.PointOfService.Cat.CenterResultCode"></see>.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Cat.ExtendedErrorCommandError">
			<summary>Indicates the command sent to the CAT is incorrect.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Cat.ExtendedErrorCommunicationError">
			<summary>Indicates a communication error has occurred between the approval agency and the CAT.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Cat.ExtendedErrorDailyLogOverflow">
			<summary>Indicates the daily log is too big to be stored.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Cat.ExtendedErrorDeficient">
			<summary>Indicates the balance is insufficient for an electronic money device. The device cannot close the settlement.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Cat.ExtendedErrorOverDeposit">
			<summary>Indicates a failure occurs for an electronic money device if the attempted settlement amount exceeds the charge account limit.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Cat.ExtendedErrorReset">
			<summary>Indicates the CAT was stopped during processing by the CAT Reset key or Stop key.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.Cat.AccessDailyLog(System.Int32,Microsoft.PointOfService.CatLogs,System.Int32)">
			<summary>Gets the daily log from CAT.</summary>
			<param name="sequenceNumber">The sequence number to get the daily log.</param>
			<param name="type">Specifies whether the daily log is intermediate total or final total and erase.</param>
			<param name="timeout">The maximum waiting time (in milliseconds) until the response is received from the CAT device. WaitForever, 0, and positive values can be specified.</param>
		</member>
		<member name="M:Microsoft.PointOfService.Cat.AuthorizeCompletion(System.Int32,System.Decimal,System.Decimal,System.Int32)">
			<summary>Authorizes the purchase after approval.</summary>
			<param name="sequenceNumber">Sequence number for approval.</param>
			<param name="amount">Purchase amount for approval.</param>
			<param name="taxOthers">Tax and other amounts for approval.</param>
			<param name="timeout">The maximum wait time (in milliseconds) until the response is received from the CAT device. WaitForever, 0, and positive values can be specified.</param>
		</member>
		<member name="M:Microsoft.PointOfService.Cat.AuthorizePreSales(System.Int32,System.Decimal,System.Decimal,System.Int32)">
			<summary>Preauthorizes a purchase.</summary>
			<param name="sequenceNumber">Sequence number for approval.</param>
			<param name="amount">Purchase amount for approval.</param>
			<param name="taxOthers">Tax and other amounts for approval.</param>
			<param name="timeout">The maximum wait time (in milliseconds) until the response is received from the CAT device. WaitForever, 0, and positive values can be specified.</param>
		</member>
		<member name="M:Microsoft.PointOfService.Cat.AuthorizeRefund(System.Int32,System.Decimal,System.Decimal,System.Int32)">
			<summary>Approves a refund for a purchase.</summary>
			<param name="sequenceNumber">Sequence number for approval.</param>
			<param name="amount">Purchase amount for approval.</param>
			<param name="taxOthers">Tax and other amounts for approval.</param>
			<param name="timeout">The maximum wait time (in milliseconds) until the response is received from the CAT device. WaitForever, 0, and positive values can be specified.</param>
		</member>
		<member name="M:Microsoft.PointOfService.Cat.AuthorizeSales(System.Int32,System.Decimal,System.Decimal,System.Int32)">
			<summary>Approves a purchase.</summary>
			<param name="sequenceNumber">Sequence number for approval.</param>
			<param name="amount">Purchase amount for approval.</param>
			<param name="taxOthers">Tax and other amounts for approval.</param>
			<param name="timeout">The maximum wait time (in milliseconds) until the response is received from the CAT device. WaitForever, 0, and positive values can be specified.</param>
		</member>
		<member name="M:Microsoft.PointOfService.Cat.AuthorizeVoid(System.Int32,System.Decimal,System.Decimal,System.Int32)">
			<summary>Approves cancellation of a purchase.</summary>
			<param name="sequenceNumber">Sequence number for approval.</param>
			<param name="amount">Purchase amount for approval.</param>
			<param name="taxOthers">Tax and other amounts for approval.</param>
			<param name="timeout">The maximum wait time (in milliseconds) until the response is received from the CAT device. WaitForever, 0, and positive values can be specified.</param>
		</member>
		<member name="M:Microsoft.PointOfService.Cat.AuthorizeVoidPreSales(System.Int32,System.Decimal,System.Decimal,System.Int32)">
			<summary>Preauthorizes a cancellation.</summary>
			<param name="sequenceNumber">Sequence number for approval.</param>
			<param name="amount">Purchase amount for approval.</param>
			<param name="taxOthers">Tax and other amounts for approval.</param>
			<param name="timeout">The maximum wait time (in milliseconds) until the response is received from the CAT device. WaitForever, 0, and positive values can be specified.</param>
		</member>
		<member name="M:Microsoft.PointOfService.Cat.CashDeposit(System.Int32,System.Decimal,System.Int32)">
			<summary>Charges the specified amount of money to the account.</summary>
			<param name="sequenceNumber">Sequence number for charge.</param>
			<param name="amount">Amount of money for charge.</param>
			<param name="timeout">The maximum wait time (in milliseconds) until the response is received from the CAT device. WaitForever, 0, and positive values can be specified.</param>
		</member>
		<member name="M:Microsoft.PointOfService.Cat.CheckCard(System.Int32,System.Int32)">
			<summary>Indicates that a card check is intended.</summary>
			<param name="sequenceNumber">Sequence number for approval.</param>
			<param name="timeout">The maximum wait time (in milliseconds) until the response is received from the CAT device. WaitForever, 0, and positive values can be specified.</param>
		</member>
		<member name="M:Microsoft.PointOfService.Cat.ClearOutput">
			<summary>Clears outputs that have been buffered for the unit.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.Cat.LockTerminal">
			<summary>Sets the security lock.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.Cat.UnlockTerminal">
			<summary>Releases the security lock.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Cat.AccountNumber">
			<summary>Gets the credit card number of the settled account.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Cat.AdditionalSecurityInformation">
			<summary>Gets or sets additional security information for an authorization operation.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Cat.ApprovalCode">
			<summary>Gets the credit approval code.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Cat.AsyncMode">
			<summary>Gets or sets the Boolean value that indicates whether the authorization runs asynchronously.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Cat.Balance">
			<summary>Gets a credit card balance.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Cat.CapAdditionalSecurityInformation">
			<summary>Gets the Boolean value that indicates whether the <see cref="P:Microsoft.PointOfService.Cat.AdditionalSecurityInformation"></see> property can be used.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Cat.CapAuthorizeCompletion">
			<summary>Gets the Boolean value that indicates whether the <see cref="M:Microsoft.PointOfService.Cat.AuthorizeCompletion(System.Int32,System.Decimal,System.Decimal,System.Int32)"></see> method is implemented.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Cat.CapAuthorizePreSales">
			<summary>Gets the Boolean value that indicates whether the <see cref="M:Microsoft.PointOfService.Cat.AuthorizePreSales(System.Int32,System.Decimal,System.Decimal,System.Int32)"></see> method is implemented.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Cat.CapAuthorizeRefund">
			<summary>Gets the Boolean value that indicates whether the <see cref="M:Microsoft.PointOfService.Cat.AuthorizeRefund(System.Int32,System.Decimal,System.Decimal,System.Int32)"></see> method is implemented.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Cat.CapAuthorizeVoid">
			<summary>Gets the Boolean value that indicates whether the <see cref="M:Microsoft.PointOfService.Cat.AuthorizeVoid(System.Int32,System.Decimal,System.Decimal,System.Int32)"></see> method is implemented.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Cat.CapAuthorizeVoidPreSales">
			<summary>Gets the Boolean value that indicates whether the <see cref="M:Microsoft.PointOfService.Cat.AuthorizeVoidPreSales(System.Int32,System.Decimal,System.Decimal,System.Int32)"></see> method is implemented.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Cat.CapCashDeposit">
			<summary>Gets the Boolean value that indicates whether the <see cref="M:Microsoft.PointOfService.Cat.CashDeposit(System.Int32,System.Decimal,System.Int32)"></see> method is implemented.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Cat.CapCenterResultCode">
			<summary>Gets the Boolean value that indicates whether the <see cref="P:Microsoft.PointOfService.Cat.CenterResultCode"></see> method is implemented.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Cat.CapCheckCard">
			<summary>Gets the Boolean value that indicates whether the <see cref="M:Microsoft.PointOfService.Cat.CheckCard(System.Int32,System.Int32)"></see> method is implemented.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Cat.CapDailyLog">
			<summary>Gets the daily log ability of the device.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Cat.CapInstallments">
			<summary>Gets the Boolean value that indicates whether the "Installments" item is provided.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Cat.CapLockTerminal">
			<summary>Gets a Boolen value that indicates whether the device has a security lock and can set it.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Cat.CapLogStatus">
			<summary>Gets a Boolen value that indicates whether the device can give information about the status of the log.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Cat.CapPaymentDetail">
			<summary>Gets the Boolean value that indicates whether the <see cref="P:Microsoft.PointOfService.Cat.PaymentDetail"></see> property is implemented.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Cat.CapTaxOthers">
			<summary>Gets the Boolean value that indicates whether the item "TaxOthers" is provided.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Cat.CapTrainingMode">
			<summary>Gets the Boolean value that indicates whether the <see cref="P:Microsoft.PointOfService.Cat.TrainingMode"></see> property is implemented.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Cat.CapTransactionNumber">
			<summary>Gets the Boolean value that indicates whether the <see cref="P:Microsoft.PointOfService.Cat.TransactionNumber"></see> property is implemented.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Cat.CapUnlockTerminal">
			<summary>Gets the Boolean value that indicates whether the security lock can be released.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Cat.CardCompanyId">
			<summary>Gets the credit card company ID.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Cat.CenterResultCode">
			<summary>Gets the code from the approval agency.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Cat.DailyLog">
			<summary>Gets the result of the <see cref="M:Microsoft.PointOfService.Cat.AccessDailyLog(System.Int32,Microsoft.PointOfService.CatLogs,System.Int32)"></see> method.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Cat.IsExclusiveUseDevice">
			<summary>Gets the Boolean value that indicates whether the credit authorization terminal is an exclusive-use device.</summary>
			<returns>A value of true indicates the fiscal printer is an exclusive-use device. Otherwise, the value is false.</returns>
		</member>
		<member name="P:Microsoft.PointOfService.Cat.LogStatus">
			<summary>Gets the status of the dealing log of the CAT device.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Cat.OutputId">
			<summary>Gets the identifier of the most recently started asynchronous output.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Cat.PaymentCondition">
			<summary>Gets the payment condition of the most recent successful authorization operation.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Cat.PaymentDetail">
			<summary>Gets payment condition details as the result of an authorization operation.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Cat.PaymentMedia">
			<summary>Gets or sets the payment media type that the approval method should approve.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Cat.SequenceNumber">
			<summary>Gets a "sequence number" as the result of each method call.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Cat.SettledAmount">
			<summary>Gets the amount of the settlement for an electronic money device.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Cat.SlipNumber">
			<summary>Gets a "slip number" as the result of each authorization operation.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Cat.TrainingMode">
			<summary>Gets or sets the Boolean value that indicates whether each operation is run in training mode.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Cat.TransactionNumber">
			<summary>Gets a transaction number as the result of each authorization operation.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Cat.TransactionType">
			<summary>Gets a transaction number as the result of each authorization operation.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.CatLogs">
			<summary>Enumerates the available log functions for a credit authorization terminal (CAT) device.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CatLogs.None">
			<summary>The CAT device does not have the daily log functions.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CatLogs.Reporting">
			<summary>The CAT device has only an intermediate total function that reads the daily log, but does not erase the log.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CatLogs.ReportingAndSettlement">
			<summary>The CAT device has the intermediate total function and the final total and erases daily log functions.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CatLogs.Settlement">
			<summary>The CAT device has only the final total and erases daily log functions.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.CharacterSetCapability">
			<summary>Enumerates the possible default character sets for a printer, line display, or point card reader/writer device.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CharacterSetCapability.Alpha">
			<summary>The default character set supports uppercase alphabetic plus numeric data, space, minus, and period.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CharacterSetCapability.Ansi">
			<summary>The default character set supports ANSI characters. </summary>
		</member>
		<member name="F:Microsoft.PointOfService.CharacterSetCapability.Ascii">
			<summary>The default character set supports all ASCII characters between 20-hex and 7F-hex.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CharacterSetCapability.Kana">
			<summary>The default character set supports partial code page 932. This includes ASCII characters 20-hex through 7F-hex and the Japanese kana characters A1-hex through DF-hex, but excluding the Japanese kanji characters.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CharacterSetCapability.Kanji">
			<summary>The default character set supports code page 932, including the Shift-JIS kanji characters, Levels 1 and 2.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CharacterSetCapability.Numeric">
			<summary>The default character set suports numeric data, plus space, minus, and period. (Line Display devices only.)</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CharacterSetCapability.Unicode">
			<summary>The default character set supports UNICODE.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CharacterSetCapability.Windows">
			<summary>The default character set supports ANSI characters.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.CheckColors">
			<summary>Enumerates the possible image format color ranges for a check scanner.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CheckColors.Color16">
			<summary>16 colors</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CheckColors.Color256">
			<summary>256 colors</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CheckColors.Full">
			<summary>Full colors</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CheckColors.GrayScale">
			<summary>Grayscale</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CheckColors.Mono">
			<summary>One color</summary>
		</member>
		<member name="T:Microsoft.PointOfService.CheckCountryCode">
			<summary>Enumerates the possible countries/regions in which the check originated.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CheckCountryCode.Canada">
			<summary>Canada</summary>
		</member>
        <member name="F:Microsoft.PointOfService.CheckCountryCode.Mexico">
            <summary>Mexico</summary>
        </member>
        <member name="F:Microsoft.PointOfService.CheckCountryCode.CMC7">
            <summary>Unknown (font is CMC7)</summary>
        </member>
        <member name="F:Microsoft.PointOfService.CheckCountryCode.Other">
            <summary>Unknown (font is OCR-A or OCR-B)</summary>
        </member>
        <member name="F:Microsoft.PointOfService.CheckCountryCode.Unknown">
			<summary>Unknown (font is E-13B)</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CheckCountryCode.Usa">
			<summary>United States</summary>
		</member>
		<member name="T:Microsoft.PointOfService.CheckImageClear">
			<summary>Enumerates the possible values for how an image file is to be located. </summary>
		</member>
		<member name="F:Microsoft.PointOfService.CheckImageClear.All">
			<summary>Clears all images in the device.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CheckImageClear.FileId">
			<summary>Locates the file to be cleared using the <see cref="FileID"></see> property value.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CheckImageClear.FileIndex">
			<summary>Locates the file to be cleared using the <see cref="FileIndex"></see> property value.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CheckImageClear.ImageTagData">
			<summary>Locates the file to be cleared using the <see cref="ImageTagData"></see> property value.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.CheckImageFormats">
			<summary>Enumerates the possible formats of a data image file.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CheckImageFormats.Bmp">
			<summary>BMP format</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CheckImageFormats.Gif">
			<summary>GIF format</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CheckImageFormats.Jpeg">
			<summary>JPEG format</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CheckImageFormats.Native">
			<summary>Hardware native format</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CheckImageFormats.Tiff">
			<summary>TIFF format</summary>
		</member>
		<member name="T:Microsoft.PointOfService.CheckImageLocate">
			<summary>Enumerates the possible values for how an image file is to be retrieved from memory.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CheckImageLocate.FileId">
			<summary>Locates the file to be cleared by using the <see cref="FileID"></see> property value.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CheckImageLocate.FileIndex">
			<summary>Locates the file to be cleared by using the <see cref="FileIndex"></see> property value.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CheckImageLocate.ImageTagData">
			<summary>Locates the file to be cleared by using the <see cref="ImageTagData"></see> property value.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.CheckScanner">
			<summary>Defines the programmatic interface for a UPOS Check Scanner device.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.CheckScanner.#ctor">
			<summary>Creates an instance of the <see cref="CheckScanner"></see> class.</summary>
		</member>
		<member name="E:Microsoft.PointOfService.CheckScanner.DataEvent">
			<summary>Raised to notify the application that a scanned check image is available.</summary>
		</member>
		<member name="E:Microsoft.PointOfService.CheckScanner.ErrorEvent">
			<summary>Raised to indicate an error has been detected while trying to read keyboard device input data.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CheckScanner.AutomaticContrast">
			<summary>Indicates the device can automatically adjust the contrast of the image.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CheckScanner.CropAreaBottom">
			<summary>Indicates that the y endpoint value of the scanned image is set to the value of the <see cref="P:Microsoft.PointOfService.CheckScanner.DocumentHeight"></see> property. </summary>
		</member>
		<member name="F:Microsoft.PointOfService.CheckScanner.CropAreaEntireImage">
			<summary>Indicates the crop area is equal to the scanned image. </summary>
		</member>
		<member name="F:Microsoft.PointOfService.CheckScanner.CropAreaResetAll">
			<summary>Indicates that the crop area definitions (as specified by the value of the <see cref="P:Microsoft.PointOfService.CheckScanner.MaxCropAreas"></see> property) have their x,y and width/height values reset to 0,0 and <see cref="P:Microsoft.PointOfService.CheckScanner.DocumentWidth"></see> and <see cref="P:Microsoft.PointOfService.CheckScanner.DocumentHeight"></see>, respectively.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CheckScanner.CropAreaRight">
			<summary>Indicates that the x endpoint value of a scanned image are set to the value of the <see cref="P:Microsoft.PointOfService.CheckScanner.DocumentWidth"></see> property.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CheckScanner.ExtendedErrorCheck">
			<summary>Indicates that a check was detected in the check scanner device. </summary>
		</member>
		<member name="F:Microsoft.PointOfService.CheckScanner.ExtendedErrorNoCheck">
			<summary>Indicates that no check was detected in the check scanner device. </summary>
		</member>
		<member name="F:Microsoft.PointOfService.CheckScanner.ExtendedErrorNoRoom">
			<summary>Indicates there is no room for the scanned image to be stored in memory. </summary>
		</member>
		<member name="F:Microsoft.PointOfService.CheckScanner.GetRawImageData">
			<summary>Indicates the image data from the check scanner is in a native format that cannot be converted to a bitmap.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CheckScanner.StatusScanComplete">
			<summary>Indicates that the check scan is complete.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.CheckScanner.BeginInsertion(System.Int32)">
			<summary>Starts the document insertion process.</summary>
			<param name="timeout">Specifies the number of milliseconds before failing the method. If timeout is set to 0 (zero), the method tries to begin insertion mode, returns immediately if this is successful. Otherwise, an exception is thrown. If timeout is set to WaitForever, the method tries to begin insertion mode, waits as long as needed until either the check is inserted or an error occurs.</param>
		</member>
		<member name="M:Microsoft.PointOfService.CheckScanner.BeginRemoval(System.Int32)">
			<summary>Starts the document removal process.</summary>
			<param name="timeout">Gives the number of milliseconds before failing the method. If timeout is set to 0 (zero), the method tries to begin removal mode, returns immediately if this is successful. Otherwise, it throws an exception. If timeout is set to WaitForever (-1), the method tries to begin removal mode, waits as long as needed until either the check is removed or an error occurs.</param>
		</member>
		<member name="M:Microsoft.PointOfService.CheckScanner.ClearImage(Microsoft.PointOfService.CheckImageClear)">
			<summary>Clears a specific image or all the images in the device memory.</summary>
			<param name="by">Indicates how the image file is to be located so that it can be removed from the device storage. Possible values are defined by the <see cref="T:Microsoft.PointOfService.CheckImageClear"></see> enumerator.</param>
		</member>
		<member name="M:Microsoft.PointOfService.CheckScanner.ClearInput">
			<summary>Clears all device input that has been buffered.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.CheckScanner.ClearInputProperties">
			<summary>Resets the values of properties altered by <see cref="E:Microsoft.PointOfService.CheckScanner.DataEvent"></see> or <see cref="E:Microsoft.PointOfService.CheckScanner.ErrorEvent"></see>.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.CheckScanner.DefineCropArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
			<summary>Establishes one or more cropping areas that can be applied to a scanned image.</summary>
			<param name="cropAreaId">The numeric identifier for the defined crop area.</param>
			<param name="width">The value added to the X-coordinate to determine the x endpoint for the cropping area. If set to <see cref="F:Microsoft.PointOfService.CheckScanner.CropAreaRight"></see>, the x endpoint value is set to the value of the <see cref="P:Microsoft.PointOfService.CheckScanner.DocumentWidth"></see> property.</param>
			<param name="height">The value added to the Y-coordinate to determine the y endpoint for the cropping area. If set to <see cref="F:Microsoft.PointOfService.CheckScanner.CropAreaBottom"></see>, the y endpoint value is set to the value of the <see cref="P:Microsoft.PointOfService.CheckScanner.DocumentHeight"></see> property.</param>
			<param name="x">The starting X-coordinate of the cropping area.</param>
			<param name="y">The starting Y-coordinate of the cropping area.</param>
		</member>
		<member name="M:Microsoft.PointOfService.CheckScanner.EndInsertion">
			<summary>Ends the document insertion process.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.CheckScanner.EndRemoval">
			<summary>Ends the document removal or ejection mode.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.CheckScanner.RetrieveImage(System.Int32)">
			<summary>Retrieves the most recently scanned image that resides in the available memory and uses it to populate the <see cref="P:Microsoft.PointOfService.CheckScanner.ImageData"></see> property.</summary>
			<param name="cropAreaId">Specifies the numeric identifier for the storage location of the crop area definition to be applied to the most recently scanned image held in the working area memory of the device. If cropAreaID is set to <see cref="F:Microsoft.PointOfService.CheckScanner.CropAreaEntireImage"></see>, the area of the most recently scanned image is retrieved.</param>
		</member>
		<member name="M:Microsoft.PointOfService.CheckScanner.RetrieveMemory(Microsoft.PointOfService.CheckImageLocate)">
			<summary>Retrieves an image that was stored in memory and uses it to set the <see cref="P:Microsoft.PointOfService.CheckScanner.ImageData"></see> property.</summary>
			<param name="by">Indicates how the image file is to be located so that it can be retrieved from the device memory storage. Possible values are defined by the <see cref="T:Microsoft.PointOfService.CheckImageLocate"></see> enumeration.</param>
		</member>
		<member name="M:Microsoft.PointOfService.CheckScanner.StoreImage(System.Int32)">
			<summary>Stores an image or a cropped area of the image in the memory of the device.</summary>
			<param name="cropAreaId">Specifies the numeric identifier for the storage location of the crop area definition to be applied to the image data file that is currently in the buffer memory area of the check scanner device. If cropAreaID is set to <see cref="F:Microsoft.PointOfService.CheckScanner.CropAreaEntireImage"></see> then an exact image of the buffer memory is stored in the device memory (no cropping applied).</param>
		</member>
		<member name="P:Microsoft.PointOfService.CheckScanner.AutoDisable">
			<summary>Gets or sets the Boolean value that indicates whether POS for .NET automatically disables the device when data is received.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.CheckScanner.CapAutoContrast">
			<summary>Gets the Boolean value that indicates whether the contrast can be adjusted automatically. </summary>
		</member>
		<member name="P:Microsoft.PointOfService.CheckScanner.CapAutoGenerateFileId">
			<summary>Gets the Boolean value that indicates whether the Check Scanner device can create a file name for the image file automatically.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.CheckScanner.CapAutoGenerateImageTagData">
			<summary>Gets the Boolean value that indicates whether the Check Scanner device can generate tag data automatically.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.CheckScanner.CapAutoSize">
			<summary>Gets the Boolean value that indicates whether the size of the scanned document can be set automatically. </summary>
		</member>
		<member name="P:Microsoft.PointOfService.CheckScanner.CapColor">
			<summary>Gets the Boolean value that indicates whether the Check Scanner device supports image formats other than bitonal.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.CheckScanner.CapConcurrentMicr">
			<summary>Gets the Boolean value that indicates whether the Magnetic Ink Character Recognition (MICR) data can be captured.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.CheckScanner.CapContrast">
			<summary>Gets the Boolean value that indicates the ability of the device to lighten or darken the scanned image.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.CheckScanner.CapDefineCropArea">
			<summary>Gets the Boolean value that indicates whether the Check Scanner device supports a feature that allows cropping of areas of interest within the scan image area defined by the <see cref="P:Microsoft.PointOfService.CheckScanner.DocumentHeight"></see> and <see cref="P:Microsoft.PointOfService.CheckScanner.DocumentWidth"></see> properties.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.CheckScanner.CapImageFormat">
			<summary>Gets the image file formats that this Check Scanner device supports.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.CheckScanner.CapImageTagData">
			<summary>Gets the Boolean value that indicates whether the Check Scanner device can set tag data.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.CheckScanner.CapMicrDevice">
			<summary>Gets the Boolean value that indicates whether the Check Scanner device supports a check Magnetic Ink Character Recognition (MICR) read function.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.CheckScanner.CapStoreImageFiles">
			<summary>Gets the Boolean value that indicates whether the Check Scanner device can store check images.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.CheckScanner.CapValidationDevice">
			<summary>Gets the Boolean value that indicates whether a check has to be removed before validation printing.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.CheckScanner.Color">
			<summary>Gets or sets the image scan mode for later document scan operations.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.CheckScanner.ConcurrentMicr">
			<summary>Gets or sets the Boolean value that indicates whether the Check Scanner device can conduct a MICR read.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.CheckScanner.Contrast">
			<summary>Gets or sets the contrast to adjust the darkness of the image.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.CheckScanner.CropAreaCount">
			<summary>Gets the number of defined crop areas that may be applied to the captured image.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.CheckScanner.DataCount">
			<summary>Gets the number of data events currently queued by the service object.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.CheckScanner.DataEventEnabled">
			<summary>Gets or sets the Boolean value that indicates whether the service object can deliver a queued event.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.CheckScanner.DocumentHeight">
			<summary>Gets or sets the height of the document scanned or the height of the document to be scanned.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.CheckScanner.DocumentWidth">
			<summary>Gets or sets the width of the document scanned or the width of the document to be scanned.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.CheckScanner.FileId">
			<summary>Gets or sets the file name associated with the image data file.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.CheckScanner.FileIndex">
			<summary>Gets or sets the file location associated with the image data file. </summary>
		</member>
		<member name="P:Microsoft.PointOfService.CheckScanner.ImageData">
			<summary>Gets the image data. </summary>
		</member>
		<member name="P:Microsoft.PointOfService.CheckScanner.ImageFormat">
			<summary>Gets or sets the data format of the image file that the device uses when it captures an image.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.CheckScanner.ImageMemoryStatus">
			<summary>Gets the current memory availability status if the device can store multiple image files.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.CheckScanner.ImageTagData">
			<summary>Gets or sets a string that specifies the tag name for the captured image data. </summary>
		</member>
		<member name="P:Microsoft.PointOfService.CheckScanner.IsExclusiveUseDevice">
			<summary>Gets the Boolean value that indicates whether the Check Scanner is an exclusive-use device.</summary>
			<returns>A value of true indicates the fiscal printer is an exclusive-use device. Otherwise, the value is false.</returns>
		</member>
		<member name="P:Microsoft.PointOfService.CheckScanner.MapMode">
			<summary>Gets or sets the units of measure that are currently valid for the Check Scanner device.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.CheckScanner.MaxCropAreas">
			<summary>Gets the maximum number of crop areas the device can support.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.CheckScanner.Quality">
			<summary>Gets or sets the resolution of the device when a scan image is to occur. The resolution value is defined as dpi (dots per inch).</summary>
		</member>
		<member name="P:Microsoft.PointOfService.CheckScanner.QualityList">
			<summary>Gets the resolutions that the Check Scanner device can support.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.CheckScanner.RemainingImagesEstimate">
			<summary>Gets a "best guess" estimate of the remaining number of images that can be stored.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.CheckType">
			<summary>Enumerates the valid check types for the most recently read Magnetic Ink Character Recognition (MICR) data.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CheckType.Business">
			<summary>The check is a business or commercial check.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CheckType.Personal">
			<summary>The check is a personal check.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CheckType.Unknown">
			<summary>The type of check is unknown.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.ClockFunction">
			<summary>Enumerates valid clock commands.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ClockFunction.Move">
			<summary>Moves an instantiated clock to a new position.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ClockFunction.Pause">
			<summary>Temporarily stops a clock from updating the display until a Resume is requested.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ClockFunction.Resume">
			<summary>Resumes a clock that was previously paused, in such a way that display updates continue. </summary>
		</member>
		<member name="F:Microsoft.PointOfService.ClockFunction.Start">
			<summary>Starts a clock display assigned to the given clockId.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ClockFunction.Stop">
			<summary>Permanently stops the clock from updating the display, and the clockId becomes free.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.ClockMode">
			<summary>Enumerates the valid display formats for the clock.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ClockMode.Hours12">
			<summary>Displays a 12 hour clock with "HH:MM:SS" format.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ClockMode.Hours24">
			<summary>Displays a 24 hour clock with "HH:MM:SS" format.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ClockMode.Normal">
			<summary>Displays a clock with "MM:SS" format.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ClockMode.Short">
			<summary>Displays a clock with "M:SS" format.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.CoinAcceptor">
			<summary>Defines the programmatic interface of a UPOS Coin Acceptor device.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.CoinAcceptor.#ctor">
			<summary>Creates an instance of the CoinAcceptor class.</summary>
		</member>
		<member name="E:Microsoft.PointOfService.CoinAcceptor.DataEvent">
			<summary>Notifies the application when one or more coins have been accepted.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CoinAcceptor.StatusFull">
			<summary>Indicates that the Coin Acceptor is full.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CoinAcceptor.StatusFullOk">
			<summary>Indicates that the Coin Acceptor is no longer full.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CoinAcceptor.StatusJam">
			<summary>Indicates that the Coin Acceptor is jammed.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CoinAcceptor.StatusJamOk">
			<summary>Indicates that the Coin Acceptor is no longer jammed.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CoinAcceptor.StatusNearFull">
			<summary>Indicates that the Coin Acceptor is almost full.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.CoinAcceptor.AdjustCashCounts(System.Collections.Generic.IEnumerable{Microsoft.PointOfService.CashCount})">
			<summary>Sets the initial amounts in the Coin Acceptor after setup or adjusts cash counts after replenishment or removal.</summary>
			<param name="cashCounts">The cashCounts parameter contains cash types and amounts to be initialized.</param>
		</member>
		<member name="M:Microsoft.PointOfService.CoinAcceptor.BeginDeposit">
			<summary>Begins the cash acceptance process.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.CoinAcceptor.ClearInput">
			<summary>Clears all device input that has been buffered.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.CoinAcceptor.EndDeposit(Microsoft.PointOfService.EndDepositAction)">
			<summary>Indicates that the cash acceptance operation has been completed.</summary>
			<param name="success">The deposit is accepted and the deposited amount is equal to or less than the amount required.</param>
		</member>
		<member name="M:Microsoft.PointOfService.CoinAcceptor.FixDeposit">
			<summary>Updates property values to reflect the current values in the Coin Acceptor.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.CoinAcceptor.PauseDeposit(Microsoft.PointOfService.CashDepositPause)">
			<summary>Suspends or resumes depositing cash.</summary>
			<param name="control">Indicates whether the coin acceptance process will be paused or restarted. If the value of this parameter is Pause, acceptance will be paused. If the value is Restart, cash acceptance will resume.</param>
		</member>
		<member name="P:Microsoft.PointOfService.CoinAcceptor.IsExclusiveUseDevice">
			<summary>Gets the Boolean value that indicates whether the Coin Acceptor is an exclusive-use device.</summary>
			<returns>A value of true indicates the fiscal printer is an exclusive-use device.  Otherwise, the value will be false.</returns>
		</member>
		<member name="T:Microsoft.PointOfService.CoinDispenser">
			<summary>Defines the programmatic interface for a UPOS Coin Dispenserdevice.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.CoinDispenser.#ctor">
			<summary>Creates an instance of the <see cref="CoinDispenser"></see> class.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CoinDispenser.StatusEmpty">
			<summary>Indicates the Coin Dispenser device cannot dispense coins because it is empty.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CoinDispenser.StatusJam">
			<summary>Indicates a mechanical fault has occurred in the Coin Dispenser device.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CoinDispenser.StatusNearEmpty">
			<summary>Indicates the Coin Dispenser device can still dispense coins, but the device is almost empty.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CoinDispenser.StatusOk">
			<summary>Indicates the Coin Dispenser device is ready to dispense coins, or the device is unable to detect an error condition.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.CoinDispenser.AdjustCashCounts(System.Collections.Generic.IEnumerable{Microsoft.PointOfService.CashCount})">
			<summary>Sets initial amounts in the Coin Dispenser after initial setup or adjusts cash counts after replenishment or removal.</summary>
			<param name="cashCounts">Contains cash types and amounts to be initialized.</param>
		</member>
		<member name="M:Microsoft.PointOfService.CoinDispenser.DispenseChange(System.Int32)">
			<summary>Indicates a count of the coins it dispenses.</summary>
			<param name="amount">A count of the currency units to dispense (such as cents or yen).</param>
		</member>
		<member name="M:Microsoft.PointOfService.CoinDispenser.ReadCashCounts">
			<summary>Reads the currency totals contained in the device.</summary>
			<param name="cashCounts">Contains cash types and amounts to be initialized.</param>
		</member>
		<member name="P:Microsoft.PointOfService.CoinDispenser.CapEmptySensor">
			<summary>Gets the Boolean value that indicates whether the device can support an out-of-coins condition.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.CoinDispenser.CapJamSensor">
			<summary>Gets the Boolean value that indicates whether the Coin Dispenser device can report a mechanical jam or failure condition.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.CoinDispenser.CapNearEmptySensor">
			<summary>Gets the Boolean value that indicates whether the Coin Dispenser device can report when it is almost out of coins.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.CoinDispenser.DispenserStatus">
			<summary>Gets the current status of the dispenser.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.CoinDispenser.IsExclusiveUseDevice">
			<summary>Gets the Boolean value that indicates whether the Coin Dispenser device is an exclusive-use device.</summary>
			<returns>A value of true indicates the fiscal printer is an exclusive-use device.  Otherwise, the value will be false.</returns>
		</member>
		<member name="T:Microsoft.PointOfService.CoinDispenserStatus">
			<summary>Enumerates the valid states of the coin dispenser device.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CoinDispenserStatus.Empty">
			<summary>Cannot dispense coins because the dispenser is empty.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CoinDispenserStatus.Jam">
			<summary>A mechanical fault has occurred.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CoinDispenserStatus.NearEmpty">
			<summary>Can dispense coins, but the dispenser is almost empty.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CoinDispenserStatus.OK">
			<summary>Ready to dispense coins. This value is also set when the dispenser is unable to detect an error condition.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.CompareFirmwareResult">
			<summary>Enumerates the valid comparison results between firmware files.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CompareFirmwareResult.Different">
			<summary>Indicates that the version of one or more of the firmware files is different than the firmware in the device, but either:</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CompareFirmwareResult.Newer">
			<summary>Indicates that the version of one or more of the firmware files is newer than the firmware in the device and that none of the firmware files is older than the firmware in the device.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CompareFirmwareResult.Older">
			<summary>Indicates that the version of one or more of the firmware files is older than the firmware in the device and that none of the firmware files is newer than the firmware in the device.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CompareFirmwareResult.Same">
			<summary>Indicates that the versions of all of the firmware files are the same as the firmware in the device.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CompareFirmwareResult.Unknown">
			<summary>Indicates that a relationship between the two firmware versions could not be determined. A possible reason for this result could be an attempt to compare Japanese and US versions of firmware.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.ControlState">
			<summary>Enumerates the valid states of a device. </summary>
		</member>
		<member name="F:Microsoft.PointOfService.ControlState.Busy">
			<summary>The device is in a good state and is busy performing output.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ControlState.Closed">
			<summary>The device is closed. The service object is not initialized.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ControlState.Error">
			<summary>An error has been reported, and the application must recover the Control to a good state before normal I/O can resume.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ControlState.Idle">
			<summary>The device is in a good state and is not busy.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.CreditTransactionType">
			<summary>Enumerates the valid transaction types for an authorization operation.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CreditTransactionType.CashDeposit">
			<summary>Card check.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CreditTransactionType.CheckCard">
			<summary>Purchase after approval.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CreditTransactionType.Completion">
			<summary>Preauthorization.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CreditTransactionType.PreSales">
			<summary>Refund purchase.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CreditTransactionType.Refund">
			<summary>Sales.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CreditTransactionType.Sales">
			<summary>Cancellation.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CreditTransactionType.Void">
			<summary>Cancel preauthorization approval.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.CreditTransactionType.VoidPreSales">
			<summary>Charge.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.DataEventArgs">
			<summary>Defines the programmatic interface for the transmission of Data Events.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.DataEventArgs.#ctor(System.Int32)">
			<summary>Creates an instance of the <see cref="DataEventArgs"></see> class by using device input status.</summary>
			<param name="status">The device input status.</param>
		</member>
		<member name="M:Microsoft.PointOfService.DataEventArgs.SetStatus(System.Int32)">
			<summary>Sets the device input status.</summary>
			<param name="status">The device input status value to set.</param>
		</member>
		<member name="M:Microsoft.PointOfService.DataEventArgs.ToString">
			<summary>Returns a string that represents the input status.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.DataEventArgs.Status">
			<summary>Gets the integer value for the device input status.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.DataEventHandler">
			<summary>Defines the method that handles the <see cref="T:Microsoft.PointOfService.DataEventArgs"></see> event.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.DealingLogStatus">
			<summary>Enumerates the possible status conditions of the Dealing Log for a CAT device.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DealingLogStatus.Full">
			<summary><see cref="DealingLog"></see> is full.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DealingLogStatus.NearFull">
			<summary><see cref="DealingLog"></see> is almost full.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DealingLogStatus.Ok">
			<summary><see cref="DealingLog"></see> has enough capacity.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.DepositStatus">
			<summary>Enumerates possible deposit status values.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DepositStatus.Count">
			<summary>The deposited money is being counted or repaid.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DepositStatus.End">
			<summary>Cash acceptance has ended.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DepositStatus.Jam">
			<summary>A mechanical fault has occurred.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DepositStatus.Start">
			<summary>Cash acceptance has started.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.DetectionState">
			<summary>Enumerates the state of card detection.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DetectionState.Captured">
			<summary>The card is in the stock space. The stock space sensor detects the card.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DetectionState.Detected">
			<summary>There is a card in the device. The card detection sensor detects the card.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DetectionState.Entered">
			<summary>Card remaining at the insertion slot. The insertion slot sensor detects the card.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DetectionState.NoCard">
			<summary>No card. The card detection sensor does not detect a card.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.Device">
			<summary>Defines the programmatic interface for a Device.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.Device.#ctor(System.String,System.String,System.String)">
			<summary>Creates an instance of the <see cref="T:Microsoft.PointOfService.Device"></see> class.</summary>
			<param name="description">Contains text identifying the device and any pertinent information about it.</param>
			<param name="devicePath">Contains the hardware path of a device.</param>
			<param name="name">Contains a short string identifying the device and any abbreviated information about it.</param>
		</member>
		<member name="T:Microsoft.PointOfService.DeviceAuthenticationLevel">
			<summary>Enumerates the level of device authentication supported by the service.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceAuthenticationLevel.NotSupported">
			<summary>The service does not support device authentication.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceAuthenticationLevel.Optional">
			<summary>The service supports device authentication, but does not require it.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceAuthenticationLevel.Required">
			<summary>The service requires device authentication.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.DeviceAuthenticationProtocol">
			<summary>Enumerates the device authentication protocol supported by the device.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceAuthenticationProtocol.ChallengeResponse">
			<summary>The service supports the challenge response protocol.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceAuthenticationProtocol.None">
			<summary>The service does not support device authentication.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.DeviceChangedEventArgs">
			<summary>Defines the programmatic interface for the transmission of Device Added Events and Device Removed Events.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.DeviceChangedEventArgs.#ctor(Microsoft.PointOfService.DeviceInfo)">
			<summary>Initializes an instance of the <see cref="DeviceChangedEventArgs"></see> class with the specified <see cref="DeviceInfo"></see>.</summary>
			<param name="device">The <see cref="DeviceInfo"></see> object to initialize with.</param>
		</member>
		<member name="P:Microsoft.PointOfService.DeviceChangedEventArgs.Device">
			<summary>Gets the <see cref="DeviceInfo"></see> for an event.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.DeviceChangedEventHandler">
			<summary>Defines the method that handles the <see cref="T:Microsoft.PointOfService.DeviceChangedEventArgs"></see> event.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.DeviceCollection">
			<summary>Defines an indexed array of <see cref="DeviceInfo"></see> objects.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.DeviceCollection.#ctor">
			<summary>Creates an instance of the <see cref="DeviceCollection"></see> class.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.DeviceCollection.Contains(Microsoft.PointOfService.DeviceInfo)">
			<summary>Returns a value indicating whether the specified <see cref="DeviceInfo"></see> object is a member of the <see cref="DeviceCollection"></see> class.</summary>
			<param name="value">The <see cref="DeviceInfo"></see> object to find in the collection.</param>
		</member>
		<member name="M:Microsoft.PointOfService.DeviceCollection.CopyTo(Microsoft.PointOfService.DeviceInfo[],System.Int32)">
			<summary>Copies the collection to an array, starting to write at the specified array index.</summary>
			<param name="index">The index of the array at which copying should begin.</param>
			<param name="array">An array to copy the objects in the collection to.</param>
		</member>
		<member name="M:Microsoft.PointOfService.DeviceCollection.IndexOf(Microsoft.PointOfService.DeviceInfo)">
			<summary>Retrieves the index of the specified <see cref="DeviceInfo"></see> object in the collection.</summary>
			<param name="value">The <see cref="DeviceInfo"></see> object for which to search in the collection.</param>
		</member>
		<member name="P:Microsoft.PointOfService.DeviceCollection.Item(System.Int32)">
			<summary>Gets the <see cref="DeviceInfo"></see> object specified by index.</summary>
			<param name="index">The zero-based index of the <see cref="DeviceInfo"></see> object to get.</param>
		</member>
		<member name="P:Microsoft.PointOfService.DeviceCollection.Item(System.String)">
			<summary>Gets the <see cref="DeviceInfo"></see> object specified by name.</summary>
			<param name="name">The name of the <see cref="DeviceInfo"></see> object to get.</param>
		</member>
		<member name="T:Microsoft.PointOfService.DeviceCompatibilities">
			<summary>Enumerates the valid compatibility levels for a POS device.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceCompatibilities.CompatibilityLevel1">
			<summary>Indicates compatibility with any .NET service object.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceCompatibilities.Opos">
			<summary>Indicates compatibility with any COM service object.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceCompatibilities.OposAndCompatibilityLevel1">
			<summary>Indicates compatibility with any .NET or COM service object.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.DeviceErrorEventArgs">
			<summary>Defines the programmatic interface for the transmission of Device Error Events.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.DeviceErrorEventArgs.#ctor(Microsoft.PointOfService.ErrorCode,System.Int32,Microsoft.PointOfService.ErrorLocus,Microsoft.PointOfService.ErrorResponse)">
			<summary>Creates an instance of the <see cref="DeviceErrorEventArgs"></see> class with the specified data.</summary>
			<param name="errorCodeExtended">The device extended error code. This value is device-specific.</param>
			<param name="errorLocus">The location of the error.</param>
			<param name="errorCode">The device error code.</param>
			<param name="errorResponse">The error response.</param>
		</member>
		<member name="T:Microsoft.PointOfService.DeviceErrorEventHandler">
			<summary>Defines the method that handles <see cref="T:Microsoft.PointOfService.DeviceErrorEventArgs"></see> events.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.DeviceInfo">
			<summary>Defines a programmatic interface for device information that is used to create a service object.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.DeviceInfo.#ctor">
			<summary>Creates an instance of the <see cref="DeviceInfo"></see> class.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.DeviceInfo.IsDeviceInfoOf(Microsoft.PointOfService.PosCommon)">
			<summary>Gets the Boolean value that indicates whether a <see cref="DeviceInfo"></see> instance applies to the specified service object.</summary>
			<param name="serviceObject">The service object to compare.</param>
		</member>
		<member name="P:Microsoft.PointOfService.DeviceInfo.Compatibility">
			<summary>Gets device compatibility information.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.DevicePlugAndPlay">
			<summary>Defines the programmatic interface for the <see cref="T:Microsoft.PointOfService.DevicePlugAndPlay"></see> class.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.DevicePlugAndPlay.#ctor">
			<summary>Creates an instance of the <see cref="T:Microsoft.PointOfService.DevicePlugAndPlay"></see> class.</summary>
		</member>
		<member name="E:Microsoft.PointOfService.DevicePlugAndPlay.DeviceAddedEvent">
			<summary>An event that notifies the service objects that hardware has been added.</summary>
		</member>
		<member name="E:Microsoft.PointOfService.DevicePlugAndPlay.DeviceRemovedEvent">
			<summary>An event that notifies the service objects that hardware has been removed.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.DevicePlugAndPlay.RaiseDeviceAddedEvent(Microsoft.PointOfService.Device)">
			<summary>Raises an event that notifies the service objects that hardware has been added.</summary>
			<param name="device">The hardware device that was added.</param>
		</member>
		<member name="M:Microsoft.PointOfService.DevicePlugAndPlay.RaiseDeviceRemovedEvent(Microsoft.PointOfService.Device)">
			<summary>Raises an event that notifies the service objects that hardware has been removed.</summary>
			<param name="device">The hardware device that was removed.</param>
		</member>
		<member name="T:Microsoft.PointOfService.DeviceStatusChangedEventArgs">
			<summary>Defines the programmatic interface for the transmission of Device Status Changed Events.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.DeviceStatusChangedEventArgs.#ctor(Microsoft.PointOfService.Device)">
			<summary>Creates an instance of the <see cref="T:Microsoft.PointOfService.DeviceStatusChangedEventArgs"></see> class with the specified <see cref="DeviceInfo"></see>.</summary>
			<param name="device">The <see cref="DeviceInfo"></see> object to initialize with.</param>
		</member>
		<member name="T:Microsoft.PointOfService.DeviceStatusChangedEventHandler">
			<summary>Defines the method that handles the <see cref="T:Microsoft.PointOfService.DeviceStatusChangedEventHandler"></see> event.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.DeviceType">
			<summary>Defines 28 constants, each representing a POS device.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.DeviceType.#ctor">
			<summary>Creates an instance of the <see cref="DeviceType"></see> class.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceType.BillAcceptor">
			<summary>Indicates a bill acceptor device.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceType.BillDispenser">
			<summary>Indicates a bill dispenser device.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceType.Biometrics">
			<summary>Indicates that the device is a biometrics scanner.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceType.BumpBar">
			<summary>Indicates a bump bar device.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceType.CashChanger">
			<summary>Indicates a cash changer device.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceType.CashDrawer">
			<summary>Indicates a cash drawer device.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceType.Cat">
			<summary>Indicates a credit authorization terminal (CAT) device.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceType.CheckScanner">
			<summary>Indicates a check scanner device.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceType.CoinAcceptor">
			<summary>Indicates a coin acceptor device.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceType.CoinDispenser">
			<summary>Indicates a coin dispenser device.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceType.ElectronicJournal">
			<summary>Indicates that the device is an electronic journal.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceType.FiscalPrinter">
			<summary>Indicates a fiscal printer device.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceType.HardTotals">
			<summary>Indicates a hard totals device.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceType.ImageScanner">
			<summary>Indicates an image scanner device.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceType.Keylock">
			<summary>Indicates a keylock device.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceType.LineDisplay">
			<summary>Indicates a line display device.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceType.Micr">
			<summary>Indicates a magnetic ink character reader (MICR) device.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceType.MotionSensor">
			<summary>Indicates a motion sensor device.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceType.Msr">
			<summary>Indicates a magnetic stripe reader (MSR) device.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceType.PinPad">
			<summary>Indicates a PIN pad device.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceType.PointCardRW">
			<summary>Indicates a point card reader/writer device.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceType.PosKeyboard">
			<summary>Indicates a keyboard device.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceType.PosPower">
			<summary>Indicates a power device.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceType.PosPrinter">
			<summary>Indicates a printer.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceType.RemoteOrderDisplay">
			<summary>Indicates a remote order display device.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceType.Scale">
			<summary>Indicates a weight scale.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceType.Scanner">
			<summary>Indicates a scanner (bar code reader) device.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceType.SignatureCapture">
			<summary>Indicates a signature capture device.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceType.SmartCardRW">
			<summary>Indicates a smart card reader / writer device.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceType.ToneIndicator">
			<summary>Indicates a tone indicator device.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.DeviceUnits">
			<summary>Enumerates the valid unit IDs of a single video unit for a Bump Bar or Remote Order Display device.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceUnits.Unit1">
			<summary>Unit 1</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceUnits.Unit10">
			<summary>Unit 10</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceUnits.Unit11">
			<summary>Unit 11</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceUnits.Unit12">
			<summary>Unit 12</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceUnits.Unit13">
			<summary>Unit 13</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceUnits.Unit14">
			<summary>Unit 14</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceUnits.Unit15">
			<summary>Unit 15</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceUnits.Unit16">
			<summary>Unit 16</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceUnits.Unit17">
			<summary>Unit 17</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceUnits.Unit18">
			<summary>Unit 18</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceUnits.Unit19">
			<summary>Unit 19</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceUnits.Unit2">
			<summary>Unit 2</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceUnits.Unit20">
			<summary>Unit 20</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceUnits.Unit21">
			<summary>Unit 21</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceUnits.Unit22">
			<summary>Unit 22</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceUnits.Unit23">
			<summary>Unit 23</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceUnits.Unit24">
			<summary>Unit 24</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceUnits.Unit25">
			<summary>Unit 25</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceUnits.Unit26">
			<summary>Unit 26</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceUnits.Unit27">
			<summary>Unit 27</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceUnits.Unit28">
			<summary>Unit 28</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceUnits.Unit29">
			<summary>Unit 29</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceUnits.Unit3">
			<summary>Unit 3</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceUnits.Unit30">
			<summary>Unit 30</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceUnits.Unit31">
			<summary>Unit 31</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceUnits.Unit32">
			<summary>Unit 32</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceUnits.Unit4">
			<summary>Unit 4</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceUnits.Unit5">
			<summary>Unit 5</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceUnits.Unit6">
			<summary>Unit 6</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceUnits.Unit7">
			<summary>Unit 7</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceUnits.Unit8">
			<summary>Unit 8</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DeviceUnits.Unit9">
			<summary>Unit 9</summary>
		</member>
		<member name="T:Microsoft.PointOfService.DirectIOData">
			<summary>Defines the programmatic structure the service object uses to return data to an application.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.DirectIOData.#ctor(System.Int32,System.Object)">
			<summary>Creates an instance of the <see cref="DirectIOData"></see> structure with the specified data.</summary>
			<param name="obj">An object.</param>
			<param name="data">Integer data.</param>
		</member>
		<member name="M:Microsoft.PointOfService.DirectIOData.Equals(Microsoft.PointOfService.DirectIOData)">
			<summary>Determines whether the specified <see cref="T:Microsoft.PointOfService.DirectIOData"></see> is equal to the current <see cref="T:Microsoft.PointOfService.DirectIOData"></see>.</summary>
			<returns>A Boolean value that is true if the two instances are equal; otherwise, the value is false.</returns>
			<param name="d">The <see cref="T:Microsoft.PointOfService.DirectIOData"></see> object to be compared to the current <see cref="T:Microsoft.PointOfService.DirectIOData"></see>.</param>
		</member>
		<member name="M:Microsoft.PointOfService.DirectIOData.Equals(System.Object)">
			<summary>Determines whether the specified Object is equal to the current <see cref="T:Microsoft.PointOfService.DirectIOData"></see>.</summary>
			<returns>True if the specified object is equal to the current <see cref="T:Microsoft.PointOfService.DirectIOData"></see>; otherwise, false.</returns>
			<param name="obj">The object to be compared with the current <see cref="T:Microsoft.PointOfService.DirectIOData"></see>.</param>
		</member>
		<member name="M:Microsoft.PointOfService.DirectIOData.Equals(Microsoft.PointOfService.DirectIOData,Microsoft.PointOfService.DirectIOData)">
			<summary>Determines whether the specified <see cref="T:Microsoft.PointOfService.DirectIOData"></see> instances are equal.</summary>
			<returns>True if the value of a is equal to the value of b; otherwise, false.</returns>
			<param name="a">The first <see cref="T:Microsoft.PointOfService.DirectIOData"></see> instance.</param>
			<param name="b">The second <see cref="T:Microsoft.PointOfService.DirectIOData"></see> instance.</param>
		</member>
		<member name="M:Microsoft.PointOfService.DirectIOData.GetHashCode">
			<summary>Returns the hash code of the current <see cref="T:Microsoft.PointOfService.DirectIOData"></see>.</summary>
			<returns>An Int32 representation of the hash code for the current <see cref="T:Microsoft.PointOfService.DirectIOData"></see>.</returns>
		</member>
		<member name="M:Microsoft.PointOfService.DirectIOData.op_Equality(Microsoft.PointOfService.DirectIOData,System.Object)">
			<summary>Compares the specified <see cref="T:Microsoft.PointOfService.DirectIOData"></see> and object to determine whether they are equal.</summary>
			<returns>True if the value of a is equal to the value of b; otherwise, false.</returns>
			<param name="a">The <see cref="T:Microsoft.PointOfService.DirectIOData"></see> to be compared to b.</param>
			<param name="b">The object to be compared to a.</param>
		</member>
		<member name="M:Microsoft.PointOfService.DirectIOData.op_Inequality(Microsoft.PointOfService.DirectIOData,System.Object)">
			<summary>Returns a value indicating whether an instance of <see cref="DirectIOData"></see> and an object are not equal.</summary>
			<returns>A Boolean value that is true if a is not equal to b and false otherwise.</returns>
			<param name="a">The <see cref="T:Microsoft.PointOfService.DirectIOData"></see> to be compared to b.</param>
			<param name="b">The object to be compared to a.</param>
		</member>
		<member name="M:Microsoft.PointOfService.DirectIOData.ToString">
			<summary>Returns a string representation of the <see cref="T:Microsoft.PointOfService.DirectIOData"></see> instance.</summary>
			<returns>A string representation of the <see cref="T:Microsoft.PointOfService.DirectIOData"></see>.</returns>
		</member>
		<member name="T:Microsoft.PointOfService.DirectIOEventArgs">
			<summary>Defines the programmatic interface for the transmission of Direct IO Events.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.DirectIOEventArgs.#ctor(System.Int32,System.Int32,System.Object)">
			<summary>Creates an instance of the <see cref="DirectIOEventArgs"></see> class with the specified data.</summary>
			<param name="obj">An object.</param>
			<param name="eventNumber">Event number whose specific values are assigned by POS for .NET.</param>
			<param name="data">Additional numeric data.</param>
		</member>
		<member name="T:Microsoft.PointOfService.DirectIOEventHandler">
			<summary>Defines the method that handles a <see cref="T:Microsoft.PointOfService.DirectIOEventArgs"></see> events.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.DisplayBlink">
			<summary>Enumerates the valid line display blink capabilities for a Line Display device.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DisplayBlink.All">
			<summary>The line display supports blinking for the entire display. The service object sets the entire contents of the display to blink or to be in a steady state.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DisplayBlink.Each">
			<summary>The line display supports blinking for each character. The service object can set each character to blink individually or to be in a steady state.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DisplayBlink.None">
			<summary>The line display device does not support blinking; the value is 0 (zero).</summary>
		</member>
		<member name="T:Microsoft.PointOfService.DisplayCursors">
			<summary>Enumerates the possible supported cursor types.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DisplayCursors.Blink">
			<summary>A blinking cursor is supported.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DisplayCursors.Block">
			<summary>Cursor is displayable as a block.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DisplayCursors.Fixed">
			<summary>Cursor is always displayed.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DisplayCursors.HalfBlock">
			<summary>Cursor is displayable as a half block.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DisplayCursors.None">
			<summary>Cursor is not displayable.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DisplayCursors.Other">
			<summary>Cursor is displayable but form is unknown.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DisplayCursors.Reverse">
			<summary>Cursor is displayable in reverse video.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DisplayCursors.Underline">
			<summary>Cursor is displayable as an underline.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.DisplayMarqueeFormat">
			<summary>Enumerates the possible marquee format values.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DisplayMarqueeFormat.Place">
			<summary>Begin the marquee by 'walking' data from the opposite side.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DisplayMarqueeFormat.Walk">
			<summary>Begin the marquee by placing data.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.DisplayMarqueeType">
			<summary>Enumerates the valid marquee type values.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DisplayMarqueeType.Down">
			<summary>Scrolls the window down.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DisplayMarqueeType.Init">
			<summary>Indicates the Marquee Init mode.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DisplayMarqueeType.Left">
			<summary>Scrolls the window left.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DisplayMarqueeType.None">
			<summary>Marquees are disabled for this window.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DisplayMarqueeType.Right">
			<summary>Scrolls the window right.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DisplayMarqueeType.Up">
			<summary>Scrolls the window up.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.DisplayReadBack">
			<summary>Enumerates the possible read back capability values.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DisplayReadBack.None">
			<summary>Read back is not supported.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DisplayReadBack.Single">
			<summary>Read back of a single character at a time is supported.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.DisplayReverse">
			<summary>Enumerates the possible reverse video capability values.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DisplayReverse.All">
			<summary>Reverse video is not supported.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DisplayReverse.Each">
			<summary>Reverse video is supported. The entire contents of the display are either in reverse video or displayed normally.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DisplayReverse.None">
			<summary>Reverse video is supported. Each character may be individually set to reverse video or normal.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.DisplayScreenMode">
			<summary>Defines a screen mode—that is, the number of rows and columns supported—for a line display device.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.DisplayScreenMode.#ctor(System.Int32,System.Int32)">
			<summary>Creates an instance of the <see cref="DisplayScreenMode"></see> class.</summary>
			<param name="rows">Number of rows.</param>
			<param name="columns">Number of columns.</param>
		</member>
		<member name="T:Microsoft.PointOfService.DisplayScrollText">
			<summary>Enumerates the possible scrolling directions.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DisplayScrollText.Down">
			<summary>Scrolls the window down.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DisplayScrollText.Left">
			<summary>Scrolls the window left.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DisplayScrollText.Right">
			<summary>Scrolls the window right.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DisplayScrollText.Up">
			<summary>Scrolls the window up.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.DisplaySetDescriptor">
			<summary>Enumerates the possible display descriptor attributes.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DisplaySetDescriptor.Blink">
			<summary>Sets the descriptor to blinking.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DisplaySetDescriptor.Off">
			<summary>Turns the descriptor off.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DisplaySetDescriptor.On">
			<summary>Turns the descriptor on.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.DisplayTextMode">
			<summary>Enumerates the possible text mode values.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DisplayTextMode.Blink">
			<summary>Displays the text as blinking.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DisplayTextMode.BlinkReverse">
			<summary>Displays the text in reverse video and blinking.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DisplayTextMode.Normal">
			<summary>Displays the text normally.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.DisplayTextMode.Reverse">
			<summary>Displays the text in reverse video.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.EftTransactionCompletion">
			<summary>Enumerates possible completion values for an EFT transaction.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.EftTransactionCompletion.Abnormal">
			<summary>The EFT transaction completed abnormally.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.EftTransactionCompletion.Normal">
			<summary>The EFT transaction completed normally.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.EftTransactionType">
			<summary>Enumerates the possible EFT transaction types.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.EftTransactionType.Admin">
			<summary>Indicates an administrative transaction.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.EftTransactionType.Credit">
			<summary>Credits (increases) the specified amount.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.EftTransactionType.Debit">
			<summary>Debits (decreases) the specified amount.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.EftTransactionType.Inquiry">
			<summary>Indicates a balance inquiry.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.EftTransactionType.Reconcile">
			<summary>Indicates reconciliation or settlement.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.ElectronicJournal">
			<summary>Defines the programmatic interface for an Electronic Journal device.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.ElectronicJournal.#ctor">
			<summary>Creates an instance of the <see cref="T:Microsoft.PointOfService.ElectronicJournal"></see> class.</summary>
		</member>
		<member name="E:Microsoft.PointOfService.ElectronicJournal.DataEvent">
			<summary>Notifies the application that the queried Electronic Journal has finished storing its content in a host file. </summary>
		</member>
		<member name="E:Microsoft.PointOfService.ElectronicJournal.ErrorEvent">
			<summary>Notifies the application that an Electronic Journal error has been detected and that a suitable response by the application is necessary to process the error condition.</summary>
		</member>
		<member name="E:Microsoft.PointOfService.ElectronicJournal.OutputCompleteEvent">
			<summary>Notifies the application that the queued output request has completed successfully.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ElectronicJournal.ExtendedErrorCorruptedMedium">
			<summary>Indicates that the medium is corrupted.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ElectronicJournal.ExtendedErrorExisting">
			<summary>Indicates that the marker name is already specified in the medium.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ElectronicJournal.ExtendedErrorMediumFull">
			<summary>Holds a value that indicates that the medium is full.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ElectronicJournal.ExtendedErrorMultipleMarker">
			<summary>Indicates that more than one marker exists for the specified time period.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ElectronicJournal.ExtendedErrorMultipleMarkers">
			<summary>Indicates that, although multiple markers were requested, only one can be returned.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ElectronicJournal.ExtendedErrorNotEnoughSpace">
			<summary>Indicates that there is insufficient free space.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ElectronicJournal.ExtendedErrorUninitializedMedium">
			<summary>Indicates that the medium is not initialized.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ElectronicJournal.ExtendedErrorUnknownDataFormat">
			<summary>Indicates that the medium has an unknown or unsupported data format.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ElectronicJournal.StatisticEraseCount">
			<summary>Indicates the number of times the medium has been erased.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ElectronicJournal.StatisticFailedWriteCount">
			<summary>Holds the number of failed write operations.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ElectronicJournal.StatisticMediumFreeSpace">
			<summary>Holds a value that indicates the free space on the medium.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ElectronicJournal.StatisticMediumRemovedCount">
			<summary>Indicates the number of times the medium is removed.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ElectronicJournal.StatisticMediumSize">
			<summary>Indicates the medium size.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ElectronicJournal.StatisticWriteCount">
			<summary>Indicates the number of write operations that are performed on the medium.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ElectronicJournal.StatusMediumFull">
			<summary>Holds a value that indicates that the medium is full.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ElectronicJournal.StatusMediumInserted">
			<summary>Holds a value that indicates that the medium is currently inserted.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ElectronicJournal.StatusMediumNearFull">
			<summary>Holds a value that indicates that the medium is almost full.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ElectronicJournal.StatusMediumRemoved">
			<summary>Holds a value that indicates that the medium has been removed.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ElectronicJournal.StatusMediumSuspended">
			<summary>Holds a value that indicates that the medium is suspended.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.ElectronicJournal.AddMarker(System.String)">
			<summary>Adds a marker to the end of the data that is stored on the recording medium.</summary>
			<param name="marker">Marker identifier.</param>
		</member>
		<member name="M:Microsoft.PointOfService.ElectronicJournal.CancelPrintContent">
			<summary>Cancels the suspended data printing process.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.ElectronicJournal.CancelQueryContent">
			<summary>Cancels a suspended data transfer process.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.ElectronicJournal.ClearInput">
			<summary>Clears all buffered device input.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.ElectronicJournal.ClearOutput">
			<summary>Clears all buffered tone outputs. </summary>
		</member>
		<member name="M:Microsoft.PointOfService.ElectronicJournal.EraseMedium">
			<summary>Erases all data in the medium.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.ElectronicJournal.InitializeMedium(System.String)">
			<summary>Initializes the recording medium.</summary>
			<param name="mediumId">The identification of the medium to be initialized.</param>
		</member>
		<member name="M:Microsoft.PointOfService.ElectronicJournal.PrintContent(System.String,System.String)">
			<summary>Prints the current journal document stored in the recording medium onto the connected printer system.</summary>
			<param name="toMarker">Marker identifier that indicates end position of the data.A setting of null uses the position of the data at the end of the recording medium.</param>
			<param name="fromMarker">Marker identifier that indicates start position of the data.A setting of null uses the position of the data at the beginning of the recording medium.</param>
		</member>
		<member name="M:Microsoft.PointOfService.ElectronicJournal.PrintContentFile(System.String)">
			<summary>Prints the journal document from the specified file onto the connected printer.</summary>
			<param name="fileName">Name of the file that contains printing data.</param>
		</member>
		<member name="M:Microsoft.PointOfService.ElectronicJournal.QueryContent(System.String,System.String,System.String)">
			<summary>Queries the content and stores it. The format of the data that is stored on the medium depends on the physical device model. </summary>
			<param name="toMarker">Marker identifier that indicates end position of the data.Specifying a null string means specifying the data at the end of the recording medium.</param>
			<param name="fileName">Name of the file that contains printing data.</param>
			<param name="fromMarker">Marker identifier that indicates start position of the data.Specifying a null string means specifying the data at the beginning of the recording medium.</param>
		</member>
		<member name="M:Microsoft.PointOfService.ElectronicJournal.ResumePrintContent">
			<summary>Resumes the suspended data printing process.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.ElectronicJournal.ResumeQueryContent">
			<summary>Resumes the suspended data transfer process.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.ElectronicJournal.RetrieveCurrentMarker(Microsoft.PointOfService.MarkerType)">
			<summary>Returns the last implicitly stored marker.</summary>
			<param name="sessionEnd">The marker for the end of a session is returned.</param>
			<param name="head">The first implicitly stored marker on the medium is returned.</param>
			<param name="sessionBegin">The marker for the beginning of a session is returned.</param>
			<param name="document">The marker for the document or ticket is returned.</param>
			<param name="markerType">Specifies the type of the queried current marker. See values in Remarks.</param>
			<param name="tail">The last implicitly stored marker on the medium is returned.</param>
		</member>
		<member name="M:Microsoft.PointOfService.ElectronicJournal.RetrieveMarker(Microsoft.PointOfService.MarkerType,System.Int32,System.Int32)">
			<summary>Returns a marker implicitly stored on the record medium.</summary>
			<param name="documentNumber">Contains the number of the queried markers document. If the value of markerType is SessionBegin or SessionEnd, this parameter is ignored.</param>
			<param name="SessionEnd">The marker for the end of a session is returned.</param>
			<param name="SessionBegin">The marker for the beginning of a session is returned.</param>
			<param name="sessionNumber">Contains the session number of the queried marker. If a session concept is not supported by the device, this parameter must be set to a value that is less than zero.</param>
			<param name="Document">The marker for the document or ticket is returned.</param>
			<param name="markerType">Specifies the type of the queried current marker. See values in Remarks.</param>
		</member>
		<member name="M:Microsoft.PointOfService.ElectronicJournal.RetrieveMarkerByDateTime(Microsoft.PointOfService.MarkerType,System.String,System.String)">
			<summary>Returns a marker implicitly stored on the record medium.</summary>
			<param name="Document">The marker for the document or ticket is returned.</param>
			<param name="markerNumber">If more than one marker of the requested type exists during the time period specified by the dateTime parameter, this parameter specifies the number of the marker which will be queried. Numbering for markers begins at 1 and is continuously incremented by one for each marker.</param>
			<param name="SessionBegin">The marker for the beginning of a session is returned.</param>
			<param name="SessionEnd">The marker for the end of a session is returned.</param>
			<param name="dateTime">The date/time period the marker is queried for. The format of dateTime is 'YYYYMMDDhhmmss'. If the application cannot specify the hours, minutes, and seconds, then these fields can be omitted.</param>
			<param name="markerType">Specifies the type of the queried current marker.</param>
		</member>
		<member name="M:Microsoft.PointOfService.ElectronicJournal.RetrieveMarkersDateTime(System.String)">
			<summary>Returns the date/time of the given marker.</summary>
			<param name="marker">Specifies the marker from which the date/time will be retrieved.</param>
		</member>
		<member name="M:Microsoft.PointOfService.ElectronicJournal.SuspendPrintContent">
			<summary>Suspends all data transfer from the device and then suspends the device state.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.ElectronicJournal.SuspendQueryContent">
			<summary>Suspends all data transfer from the device, and then suspends the device state.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.ElectronicJournal.AsyncMode">
			<summary>Gets or sets the Boolean value that indicates whether the print methods are performed asynchronously.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.ElectronicJournal.AutoDisable">
			<summary>Gets or sets the Boolean value that indicates whether POS for .NET automatically disables the device when data is received.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.ElectronicJournal.CapAddMarker">
			<summary>Gets the Boolean value that indicates whether the application can use the <see cref="M:Microsoft.PointOfService.ElectronicJournal.AddMarker(System.String)"></see> method.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.ElectronicJournal.CapErasableMedium">
			<summary>Gets the Boolean value that indicates whether the storage medium can be erased.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.ElectronicJournal.CapInitializeMedium">
			<summary>Gets the Boolean value that indicates whether the application can initialize the medium.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.ElectronicJournal.CapMediumIsAvailable">
			<summary>Gets the Boolean value that indicates whether the application can search for a connected recording medium.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.ElectronicJournal.CapPrintContent">
			<summary>Gets the Boolean value that indicates whether the device can reprint stored journal documents on a connected printer.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.ElectronicJournal.CapPrintContentFile">
			<summary>Gets the Boolean value that indicates whether journal documents that are extracted from the storage medium can be printed on a connected printing device.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.ElectronicJournal.CapRetrieveCurrentMarker">
			<summary>Gets the Boolean value that indicates whether the application can use the <see cref="M:Microsoft.PointOfService.ElectronicJournal.RetrieveCurrentMarker(PointOfService.MarkerType)"></see> method.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.ElectronicJournal.CapRetrieveMarker">
			<summary>Gets the Boolean value that indicates whether the application can use the <see cref="M:Microsoft.PointOfService.ElectronicJournal.RetrieveMarker(PointOfService.MarkerType, System.Int32, System.Int32)"></see> method.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.ElectronicJournal.CapRetrieveMarkerByDateTime">
			<summary>Gets the Boolean value that indicates whether the application can use the <see cref="M:Microsoft.PointOfService.ElectronicJournal.RetrieveMarkerByDateTime(PointOfService.MarkerType, System.String, System.String)"></see> method.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.ElectronicJournal.CapRetrieveMarkersDateTime">
			<summary>Gets the Boolean value that indicates whether the application can use the <see cref="M:Microsoft.PointOfService.ElectronicJournal.RetrieveMarkersDateTime(System.String)"></see> method.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.ElectronicJournal.CapWatermark">
			<summary>Gets the Boolean value that indicates whether the device can print predefined background when reprinting journal documents.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.ElectronicJournal.DataCount">
			<summary>Gets the Boolean value that indicates the number of currently queued <see cref="E:Microsoft.PointOfService.ElectronicJournal.DataEvent"></see> events.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.ElectronicJournal.DataEventEnabled">
			<summary>Gets or sets the Boolean value that indicates whether a <see cref="E:Microsoft.PointOfService.ElectronicJournal.DataEvent"></see> event is delivered whenever input data is queued.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.ElectronicJournal.FlagWhenIdle">
			<summary>Gets or sets the Boolean value that indicates whether the device delivers a <see cref="E:Microsoft.PointOfService.PosCommon.StatusUpdateEvent"></see> when it becomes idle.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.ElectronicJournal.MediumFreeSpace">
			<summary>Gets the remaining free space of the storage medium, in bytes,.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.ElectronicJournal.MediumIsAvailable">
			<summary>Gets the Boolean value that indicates whether a recording medium is attached or not.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.ElectronicJournal.MediumSize">
			<summary>Gets the size of the storage medium in bytes.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.ElectronicJournal.Station">
			<summary>Gets or sets the station for later data storing into the medium.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.ElectronicJournal.StorageEnabled">
			<summary>Gets or sets the Boolean value that indicates whether the device is in a recordable state.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.ElectronicJournal.Suspended">
			<summary>Gets the Boolean value that indicates whether the printing or data obtaining process is suspended.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.ElectronicJournalStations">
			<summary>Enumerates the station for subsequent data storing into the medium.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ElectronicJournalStations.Journal">
			<summary>Captures data output into journal station of <see cref="T:Microsoft.PointOfService.PosPrinter"></see> and stores it into the medium.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ElectronicJournalStations.Receipt">
			<summary>Captures data output into receipt station of <see cref="T:Microsoft.PointOfService.PosPrinter"></see> and stores it into the medium.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ElectronicJournalStations.Slip">
			<summary>Captures data output into slip station of <see cref="T:Microsoft.PointOfService.PosPrinter"></see> and stores it into the medium.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.ElectronicValueRW">
			<summary>Defines the programmatic interface for an Electronic Value Reader/Writer (R/W) device.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.ElectronicValueRW.#ctor">
			<summary>Creates an instance of the <see cref="T:Microsoft.PointOfService.ElectronicValueRW"></see> class.</summary>
		</member>
		<member name="E:Microsoft.PointOfService.ElectronicValueRW.DataEvent">
			<summary>Notifies the application about the available input data from the device.</summary>
		</member>
		<member name="E:Microsoft.PointOfService.ElectronicValueRW.ErrorEvent">
			<summary>Notifies the application that an ElectronicValue R/W error has been detected and a suitable response by the application is necessary to process the error condition.</summary>
		</member>
		<member name="E:Microsoft.PointOfService.ElectronicValueRW.OutputCompleteEvent">
			<summary>Notifies the application that the queued asynchronous output request associated with the <see cref="P:Microsoft.PointOfService.ElectronicValueRW.OutputId"></see> attribute has completed successfully.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ElectronicValueRW.ExtendedErrorCenterError">
			<summary>Indicates that an error was returned from the approval agency.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ElectronicValueRW.ExtendedErrorCommandError">
			<summary>Indicates that the command sent to the device is wrong.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ElectronicValueRW.ExtendedErrorCommunicationError">
			<summary>Indicates that a communication error has occurred between the approval agency and the device.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ElectronicValueRW.ExtendedErrorDailyLogOverflow">
			<summary>Indicates that the transaction log on the device is full.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ElectronicValueRW.ExtendedErrorDeficient">
			<summary>Indicates that the amount cannot be subtracted because the balance is insufficient.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ElectronicValueRW.ExtendedErrorLogOverflow">
			<summary>Indicates that the transaction log was too large to be stored.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ElectronicValueRW.ExtendedErrorOverdeposit">
			<summary>Indicates that the device cannot add the charge because the maximum charge amount has been exceeded.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ElectronicValueRW.ExtendedErrorReset">
			<summary>Indicates that the device was stopped during processing by the device Reset key (Stop key).</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ElectronicValueRW.StatusCardCaptured">
			<summary>Indicates that the stock space sensor detects a card in the stock space.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ElectronicValueRW.StatusCardDetected">
			<summary>Indicates that the card detection sensor detects a card in the device.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ElectronicValueRW.StatusCardEntered">
			<summary>Indicates that the insertion slot sensor detects that a card is remaining in the slot.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ElectronicValueRW.StatusLogFull">
			<summary>Indicates that the transaction log is full.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ElectronicValueRW.StatusLogNearFull">
			<summary>Indicates that the transaction log is almost full.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ElectronicValueRW.StatusLogOk">
			<summary>Indicates that the transaction log has enough capacity.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ElectronicValueRW.StatusNoCard">
			<summary>Indicates that the card detection sensor does not detect a card.</summary>
		</member>
        <member name="F:Microsoft.PointOfService.ElectronicValueRW.TransitionTouchRetry">
			<summary>Indicates update retry notification.</summary>
		</member>
        <member name="F:Microsoft.PointOfService.ElectronicValueRW.TransitionTouchRetryCancelable">
			<summary>Indicates update retry notification (can be canceled).</summary>
		</member>
        <member name="F:Microsoft.PointOfService.ElectronicValueRW.TransitionConfirmTouchRetry">
			<summary>Indicates confirmation of update retry (continued or canceled).</summary>
		</member>
        <member name="F:Microsoft.PointOfService.ElectronicValueRW.TransitionConfirmCancel">
			<summary>Indicates confirmation of process cancellation.</summary>
		</member>
        <member name="F:Microsoft.PointOfService.ElectronicValueRW.TransitionNotifyInvalidOperation">
			<summary>Indicates notification of issuing an invalid operation.</summary>
		</member>
        <member name="F:Microsoft.PointOfService.ElectronicValueRW.TransitionConfirmInvalidOperation">
			<summary>Indicates confirmation of invalid operation.</summary>
		</member>
        <member name="F:Microsoft.PointOfService.ElectronicValueRW.TransitionConfirmRemainderSubtraction">
			<summary>Indicates confirmation of insufficient funds and the deductible amound from the balance.</summary>
		</member>
        <member name="F:Microsoft.PointOfService.ElectronicValueRW.TransitionConfirmCenterCheck">
			<summary>Indicates confirmation of a center check.</summary>
		</member>
        <member name="F:Microsoft.PointOfService.ElectronicValueRW.TransitionConfirmTouchTimeout">
			<summary>Indicates confirmations of timeout to wait for touching.</summary>
		</member>
        <member name="F:Microsoft.PointOfService.ElectronicValueRW.TransitionConfirmAutoCharge">
			<summary>Indicates confirmation of automatic charge.</summary>
		</member>
        <member name="F:Microsoft.PointOfService.ElectronicValueRW.TransitionNotifyCaptureCard">
			<summary>Indicates notification of card detection.</summary>
		</member>
        <member name="F:Microsoft.PointOfService.ElectronicValueRW.TransitionNotifyPin">
			<summary>Indicates notification of available PIN input data in the PIN input status.</summary>
		</member>
        <member name="F:Microsoft.PointOfService.ElectronicValueRW.TransitionCenterCheck">
			<summary>Indicates notification of center check being conducted.</summary>
		</member>
        <member name="F:Microsoft.PointOfService.ElectronicValueRW.TransitionNotifyComplete">
			<summary>Indicates notification of process completion.</summary>
		</member>
        <member name="F:Microsoft.PointOfService.ElectronicValueRW.TransitionNotifyTouch">
			<summary>Indicates status notification of waiting for touching.</summary>
		</member>
        <member name="F:Microsoft.PointOfService.ElectronicValueRW.TransitionNotifyBusy">
			<summary>Indicates status notification that a process is underway.</summary>
		</member>
        <member name="F:Microsoft.PointOfService.ElectronicValueRW.TransitionConfirmCenterCheckComplete">
			<summary>Indicates the confirmation that a center check has been completed.</summary>
		</member>
        <member name="F:Microsoft.PointOfService.ElectronicValueRW.TransitionConfirmSelect">
			<summary>Indicates confirmation of settlement option when there are options available for settlement.</summary>
		</member>
        <member name="F:Microsoft.PointOfService.ElectronicValueRW.TransitionNotifyLock">
			<summary>Indicates notification that unlocking card or device is required.</summary>
		</member>
        <member name="F:Microsoft.PointOfService.ElectronicValueRW.TransitionNotifyCenterCheckComplete">
            <summary>Indicates that a center check has finished.</summary>
        </member>
        <member name="F:Microsoft.PointOfService.ElectronicValueRW.TransitionConfirmPinEntryByOuterPinpad">
            <summary>Indicates confirmation of PIN input request from an external device.</summary>
        </member>
        <member name="M:Microsoft.PointOfService.ElectronicValueRW.AccessLog(System.Int32,Microsoft.PointOfService.TransactionLogType,System.Int32)">
			<summary>Gets the transaction log from the device.</summary>
			<param name="sequenceNumber">The sequence number to get transaction log.</param>
			<param name="type">Specifies whether the transaction log is the intermediate total or the last total. </param>
			<param name="timeout">The maximum waiting time (in milliseconds) until the response is received from the device. <see cref="F:Microsoft.PointOfService.PosCommon.WaitForever"></see> can be specified.</param>
		</member>
		<member name="M:Microsoft.PointOfService.ElectronicValueRW.ActivateService(System.Int32,System.Object)">
			<summary>Executes the device activation process.</summary>
			<param name="obj">Object depends on implementation.</param>
			<param name="data">Data depends on implementation.</param>
		</member>
		<member name="M:Microsoft.PointOfService.ElectronicValueRW.AddValue(System.Int32,System.Int32)">
			<summary>Adds Electronic Value on demand to the card as specified by sequenceNumber.</summary>
			<param name="sequenceNumber">Sequence number.</param>
			<param name="timeout">The maximum waiting time (in milliseconds) until the response is received from the device. <see cref="F:Microsoft.PointOfService.PosCommon.WaitForever"></see> can be specified.</param>
		</member>
		<member name="M:Microsoft.PointOfService.ElectronicValueRW.BeginDetection(Microsoft.PointOfService.BeginDetectionType,System.Int32)">
			<summary>Executes the card detection process.</summary>
			<param name="type">The type parameter specifies the type of the detected card.</param>
			<param name="timeout">If a value of <see cref="F:Microsoft.PointOfService.PosCommon.WaitForever"></see> is specified, the method starts the card detection process and then waits as long as necessary until either the card is detected or an error occurs.</param>
		</member>
		<member name="M:Microsoft.PointOfService.ElectronicValueRW.BeginRemoval(System.Int32)">
			<summary>Executes the card removal process.</summary>
			<param name="timeout">If a value of <see cref="F:Microsoft.PointOfService.PosCommon.WaitForever"></see> is specified, the method starts the card removal process and then waits as long as necessary until either the card is removed or an error occurs.</param>
		</member>
		<member name="M:Microsoft.PointOfService.ElectronicValueRW.CancelValue(System.Int32,System.Int32)">
			<summary>Cancels the Electronic Value related operation specified by <see cref="P:Microsoft.PointOfService.ElectronicValueRW.SequenceNumber"></see> on demand.</summary>
			<param name="sequenceNumber">Sequence number.</param>
			<param name="timeout">The maximum waiting time (in milliseconds) until the response is received from the device. <see cref="F:Microsoft.PointOfService.PosCommon.WaitForever"></see> can be specified.</param>
		</member>
		<member name="M:Microsoft.PointOfService.ElectronicValueRW.CaptureCard">
			<summary>The card left in the slot is removed.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.ElectronicValueRW.ClearParameterInformation">
			<summary>Clears all of the tag valus for the control.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.ElectronicValueRW.ClearInput">
			<summary>Clears all buffered device input.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.ElectronicValueRW.ClearInputProperties">
			<summary>Resets the values of properties altered by the DataEvent or ErrorEvent event.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.ElectronicValueRW.ClearOutput">
			<summary>Clears all buffered device output.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.ElectronicValueRW.EndDetection">
			<summary>Ends the card detection process.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.ElectronicValueRW.EndRemoval">
			<summary>Ends the card removal process.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.ElectronicValueRW.EnumerateCardServices">
			<summary>Enumerates the services which are used in the card and also sets the <see cref="P:Microsoft.PointOfService.ElectronicValueRW.CardServiceList"></see> property.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.ElectronicValueRW.LockTerminal">
			<summary>Locks the security lock. </summary>
		</member>
		<member name="M:Microsoft.PointOfService.ElectronicValueRW.QueryLastSuccessfulTransactionResult()">
			<summary>Refreshes the property values resulting from the last successful value modification.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.ElectronicValueRW.ReadValue(System.Int32,System.Int32)">
			<summary>Reads the Electronic Value from the card.</summary>
			<param name="sequenceNumber">Sequence number.</param>
			<param name="timeout">The maximum waiting time (in milliseconds) until the response is received from the device. <see cref="F:Microsoft.PointOfService.PosCommon.WaitForever"></see> can be specified.</param>
		</member>
		<member name="M:Microsoft.PointOfService.ElectronicValueRW.RetrieveResultInformation(System.String,System.String)">
			<summary>Used to associate a tag name with the data value that comes from the card that is being read.</summary>
			<param name="name">The tag name whose value is to be retrieved.</param>
			<param name="value">The string value for the tag specified by the name parameter.</param>
		</member>
		<member name="M:Microsoft.PointOfService.ElectronicValueRW.SetParameterInformation(System.String,System.String)">
			<summary>Used to associate a tag name with additional data value parameters that are associated with the card that is being read.</summary>
			<param name="name">The tag used to identify the specific card data item.</param>
			<param name="value">The string value for the tag specified by the name parameter.</param>
		</member>
		<member name="M:Microsoft.PointOfService.ElectronicValueRW.SubtractValue(System.Int32,System.Int32)">
			<summary>Subtracts the Electronic Value from the card.</summary>
			<param name="sequenceNumber">Sequence number.</param>
			<param name="timeout">The maximum waiting time (in milliseconds) until the response is received from the device. <see cref="F:Microsoft.PointOfService.PosCommon.WaitForever"></see> can be specified.</param>
		</member>
		<member name="M:Microsoft.PointOfService.ElectronicValueRW.TransactionAccess(Microsoft.PointOfService.TransactionControl)">
			<summary>Enters or exits transaction mode.</summary>
			<param name="control">The transaction control, can be set to <see cref="F:Microsoft.PointOfService.TransactionControl.Transaction"></see><see cref="F:Microsoft.PointOfService.TransactionControl.Normal"></see></param>
		</member>
		<member name="M:Microsoft.PointOfService.ElectronicValueRW.UnlockTerminal">
			<summary>Releases the security lock.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.ElectronicValueRW.UpdateKey(System.Int32,System.Object)">
			<summary>Updates the key information in the device.</summary>
			<param name="obj">Object depends on implementation.</param>
			<param name="data">Data depends on implementation. </param>
		</member>
		<member name="M:Microsoft.PointOfService.ElectronicValueRW.WriteValue(System.Int32,System.Int32)">
			<summary>Electronic Value is added to the card as specified by <see cref="P:Microsoft.PointOfService.ElectronicValueRW.SequenceNumber"></see> on demand.</summary>
			<param name="sequenceNumber">Sequence number.</param>
			<param name="timeout">The maximum waiting time (in milliseconds) until the response is received from the device. <see cref="F:Microsoft.PointOfService.PosCommon.WaitForever"></see> and positive values can be specified.</param>
		</member>
		<member name="T:Microsoft.PointOfService.EncryptionAlgorithm">
			<summary>Enumerates the encryption algorithms supported by the device.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.EncryptionAlgorithm.None">
			<summary>Data encryption is not supported.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.EncryptionAlgorithm.TripleDeaDukpt">
			<summary>Derived Unique Key Per Transaction (United States, Latin America).</summary>
		</member>
		<member name="T:Microsoft.PointOfService.EndDepositAction">
			<summary>Enumerates a value that indicates that the cash acceptance operation has been completed.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.EndDepositAction.Complete">
			<summary>Indicates that the deposit was accepted and that the process is complete.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.ErrorCode">
			<summary>Enumerates the valid types of errors for an error event.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ErrorCode.Busy">
			<summary>The current state does not allow this request. For example: if asynchronous output is in progress, certain methods may not be allowed.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ErrorCode.Claimed">
			<summary>The device is opened but not claimed. Another application has the device claimed, so it cannot be claimed at this time.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ErrorCode.Closed">
			<summary>The device must be opened.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ErrorCode.Deprecated">
			<summary>The method has been deprecated and is no longer available.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ErrorCode.Disabled">
			<summary>The device is opened and claimed (if this is an exclusive use device), but not enabled.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ErrorCode.Exists">
			<summary>The file name (or other specified value) already exists.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ErrorCode.Extended">
			<summary>A device category-specific error condition occurred. The error condition code is held in the exception's <see cref="P:Microsoft.PointOfService.PosControlException.ErrorCodeExtended"></see> property.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ErrorCode.Failure">
			<summary>The device cannot perform the requested procedure, even though the physical device is connected to the system, powered on, and on-line. </summary>
		</member>
		<member name="F:Microsoft.PointOfService.ErrorCode.Illegal">
			<summary>An attempt was made to perform an illegal or unsupported operation with the device, or an invalid parameter value was used. </summary>
		</member>
		<member name="F:Microsoft.PointOfService.ErrorCode.NoExist">
			<summary>The file name (or other specified value) does not exist. </summary>
		</member>
		<member name="F:Microsoft.PointOfService.ErrorCode.NoHardware">
			<summary>The physical device is not connected to the system or is not powered on. </summary>
		</member>
		<member name="F:Microsoft.PointOfService.ErrorCode.NoService">
			<summary>The control cannot communicate with the service object, normally because of a setup or configuration error.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ErrorCode.NotClaimed">
			<summary>The device is opened but not claimed.  No other application has the device claimed, so it can and must be claimed. </summary>
		</member>
		<member name="F:Microsoft.PointOfService.ErrorCode.Offline">
			<summary>The physical device is off-line.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ErrorCode.Success">
			<summary>No error occurred.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ErrorCode.Timeout">
			<summary>The service object timed out waiting for a response from the physical device, or the control timed out waiting for a response from the service object.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.ErrorLocus">
			<summary>Enumerates possible times when an error occurred.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ErrorLocus.Input">
			<summary>Error occurred while gathering or processing event-driven input. No input data is available.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ErrorLocus.InputData">
			<summary>An error occurred while gathering or processing event-driven input, and some previously buffered data is available.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ErrorLocus.Output">
			<summary>An error occurred while processing asynchronous output.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.ErrorResponse">
			<summary>Enumerates the valid responses an application can make to an error event.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ErrorResponse.Clear">
			<summary>Clear the buffered <see cref="DataEvent"></see> events and <see cref="ErrorEvent"></see> events and exit the error state, changing State to Idle. </summary>
		</member>
		<member name="F:Microsoft.PointOfService.ErrorResponse.ContinueInput">
			<summary>This response acknowledges the error and directs the device to continue processing. The device remains in the error state, and delivers additional data events as directed by the <see cref="DataEventEnabled"></see> property. When all input has been delivered and the <see cref="DataEventEnabled"></see> property is again set to TRUE, another <see cref="ErrorEvent"></see> is delivered with locus Input.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ErrorResponse.Retry">
			<summary>This response directs the device to retry the input. The error state is exited, and State is changed to Idle.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.EVRWResult">
			<summary>Holds the structured return value for methods in the <see cref="T:Microsoft.PointOfService.ElectronicValueRW"></see> class.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.EVRWResult.#ctor(System.Int32,System.Object)">
			<summary>Creates an instance of the <see cref="T:Microsoft.PointOfService.EVRWResult"></see> structure.</summary>
			<param name="obj">The returned object that depends on the specific implementation.</param>
			<param name="data">The returned data that depends on the specific implementation.</param>
		</member>
		<member name="T:Microsoft.PointOfService.FiscalAdjustment">
			<summary>Enumerates the valid types of fiscal adjustments.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalAdjustment.AmountDiscount">
			<summary>Fixed amount discount. The amount parameter contains a currency value.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalAdjustment.AmountSurcharge">
			<summary>Fixed amount surcharge. The amount parameter contains a currency value.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalAdjustment.CouponAmountDiscount">
			<summary>Fixed amount discount. The amount parameter contains a currency value.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalAdjustment.CouponPercentageDiscount">
			<summary>Percentage discount. The amount parameter contains a percentage value.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalAdjustment.PercentageDiscount">
			<summary>Percentage discount. The amount parameter contains a percentage value.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalAdjustment.PercentageSurcharge">
			<summary>Percentage surcharge. The amount parameter contains a percentage value.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.FiscalAdjustmentType">
			<summary>Enumerates the valid types of package adjustments.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalAdjustmentType.Discount">
			<summary>Discount.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalAdjustmentType.Surcharge">
			<summary>Surcharge.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.FiscalContractorId">
			<summary>Enumerates the valid contractors to whom the receipt and/or some items of the receipt can be assigned.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalContractorId.First">
			<summary>First contractor is defined.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalContractorId.Second">
			<summary>Second contractor is defined.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalContractorId.Single">
			<summary>Single contractor.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.FiscalCountryCodes">
			<summary>Enumerates the valid countries/regions supported by the fiscal printer.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalCountryCodes.Brazil">
			<summary>The fiscal printer supports Brazil’s fiscal rules.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalCountryCodes.Bulgaria">
			<summary>The fiscal printer supports Bulgaria's fiscal rules.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalCountryCodes.CzechRepublic">
			<summary>The fiscal printer supports Czech Republic fiscal rules.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalCountryCodes.Greece">
			<summary>The fiscal printer supports Greece's fiscal rules.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalCountryCodes.Hungary">
			<summary>The fiscal printer supports Hungary's fiscal rules.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalCountryCodes.Italy">
			<summary>The fiscal printer supports Italy's fiscal rules.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalCountryCodes.Other">
			<summary>The fiscal printer supports other fiscal rules.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalCountryCodes.Poland">
			<summary>The fiscal printer supports Poland's fiscal rules.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalCountryCodes.Romania">
			<summary>The fiscal printer supports Romania's fiscal rules.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalCountryCodes.Russia">
			<summary>The fiscal printer supports Russia's fiscal rules.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalCountryCodes.Turkey">
			<summary>The fiscal printer supports Turkey's fiscal rules.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalCountryCodes.Ukraine">
			<summary>The fiscal printer supports Ukraine's fiscal rules.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.FiscalCurrency">
			<summary>Enumerates the valid currencies for a fiscal printer.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalCurrency.BrazilianCruceiro">
			<summary>The actual currency is Brazilian Cruceiro.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalCurrency.BulgarianLev">
			<summary>The actual currency is Bulgarian Lev.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalCurrency.Euro">
			<summary>The actual currency is euro.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalCurrency.GreekDrachma">
			<summary>The actual currency is Greek Drachma.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalCurrency.HungarianForint">
			<summary>The actual currency is Hungarian Forint.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalCurrency.ItalianLira">
			<summary>The actual currency is Italian Lira.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalCurrency.Other">
			<summary>The actual currency is Other.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalCurrency.PolishZloty">
			<summary>The actual currency is Polish Zloty.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalCurrency.RomanianLeu">
			<summary>The actual currency is Romanian Leu.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalCurrency.RussianRouble">
			<summary>The actual currency is Russian Rouble.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalCurrency.TurkishLira">
			<summary>The actual currency is New Turkish Lira.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.FiscalData">
			<summary>Enumerates the valid data items that can be retrieved from a Fiscal Printer.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalData.CurrentTotal">
			<summary>Gets the current receipt total.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalData.DailyTotal">
			<summary>Gets the daily total.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalData.DescriptionLength">
			<summary>Gets the maximum number of characters that can be passed as a description parameter for a specific method, defined by the given identifier in the itemOption parameter.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalData.Firmware">
			<summary>Gets the fiscal printer’s firmware release number.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalData.FiscalDocument">
			<summary>Gets the number of daily fiscal documents.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalData.FiscalDocumentVoid">
			<summary>Gets the number of daily voided fiscal documents.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalData.FiscalReceipt">
			<summary>Gets the number of daily fiscal sales receipts.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalData.FiscalReceiptVoid">
			<summary>Gets the number of daily voided fiscal sales receipts.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalData.GrandTotal">
			<summary>Gets the fiscal printer’s grand total.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalData.LineCount">
			<summary>Gets the number of printed lines, defined by the given identifier in the itemOption argument. If the <see cref="P:Microsoft.PointOfService.FiscalPrinter.CapMultiContractor"></see> property is true, line counters depend on the contractor defined by the <see cref="P:Microsoft.PointOfService.FiscalPrinter.ContractorId"></see> property.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalData.NonFiscalDocument">
			<summary>Gets the number of daily non fiscal documents.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalData.NonFiscalDocumentVoid">
			<summary>Gets the number of daily voided non fiscal documents.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalData.NonFiscalReceipt">
			<summary>Gets the number of daily non fiscal receipts.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalData.NotPaid">
			<summary>Gets the current total of not paid receipts.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalData.NumberOfConfigurationBlocks">
			<summary>Gets the grand number of configuration blocks.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalData.NumberOfCurrencyBlocks">
			<summary>Gets the grand number of currency blocks.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalData.NumberOfHeaderBlocks">
			<summary>Gets the grand number of header blocks.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalData.NumberOfResetBlocks">
			<summary>Gets the grand number of reset blocks.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalData.NumberOfVatBlocks">
			<summary>Gets the grand number of VAT blocks.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalData.NumberOfVoidedReceipts">
			<summary>Gets the total number of voided receipts.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalData.PrinterId">
			<summary>Gets the fiscal printer’s fiscal ID.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalData.ReceiptNumber">
			<summary>Gets the number of fiscal receipts printed.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalData.Refund">
			<summary>Gets the current total of refunds.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalData.RefundVoid">
			<summary>Gets the current total of voided refunds.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalData.Restart">
			<summary>Gets the fiscal printer’s restart count.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalData.SimplifiedInvoice">
			<summary>Gets the number of daily simplified invoices.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalData.Tender">
			<summary>Gets the payment description used in the <see cref="M:Microsoft.PointOfService.FiscalPrinter.PrintRecTotal(System.Decimal,System.Decimal,System.String)"></see> method.  When specifying this value, a PaymentDescription value from <see cref="T:Microsoft.PointOfService.FiscalPrinter"></see> must be passed in the itemOption parameter.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalData.ZReport">
			<summary>Gets the Z report number.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.FiscalDataItem">
			<summary>Defines the programmatic structure used by the service object to return a fiscal data item from a Fiscal Printer device.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalDataItem.#ctor(System.String,System.Int32)">
			<summary>Creates an instance of the FiscalDataItem structure from parameters specifying the instance's constituent parts.</summary>
			<param name="itemOption">Optional integer data retrieved for some <see cref="T:Microsoft.PointOfService.FiscalData"></see> values.</param>
			<param name="data">A character string that contains the returned data requested from <see cref="M:Microsoft.PointOfService.FiscalPrinter.GetData(Microsoft.PointOfService.FiscalData,System.Int32)"></see>.</param>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalDataItem.op_Equality(Microsoft.PointOfService.FiscalDataItem,System.Object)">
			<summary>Compares the specified <see cref="T:Microsoft.PointOfService.FiscalDataItem"></see> and object to determine whether they are the same.</summary>
			<returns>True if a is equal to b; otherwise, false.</returns>
			<param name="a">The <see cref="T:Microsoft.PointOfService.FiscalDataItem"></see> to be compared to b</param>
			<param name="b">The object to be compared to a.</param>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalDataItem.op_Inequality(Microsoft.PointOfService.FiscalDataItem,System.Object)">
			<summary>Compares the specified <see cref="T:Microsoft.PointOfService.FiscalDataItem"></see> and object to determine whether they are different.</summary>
			<returns>True if a is not equal to b; otherwise, false.</returns>
			<param name="a">The <see cref="T:Microsoft.PointOfService.FiscalDataItem"></see> to be compared to b</param>
			<param name="b">The object to be compared to a.</param>
		</member>
		<member name="T:Microsoft.PointOfService.FiscalDateType">
			<summary>Enumerates the valid types of dates that can be supported by the fiscal printer.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalDateType.Configuration">
			<summary>Date of configuration.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalDateType.EndOfDay">
			<summary>Date of last end of day.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalDateType.RealTimeClock">
			<summary>Real time clock of the fiscal printer.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalDateType.Reset">
			<summary>Date of last reset.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalDateType.Start">
			<summary>Date of start.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalDateType.VatChange">
			<summary>Date of last VAT change.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.FiscalErrorLevel">
			<summary>Enumerates the valid severity levels for an error condition on a fiscal printer.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalErrorLevel.Blocked">
			<summary>A severe hardware failure (for example, a fiscal memory failure) that can be resolved only by authorized technicians has occurred. This error cannot be recovered.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalErrorLevel.Fatal">
			<summary>A nonrecoverable error (for example, an internal printer failure) has occurred.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalErrorLevel.None">
			<summary>No error condition is present.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalErrorLevel.Recoverable">
			<summary>A recoverable error (for example, out of paper) has occurred.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.FiscalMessageType">
			<summary>Enumerates all possible fiscal message types.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalMessageType.Advance">
			<summary>Advance.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalMessageType.AdvancePaid">
			<summary>Advance paid.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalMessageType.AmountToBePaid">
			<summary>Amount to be paid.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalMessageType.AmountToBePaidBack">
			<summary>Amount to be paid back.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalMessageType.Card">
			<summary>Card.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalMessageType.CardNumber">
			<summary>Card number.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalMessageType.CardType">
			<summary>Card type.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalMessageType.Cash">
			<summary>Cash.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalMessageType.Cashier">
			<summary>Cashier.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalMessageType.CashRegisterNumber">
			<summary>Cash register number.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalMessageType.Change">
			<summary>Change.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalMessageType.Cheque">
			<summary>Check.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalMessageType.ClientNumber">
			<summary>Client number.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalMessageType.ClientSignature">
			<summary>Client signature.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalMessageType.CounterState">
			<summary>Counter state.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalMessageType.CreditCard">
			<summary>Credit card.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalMessageType.Currency">
			<summary>Currency.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalMessageType.CurrencyValue">
			<summary>Currency value.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalMessageType.Deposit">
			<summary>Deposit.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalMessageType.DepositReturned">
			<summary>Deposit returned.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalMessageType.DotLine">
			<summary>Dot line.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalMessageType.DriverNumber">
			<summary>Driver number.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalMessageType.EmptyLine">
			<summary>Empty line.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalMessageType.FreeText">
			<summary>Free text</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalMessageType.FreeTextWithDayLimit">
			<summary>Free text with day limit.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalMessageType.GivenDiscount">
			<summary>Given discount.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalMessageType.LocalCredit">
			<summary>Local credit.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalMessageType.MileageKilometers">
			<summary>Mileage (kilometers).</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalMessageType.Note">
			<summary>Note.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalMessageType.Paid">
			<summary>Paid.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalMessageType.PayIn">
			<summary>Pay in.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalMessageType.PointGranted">
			<summary>Point granted.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalMessageType.PointsBonus">
			<summary>Points bonus.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalMessageType.PointsReceipt">
			<summary>Points receipt.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalMessageType.PointsTotal">
			<summary>Points total.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalMessageType.Profited">
			<summary>Profited.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalMessageType.Rate">
			<summary>Rate.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalMessageType.RegisterNumber">
			<summary>Register number.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalMessageType.ShiftNumber">
			<summary>Shift number.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalMessageType.StateOfAnAccount">
			<summary>State of an account.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalMessageType.Subscription">
			<summary>Subscription.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalMessageType.Table">
			<summary>Table.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalMessageType.ThankYouForLoyalty">
			<summary>Thank you for your loyalty.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalMessageType.TransactionNumber">
			<summary>Transaction number.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalMessageType.ValidTo">
			<summary>Valid to.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalMessageType.Voucher">
			<summary>Voucher.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalMessageType.VoucherPaid">
			<summary>Voucher paid.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalMessageType.VoucherValue">
			<summary>Voucher value.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalMessageType.WithDiscount">
			<summary>With discount.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalMessageType.WithoutUplift">
			<summary>Without uplift.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.FiscalPrinter">
			<summary>Defines the programmatic interface for a UPOS fiscal printer device.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalPrinter.#ctor">
			<summary>Creates an instance of <see cref="FiscalPrinter"></see> class.</summary>
		</member>
		<member name="E:Microsoft.PointOfService.FiscalPrinter.ErrorEvent">
			<summary>Notifies the application that a fiscal printer error has been detected and that a suitable response by the application is necessary to process the error condition.</summary>
		</member>
		<member name="E:Microsoft.PointOfService.FiscalPrinter.OutputCompleteEvent">
			<summary>Notifies the application that the queued output request associated with the <see cref="OutputId"></see> property has completed successfully.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.CurrencyEuro">
			<summary>Indicates that the fiscal currency is the euro.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.DescriptionLengthItem">
			<summary>Indicates the <see cref="M:Microsoft.PointOfService.FiscalPrinter.PrintRecItem(System.String,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.String)"></see> method for itemOption in the <see cref="M:Microsoft.PointOfService.FiscalPrinter.GetData(Microsoft.PointOfService.FiscalData,System.Int32)"></see> method.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.DescriptionLengthItemAdjustment">
			<summary>Indicates the <see cref="M:Microsoft.PointOfService.FiscalPrinter.PrintRecItemAdjustment(Microsoft.PointOfService.FiscalAdjustment,System.String,System.Decimal,System.Decimal)"></see> method for itemOption in the <see cref="M:Microsoft.PointOfService.FiscalPrinter.GetData(Microsoft.PointOfService.FiscalData,System.Int32)"></see> method.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.DescriptionLengthItemFuel">
			<summary>Indicates the <see cref="M:Microsoft.PointOfService.FiscalPrinter.PrintRecItemFuel(System.String,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.String,System.Decimal,System.String)"></see> method for itemOption in the <see cref="M:Microsoft.PointOfService.FiscalPrinter.GetData(Microsoft.PointOfService.FiscalData,System.Int32)"></see> method.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.DescriptionLengthItemFuelVoid">
			<summary>Indicates the <see cref="M:Microsoft.PointOfService.FiscalPrinter.PrintRecItemFuelVoid(System.String,System.Decimal,System.Decimal,System.Decimal)"></see> method for itemOption in the <see cref="M:Microsoft.PointOfService.FiscalPrinter.GetData(Microsoft.PointOfService.FiscalData,System.Int32)"></see> method.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.DescriptionLengthNotPaid">
			<summary>Indicates the <see cref="M:Microsoft.PointOfService.FiscalPrinter.PrintRecNotPaid(System.String,System.Decimal)"></see> method for itemOption in the <see cref="M:Microsoft.PointOfService.FiscalPrinter.GetData(Microsoft.PointOfService.FiscalData,System.Int32)"></see> method.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.DescriptionLengthPackageAdjustment">
			<summary>Indicates the <see cref="M:Microsoft.PointOfService.FiscalPrinter.PrintRecPackageAdjustment(Microsoft.PointOfService.FiscalAdjustmentType,System.String,Microsoft.PointOfService.VatInfo[])"></see> method for itemOption in the <see cref="M:Microsoft.PointOfService.FiscalPrinter.GetData(Microsoft.PointOfService.FiscalData,System.Int32)"></see> method.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.DescriptionLengthRefund">
			<summary>Indicates the <see cref="M:Microsoft.PointOfService.FiscalPrinter.PrintRecRefund(System.String,System.Decimal,System.Decimal)"></see> method for itemOption in the <see cref="M:Microsoft.PointOfService.FiscalPrinter.GetData(Microsoft.PointOfService.FiscalData,System.Int32)"></see> method.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.DescriptionLengthRefundVoid">
			<summary>Indicates the <see cref="M:Microsoft.PointOfService.FiscalPrinter.PrintRecRefundVoid(System.String,System.Decimal,System.Decimal)"></see> method for itemOption in the <see cref="M:Microsoft.PointOfService.FiscalPrinter.GetData(Microsoft.PointOfService.FiscalData,System.Int32)"></see> method.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.DescriptionLengthSubtotalAdjustment">
			<summary>Indicates the <see cref="M:Microsoft.PointOfService.FiscalPrinter.PrintRecSubtotalAdjustment(Microsoft.PointOfService.FiscalAdjustment,System.String,System.Decimal)"></see> method for itemOption in the <see cref="M:Microsoft.PointOfService.FiscalPrinter.GetData(Microsoft.PointOfService.FiscalData,System.Int32)"></see> method.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.DescriptionLengthTotal">
			<summary>Indicates the <see cref="M:Microsoft.PointOfService.FiscalPrinter.PrintRecTotal(System.Decimal,System.Decimal,System.String)"></see> method for itemOption in the <see cref="M:Microsoft.PointOfService.FiscalPrinter.GetData(Microsoft.PointOfService.FiscalData,System.Int32)"></see> method.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.DescriptionLengthVoid">
			<summary>Indicates the <see cref="M:Microsoft.PointOfService.FiscalPrinter.PrintRecVoid(System.String)"></see> method for itemOption in the <see cref="M:Microsoft.PointOfService.FiscalPrinter.GetData(Microsoft.PointOfService.FiscalData,System.Int32)"></see> method.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.DescriptionLengthVoidItem">
			<summary>Indicates the <see cref="M:Microsoft.PointOfService.FiscalPrinter.PrintRecItemVoid(System.String,System.Decimal,System.Int32,System.Decimal,System.Decimal,System.String)"></see> and <see cref="M:Microsoft.PointOfService.FiscalPrinter.PrintRecItemAdjustmentVoid(Microsoft.PointOfService.FiscalAdjustment,System.String,System.Decimal,System.Decimal)"></see> method for itemOption in the <see cref="M:Microsoft.PointOfService.FiscalPrinter.GetData(Microsoft.PointOfService.FiscalData,System.Int32)"></see> method.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.ExtendedErrorBadDate">
			<summary>Indicates one of the date parameters is invalid.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.ExtendedErrorBadItemAmount">
			<summary>Indicates the amount parameter is invalid.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.ExtendedErrorBadItemDescription">
			<summary>Indicates the description parameter is either too long, contains illegal characters, or contains a reserved word.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.ExtendedErrorBadItemQuantity">
			<summary>Indicates the quantity parameter is invalid.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.ExtendedErrorBadLength">
			<summary>Indicates the length of the string to print is too long. </summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.ExtendedErrorBadPrice">
			<summary>Indicates the price parameter is invalid. </summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.ExtendedErrorBadVat">
			<summary>Indicates the VAT parameter is invalid. </summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.ExtendedErrorClockError">
			<summary>Indicates the fiscal printer's internal clock has failed. </summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.ExtendedErrorCoverOpen">
			<summary>Indicates the fiscal printer cover is open. </summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.ExtendedErrorDayEndRequired">
			<summary>Calls the <see cref="M:Microsoft.PointOfService.FiscalPrinter.PrintZReport"></see> method to print the report. The fiscal day must be completed before calling this function.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.ExtendedErrorJournalEmpty">
			<summary>Indicates the journal station has run out of paper.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.ExtendedErrorMemoryDisconnected">
			<summary>Indicates the fiscal printer's memory has been disconnected.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.ExtendedErrorMemoryFull">
			<summary>Indicates the fiscal printer’s fiscal memory has been exhausted.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.ExtendedErrorMissingDevices">
			<summary>Indicates that some of the other devices (according to the local fiscal legislation) that should be connected are missing. </summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.ExtendedErrorMissingSetCurrency">
			<summary>Indicates the fiscal printer is expecting the activation of a new currency.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.ExtendedErrorNegativeTotal">
			<summary>Indicates the fiscal printer’s computed total or subtotal is less than zero.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.ExtendedErrorReceiptEmpty">
			<summary>Indicates the receipt station has run out of paper.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.ExtendedErrorReceiptTotalOverflow">
			<summary>Indicates the receipt total has overflowed.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.ExtendedErrorSlipEmpty">
			<summary>Indicates the slip station has run out of paper.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.ExtendedErrorSlipForm">
			<summary>Indicates a slip form is present.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.ExtendedErrorTechnicalAssistance">
			<summary>Indicates the fiscal printer has encountered a severe error condition. Calling for fiscal printer technical help is required.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.ExtendedErrorTotalsError">
			<summary>Indicates the Grand Total in working memory does not match the one in the EPROM.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.ExtendedErrorWordNotAllowed">
			<summary>Indicates the description contains a reserved word.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.ExtendedErrorWrongState">
			<summary>Indicates the requested method cannot be executed in the fiscal printer’s current state.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.LineCountComment">
			<summary>Indicates the number of comment lines.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.LineCountDiscount">
			<summary>Indicates the number of discount lines.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.LineCountDiscountVoid">
			<summary>Indicates the number of voided refund lines.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.LineCountItem">
			<summary>Indicates the number of item lines.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.LineCountItemVoid">
			<summary>Indicates the number of voided item lines.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.LineCountRefund">
			<summary>Indicates the number of refund lines.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.LineCountRefundVoid">
			<summary>Indicates the number of voided refund lines.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.LineCountSubtotal">
			<summary>Indicates the number of subtotal lines.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.LineCountSubtotalDiscount">
			<summary>Indicates the number of subtotal discount lines.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.LineCountSubtotalDiscountVoid">
			<summary>Indicates the number of voided subtotal discount lines.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.LineCountSubtotalSurcharge">
			<summary>Indicates the number of subtotal surcharge lines.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.LineCountSubtotalSurchargeVoid">
			<summary>Indicates the number of voided subtotal surcharge lines.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.LineCountSurcharge">
			<summary>Indicates the number of surcharge lines.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.LineCountSurchargeVoid">
			<summary>Indicates the number of voided surcharge lines.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.LineCountTotal">
			<summary>Indicates the number of total lines.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.PaymentDescriptionCash">
			<summary>Indicates cash.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.PaymentDescriptionCheque">
			<summary>Indicates cheque.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.PaymentDescriptionChitty">
			<summary>Indicates chitty.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.PaymentDescriptionCoupon">
			<summary>Indicates coupon.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.PaymentDescriptionCurrency">
			<summary>Indicates currency.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.PaymentDescriptionDrivenOff">
			<summary>Indicates that the description has been driven off.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.PaymentDescriptionEftImprinter">
			<summary>Indicates printer EFT.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.PaymentDescriptionEftTerminal">
			<summary>Indicates terminal EFT.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.PaymentDescriptionFreeGift">
			<summary>Indicates gift.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.PaymentDescriptionGiro">
			<summary>Indicates giro.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.PaymentDescriptionHome">
			<summary>Indicates home.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.PaymentDescriptionImprinterWithIssuer">
			<summary>Indicates imprinter with issuer.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.PaymentDescriptionLocalAccount">
			<summary>Indicates local account.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.PaymentDescriptionLocalAccountCard">
			<summary>Indicates local card account.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.PaymentDescriptionPayCard">
			<summary>Indicates pay card.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.PaymentDescriptionPayCardManual">
			<summary>Indicates manual pay card.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.PaymentDescriptionPrepay">
			<summary>Indicates prepay.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.PaymentDescriptionPumpTest">
			<summary>Indicates pump test.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.PaymentDescriptionShortCredit">
			<summary>Indicates credit.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.PaymentDescriptionStaff">
			<summary>Indicates staff.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.PaymentDescriptionTerminalImprinter">
			<summary>Indicates a terminal imprinter.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.PaymentDescriptionVoucher">
			<summary>Indicates a voucher.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.StatusCoverOK">
			<summary>Indicates the cover is closed.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.StatusCoverOpen">
			<summary>Indicates the cover is open.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.StatusIdle">
			<summary>Indicates all asynchronous output has finished, either successfully or because output has been cleared.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.StatusJournalCoverOK">
			<summary>Indicates the journal station cover is closed.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.StatusJournalCoverOpen">
			<summary>Indicates the receipt station cover is open.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.StatusJournalEmpty">
			<summary>Indicates no journal paper.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.StatusJournalNearEmpty">
			<summary>Indicates journal paper is low.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.StatusJournalPaperOK">
			<summary>Indicates journal paper is ready.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.StatusReceiptCoverOK">
			<summary>Indicates receipt station cover is closed.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.StatusReceiptCoverOpen">
			<summary>Indicates receipt station cover is open.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.StatusReceiptEmpty">
			<summary>Indicates no receipt paper.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.StatusReceiptNearEmpty">
			<summary>Indicates receipt paper is low.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.StatusReceiptPaperOK">
			<summary>Indicates receipt paper is ready.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.StatusSlipCoverOK">
			<summary>Indicates slip station cover is closed.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.StatusSlipCoverOpen">
			<summary>Indicates slip station cover is open.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.StatusSlipEmpty">
			<summary>Indicates no slip form is inserted, and no slip form has been detected at the entrance to the slip station.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.StatusSlipNearEmpty">
			<summary>Indicates almost at the bottom of the slip form.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinter.StatusSlipPaperOK">
			<summary>Indicates a slip form is inserted.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalPrinter.BeginFiscalDocument(System.Int32)">
			<summary>Starts fiscal printing to the slip station.</summary>
			<param name="documentAmount">Amount of document to be stored by the printer.</param>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalPrinter.BeginFiscalReceipt(System.Boolean)">
			<summary>Starts fiscal printing to the receipt station.</summary>
			<param name="printHeader">Indicates whether to print the header lines currently.</param>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalPrinter.BeginFixedOutput(Microsoft.PointOfService.FiscalReceiptStation,System.Int32)">
			<summary>Starts nonfiscal fixed text printing on a printer station.</summary>
			<param name="documentType">Identifier of a document stored in the printer.</param>
			<param name="station">The printer station to be used. Can be either Receipt or Slip.</param>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalPrinter.BeginInsertion(System.Int32)">
			<summary>Starts slip processing.</summary>
			<param name="timeout">Specifies the number of milliseconds before failing the method. If zero, <see cref="BeginInsertion"></see> tries to begin insertion mode, then returns the appropriate status immediately. If WaitForever, <see cref="BeginInsertion"></see> tries to begin insertion mode, then waits as long as needed until either the form is inserted or an error occurs.</param>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalPrinter.BeginItemList(System.Int32)">
			<summary>Starts a validation report of items that belong to a particular VAT class.</summary>
			<param name="vatId">VAT identifier for reporting.</param>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalPrinter.BeginNonFiscal">
			<summary>Starts nonfiscal operations on the printer.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalPrinter.BeginRemoval(System.Int32)">
			<summary>Starts form-removal processing.</summary>
			<param name="timeout">Specifies the number of milliseconds before failing the method. If zero, <see cref="BeginRemoval"></see> tries to begin removal mode, then immediately returns the appropriate status. If WaitForever, <see cref="BeginRemoval"></see> tries to begin removal mode, then waits as long as needed until either the form is removed or an error occurs.</param>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalPrinter.BeginTraining">
			<summary>Starts training operations. </summary>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalPrinter.ClearError">
			<summary>Clears all printer error conditions.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalPrinter.ClearOutput">
			<summary>Clears all buffered output data. This includes all asynchronous output.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalPrinter.EndFiscalDocument">
			<summary>Stops fiscal printing to the slip station.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalPrinter.EndFiscalReceipt(System.Boolean)">
			<summary>Stops fiscal printing to the receipt station.</summary>
			<param name="printHeader">Indicates whether to print the header lines currently.</param>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalPrinter.EndFixedOutput">
			<summary>Stops nonfiscal fixed text printing on a printer station.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalPrinter.EndInsertion">
			<summary>Ends form insertion processing.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalPrinter.EndItemList">
			<summary>Closes a validation report of items that belong to a particular VAT class.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalPrinter.EndNonFiscal">
			<summary>Closes nonfiscal operations on one printer station.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalPrinter.EndRemoval">
			<summary>Ends form removal processing.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalPrinter.EndTraining">
			<summary>Stops training operations on either the receipt or slip station.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalPrinter.GetData(Microsoft.PointOfService.FiscalData,System.Int32)">
			<summary>Retrieves data and counters from the printer’s fiscal module.</summary>
			<returns>A <see cref="T:Microsoft.PointOfService.FiscalDataItem"></see> that contains the information retrieved.</returns>
			<param name="optArgs">For some dataItem types this additional argument may be needed. Contact the Service Object vendor's documentation for more information.</param>
			<param name="dataItem">The specific <see cref="T:Microsoft.PointOfService.FiscalData"></see> item to retrieve.</param>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalPrinter.GetDate">
			<summary>Gets the printer's date and time.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalPrinter.GetTotalizer(System.Int32,Microsoft.PointOfService.FiscalTotalizer)">
			<summary>Gets the totalizer associated with the specified vat id and totalizer type.</summary>
			<param name="vatId">VAT identifier of the required totalizer.</param>
			<param name="optArgs">The totalizer type.</param>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalPrinter.GetVatEntry(System.Int32,System.Int32)">
			<summary>Gets the rate associated with a given VAT identifier.</summary>
			<param name="vatId">VAT identifier of the required rate.</param>
			<param name="optArgs">Rate associated with the VAT identifier.</param>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalPrinter.PrintDuplicateReceipt">
			<summary>Prints a duplicate of a buffered transaction.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalPrinter.PrintFiscalDocumentLine(System.String)">
			<summary>Prints a line of fiscal text to the slip station.</summary>
			<param name="documentLine">String to be printed on the fiscal slip.</param>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalPrinter.PrintFixedOutput(System.Int32,System.Int32,System.String)">
			<summary>Prints a line of a fixed document to the print station specified in the <see cref="BeginFixedOutput"></see> method.</summary>
			<param name="documentType">Identifier of a document stored in the printer.</param>
			<param name="lineNumber">Number of the line in the document to print.</param>
			<param name="data">String parameter for placement in printed line.</param>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalPrinter.PrintNormal(Microsoft.PointOfService.FiscalPrinterStations,System.String)">
			<summary>Prints data on the printer station.</summary>
			<param name="station">The printer station to use (Receipt, Journal, JournalReceipt, or Slip).</param>
			<param name="data">The characters to print, consisting mostly of printable characters.</param>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalPrinter.PrintPeriodicTotalsReport(System.DateTime,System.DateTime)">
			<summary>Prints a report of totals for a range of dates on the receipt.</summary>
			<param name="startingDate">Starting date of report to print.</param>
			<param name="endingDate">Ending date of report to print.</param>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalPrinter.PrintPowerLossReport">
			<summary>Prints on the receipt a report of a power failure that resulted in a loss of data that is stored in the CMOS of the printer.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalPrinter.PrintRecCash(System.Decimal)">
			<summary>Prints a cash-in or cash-out receipt amount on the station defined by the <see cref="FiscalReceiptStation"></see> property.</summary>
			<param name="amount">Amount to be incremented or decremented.</param>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalPrinter.PrintRecItem(System.String,System.Decimal,System.Int32,System.Int32,System.Decimal,System.String)">
			<summary>Prints a receipt item for a sold item on the station specified by the <see cref="P:Microsoft.PointOfService.FiscalPrinter.FiscalReceiptStation"></see> property.</summary>
			<param name="price">Price of the line item.</param>
			<param name="unitName">Name of the unit; for example, "kg" or "ltr" or "pcs". If not used, an empty string ("") is transferred.</param>
			<param name="description">Text describing the item sold.</param>
			<param name="vatInfo">VAT rate identifier. If not used, a zero is transferred.</param>
			<param name="unitPrice">Price of each item. If not used, a zero is transferred.</param>
			<param name="quantity">Number of items. If zero, a single item is assumed.</param>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalPrinter.PrintRecItemAdjustment(Microsoft.PointOfService.FiscalAdjustment,System.String,System.Decimal,System.Int32)">
			<summary>Applies and prints a discount or a surcharge to the last receipt item sold.</summary>
			<param name="amount">Amount of the discount.</param>
			<param name="vatInfo">VAT rate identifier.</param>
			<param name="description">Text that describes the discount.</param>
			<param name="adjustmentType">Type of discount.</param>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalPrinter.PrintRecItemAdjustmentVoid(Microsoft.PointOfService.FiscalAdjustment,System.String,System.Decimal,System.Int32)">
			<summary>Takes a VAT rate identifier that corresponds to an entry in the VAT table.</summary>
			<param name="amount">Amount of the adjustment to be voided. If a currency value was specified by the adjustmentType, four decimal places are used.</param>
			<param name="vatInfo">VAT rate identifier.</param>
			<param name="description">Text describing the adjustment to be voided.</param>
			<param name="adjustmentType">Type of adjustment to be voided. See <see cref="T:Microsoft.PointOfService.FiscalAdjustment"></see> for descriptions of the possible values.</param>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalPrinter.PrintRecItemFuel(System.String,System.Decimal,System.Int32,System.Int32,System.Decimal,System.String,System.Decimal,System.String)">
			<summary>Prints a receipt fuel item on the station specified by the <see cref="FiscalReceiptStation"></see> property.</summary>
			<param name="description">Text that describes the fuel product.</param>
			<param name="specialTax">Special tax amount (for example, road tax).</param>
			<param name="price">Price of the fuel item.</param>
			<param name="unitPrice">Price of the fuel item per volume.</param>
			<param name="specialTaxName">Name of the special tax.</param>
			<param name="quantity">Number of items. If zero, a single item is assumed.</param>
			<param name="unitName">Name of the volume unit (for example, "ltr").</param>
			<param name="vatInfo">VAT rate identifier.</param>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalPrinter.PrintRecItemFuelVoid(System.String,System.Decimal,System.Int32,System.Decimal)">
			<summary>Voids a fuel item on the station specified by the <see cref="FiscalReceiptStation"></see> property.</summary>
			<param name="description">Text that describes the fuel product.</param>
			<param name="specialTax">Special tax amount (for example, road tax).</param>
			<param name="price">Price of the fuel item.</param>
			<param name="vatInfo">VAT table identifier.</param>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalPrinter.PrintRecItemRefund(System.String,System.Decimal,System.Int32,System.Int32,System.Decimal,System.String)">
			<summary>Processes one or more item refunds.</summary>
			<param name="description">Text describing the refund.</param>
			<param name="unitAmount">Amount of each refund item. If not used a zero must be transferred.</param>
			<param name="amount">The amount of the refund line.</param>
			<param name="quantity">Number of items. If zero, a single item is assumed.</param>
			<param name="unitName">Name of the unit i.e., “kg” or “ltr” or “pcs”. If not used an empty string (“”) must be transferred.</param>
			<param name="vatInfo">VAT rate identifier or amount. If not used a zero must be transferred.</param>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalPrinter.PrintRecItemRefundVoid(System.String,System.Decimal,System.Int32,System.Int32,System.Decimal,System.String)">
			<summary>Processes a void of one or more item refunds.</summary>
			<param name="description">Text describing the refund.</param>
			<param name="unitAmount">Amount of each refund item. If not used a zero must be transferred.</param>
			<param name="amount">The amount of the refund line.</param>
			<param name="quantity">Number of items. If zero, a single item is assumed.</param>
			<param name="unitName">Name of the unit i.e., “kg” or “ltr” or “pcs”. If not used an empty string (“”) must be transferred.</param>
			<param name="vatInfo">VAT rate identifier or amount. If not used a zero must be transferred.</param>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalPrinter.PrintRecItemVoid(System.String,System.Decimal,System.Int32,System.Int32,System.Decimal,System.String)">
			<summary>Cancels one or more items that has been added to the receipt and prints a void description on the station defined by the <see cref="P:Microsoft.PointOfService.FiscalPrinter.FiscalReceiptStation"></see> property.</summary>
			<param name="description">Text describing the item to be voided.</param>
			<param name="price">Price of the item to be voided.</param>
			<param name="unitPrice">Price of each item. If not used, a zero must be transferred.</param>
			<param name="quantity">Quantity of item to be voided. If zero, a single item is assumed.</param>
			<param name="unitName">Name of the unit (for example: "kg" or "ltr" or "pcs"). If not used, an empty string ("") must be transferred.</param>
			<param name="vatInfo">VAT rate identifier.</param>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalPrinter.PrintRecMessage(System.String)">
			<summary>Prints a message on the fiscal receipt.</summary>
			<param name="message">Text message to print.</param>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalPrinter.PrintRecNotPaid(System.String,System.Decimal)">
			<summary>Indicates a part of the receipt's total that is unpaid.</summary>
			<param name="description">Text that describes the unpaid amount.</param>
			<param name="amount">Amount not paid.</param>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalPrinter.PrintRecPackageAdjustment(Microsoft.PointOfService.FiscalAdjustmentType,System.String,System.Collections.Generic.IEnumerable{Microsoft.PointOfService.VatInfo})">
			<summary>Called to give an adjustment for a package of some items booked before.</summary>
			<param name="description">Text describing the adjustment.</param>
			<param name="adjustmentType">Type of adjustment.</param>
			<param name="vatAdjustments">Structure containing a list of adjustment(s) for different VAT(s).</param>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalPrinter.PrintRecPackageAdjustVoid(Microsoft.PointOfService.FiscalAdjustmentType,System.Collections.Generic.IEnumerable{Microsoft.PointOfService.VatInfo})">
			<summary>Specifies a list of adjustments to be voided.</summary>
			<param name="vatAdjustments">Structure containing a list of adjustment(s) to be voided for different VAT(s).</param>
			<param name="adjustmentType">Type of adjustment.</param>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalPrinter.PrintRecRefund(System.String,System.Decimal,System.Int32)">
			<summary>Processes a refund.</summary>
			<param name="description">Text that describes the refund.</param>
			<param name="amount">Amount of the refund.</param>
			<param name="vatInfo">VAT table identifier.</param>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalPrinter.PrintRecRefundVoid(System.String,System.Decimal,System.Int32)">
			<summary>Processes a void of a refund.</summary>
			<param name="description">Text that describes the refund.</param>
			<param name="amount">Amount of the refund.</param>
			<param name="vatInfo">VAT table identifier.</param>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalPrinter.PrintRecSubtotal(System.Decimal)">
			<summary>Checks and prints the current receipt subtotal.</summary>
			<param name="amount">Amount of the subtotal.</param>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalPrinter.PrintRecSubtotalAdjustment(Microsoft.PointOfService.FiscalAdjustment,System.String,System.Decimal)">
			<summary>Applies and prints a discount or surcharge to the current receipt subtotal.</summary>
			<param name="description">Text describing the discount.</param>
			<param name="adjustmentType">Type of discount.</param>
			<param name="amount">Amount of the discount.</param>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalPrinter.PrintRecSubtotalAdjustVoid(Microsoft.PointOfService.FiscalAdjustment,System.Decimal)">
			<summary>Voids a preceding subtotal adjustment on the station defined by the <see cref="FiscalReceiptStation"></see> property.</summary>
			<param name="adjustmentType">Type of adjustment.</param>
			<param name="amount">Amount of the adjustment (discount or surcharge).</param>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalPrinter.PrintRecTaxId(System.String)">
			<summary>Prints the customer's tax identification on the station defined by the <see cref="FiscalReceiptStation"></see> property.</summary>
			<param name="taxId">Customer identification with identification characters and tax number. </param>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalPrinter.PrintRecTotal(System.Decimal,System.Decimal,System.String)">
			<summary>Checks and prints the current receipt total on the station defined by the <see cref="FiscalReceiptStation"></see> property and tenders a payment.</summary>
			<param name="payment">Amount of payment tendered.</param>
			<param name="description">Text description of the payment or the index of a predefined payment description.</param>
			<param name="total">Application-computed receipt total.</param>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalPrinter.PrintRecVoid(System.String)">
			<summary>Cancels the current receipt.</summary>
			<param name="description">The text that describes the void.</param>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalPrinter.PrintReport(Microsoft.PointOfService.ReportType,System.String,System.String)">
			<summary>Prints a report of the fiscal EPROM contents on the receipt that occurred between two end points.</summary>
			<param name="startNum">ASCII string identifying the starting record in Fiscal Printer memory from which to begin printing.</param>
			<param name="reportType">The type of report to print. This will be one of the values defined by <see cref="T:Microsoft.PointOfService.ReportType"></see>.</param>
			<param name="endNum">ASCII string identifying the final record in Fiscal Printer memory at which printing is to end.</param>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalPrinter.PrintXReport">
			<summary>Prints a report of all the daily fiscal activities on the receipt.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalPrinter.PrintZReport">
			<summary>Prints a report of all the daily fiscal activities on the receipt.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalPrinter.ResetPrinter">
			<summary>Forces the printer to return to the Monitor state.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalPrinter.SetCurrency(Microsoft.PointOfService.FiscalCurrency)">
			<summary>Changes to a new currency (for example, euro).</summary>
			<param name="newCurrency">The new currency.</param>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalPrinter.SetDate(System.DateTime)">
			<summary>Sets the printer's date and time.</summary>
			<param name="newDate">DateTime value.</param>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalPrinter.SetHeaderLine(System.Int32,System.String,System.Boolean)">
			<summary>Sets one of the fiscal receipt header lines.</summary>
			<param name="doubleWidth">Print this line in double-wide characters.</param>
			<param name="text">Text to which to set the header line.</param>
			<param name="lineNumber">Line number of the header line to set.</param>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalPrinter.SetPosId(System.String,System.String)">
			<summary>Sets the POS and cashier identifiers.</summary>
			<param name="cashierId">Identifier of the cashier.</param>
			<param name="posId">Identifier for the POS system.</param>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalPrinter.SetStoreFiscalId(System.String)">
			<summary>Sets the store fiscal ID.</summary>
			<param name="id">Fiscal identifier.</param>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalPrinter.SetTrailerLine(System.Int32,System.String,System.Boolean)">
			<summary>Sets one of the fiscal receipt trailer lines.</summary>
			<param name="doubleWidth">Print this line in double-wide characters.</param>
			<param name="text">Text to which to set the trailer line.</param>
			<param name="lineNumber">Line number of the trailer line to set.</param>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalPrinter.SetVatTable">
			<summary>Sends the VAT table built inside the service object to the printer.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalPrinter.SetVatValue(System.Int32,System.String)">
			<summary>Sets the VAT ID and VAT value.</summary>
			<param name="vatId">Index of the VAT table entry to set.</param>
			<param name="vatValue">Tax value as a percentage.</param>
		</member>
		<member name="M:Microsoft.PointOfService.FiscalPrinter.VerifyItem(System.String,System.Int32)">
			<summary>Compares itemName and its vatId with the values stored in the printer.</summary>
			<param name="vatId">VAT identifier of the item.</param>
			<param name="itemName">Item to be verified.</param>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.ActualCurrency">
			<summary>Gets a value identifying which actual currency is used by the fiscal printer.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.AdditionalHeader">
			<summary>Gets or sets user-specific text to be printed on the receipt after the fixed header lines when calling the <see cref="BeginFiscalReceipt"></see> method.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.AdditionalTrailer">
			<summary>Get or sets user-specific text to be printed on the receipt after the fiscal trailer lines when calling the <see cref="EndFiscalReceipt"></see> method.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.AmountDecimalPlaces">
			<summary>Gets the number of decimal places that the fiscal printer uses for calculations.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.AsyncMode">
			<summary>Gets or sets a Boolean value that indicates whether certain print methods are performed asynchronously.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.CapAdditionalHeader">
			<summary>Gets a Boolean value that indicates whether the printer can print application-specific text after the fixed header lines.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.CapAdditionalLines">
			<summary>Gets a Boolean value that indicates whether the printer can print application-defined lines.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.CapAdditionalTrailer">
			<summary>Gets a Boolean value that indicates whether the printer can print application-specific text after the fiscal trailer lines.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.CapAmountAdjustment">
			<summary>Gets a Boolean value that indicates whether the printer handles discounts or surcharges.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.CapChangeDue">
			<summary>Gets a Boolean value that indicates whether text can be defined in the <see cref="ChangeDue"></see> property.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.CapCheckTotal">
			<summary>Gets a Boolean value that indicates whether automatic total comparison can be enabled.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.CapCoverSensor">
			<summary>Gets a Boolean value that indicates whether the printer has a "cover open" sensor.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.CapDoubleWidth">
			<summary>Gets a Boolean value that indicates whether the printer can print double-width characters.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.CapDuplicateReceipt">
			<summary>Gets a Boolean value that indicates whether the printer allows printing of more than one fiscal receipt.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.CapEmptyReceiptIsVoidable">
			<summary>Gets a Boolean value that indicates whether the printer can void an opened receipt.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.CapFiscalReceiptStation">
			<summary>Gets a Boolean value that indicates whether the printer can print transactions on the station defined by <see cref="FiscalReceiptStation"></see>.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.CapFiscalReceiptType">
			<summary>Gets a Boolean value that indicates whether the printer can print receipts defined by <see cref="FiscalReceiptType"></see>.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.CapFixedOutput">
			<summary>Gets a Boolean value that indicates whether the printer supports fixed-format printing through certain methods.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.CapHasVatTable">
			<summary>Gets a Boolean value that indicates whether the printer has a VAT table.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.CapIndependentHeader">
			<summary>Gets a Boolean value that indicates whether the printer can print header lines before the first fiscal receipt command is processed.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.CapItemList">
			<summary>Gets a Boolean value that indicates whether the printer can print a report of items of a specified VAT class.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.CapJrnEmptySensor">
			<summary>Gets a Boolean value that indicates whether the printer has an out-of-paper sensor.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.CapJrnNearEndSensor">
			<summary>Gets a Boolean value that indicates whether the printer has a low-paper sensor.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.CapJrnPresent">
			<summary>Gets a Boolean value that indicates whether the journal print station is present.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.CapMultiContractor">
			<summary>Gets a Boolean value that indicates whether the printer supports more than one contractor.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.CapNonFiscalMode">
			<summary>Gets a Boolean value that indicates whether the printer can print in nonfiscal mode.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.CapOnlyVoidLastItem">
			<summary>Gets a Boolean value that indicates whether only the last printed item can be voided.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.CapOrderAdjustmentFirst">
			<summary>Gets a Boolean value that indicates the order of use of <see cref="PrintRecItem"></see> and <see cref="PrintRecItemAdjustment"></see>.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.CapPackageAdjustment">
			<summary>Gets a Boolean value that indicates whether an adjustment can be given to a package of booked items.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.CapPercentAdjustment">
			<summary>Gets a Boolean value that indicates whether the printer handles percentage discounts or surcharges.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.CapPositiveAdjustment">
			<summary>Gets a Boolean property that indicates whether you can use the <see cref="PrintRecItemAdjustment"></see> method to apply surcharges.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.CapPostPreLine">
			<summary>Gets a Boolean value that indicates whether the printer can support additional lines defined by the <see cref="PostLine"></see> and <see cref="PreLine"></see> properties.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.CapPowerLossReport">
			<summary>Gets a Boolean value that indicates whether the printer can print a power-loss report by using the <see cref="PrintPowerLossReport"></see> method.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.CapPredefinedPaymentLines">
			<summary>Gets a Boolean value that indicates whether the printer can print predefined payment descriptions.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.CapReceiptNotPaid">
			<summary>Gets a Boolean value that indicates whether the printer supports the <see cref="PrintRecNotPaid"></see> method.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.CapRecEmptySensor">
			<summary>Gets a Boolean value that indicates whether the receipt print station has an out-of-paper sensor.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.CapRecNearEndSensor">
			<summary>Gets a Boolean value that indicates whether the receipt print station has a low-paper sensor.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.CapRecPresent">
			<summary>Gets a Boolean value that indicates whether the receipt print station is present.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.CapRemainingFiscalMemory">
			<summary>Gets a Boolean value that indicates whether the printer supports the <see cref="RemainingFiscalMemory"></see> property to show the Fiscal Memory remaining.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.CapReservedWord">
			<summary>Gets a Boolean value that indicates whether the printer prints a reserved word before printing the total.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.CapSetCurrency">
			<summary>Gets a Boolean value that indicates whether the fiscal printer can change the currency to a new one by calling the <see cref="SetCurrency"></see> method.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.CapSetHeader">
			<summary>Gets a Boolean value that indicates whether the <see cref="SetHeaderLine"></see> method can be used to initialize the contents of a particular line of the receipt header.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.CapSetPosId">
			<summary>Gets a Boolean value that indicates whether the <see cref="SetPosId"></see> method can be used to initialize the values of <see cref="PointOfServiceId"></see> and <see cref="CashierId."></see></summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.CapSetStoreFiscalId">
			<summary>Gets a Boolean value that indicates whether the <see cref="SetStoreFiscalId"></see> method can be used to set up the Fiscal ID number.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.CapSetTrailer">
			<summary>Gets a Boolean value that indicates whether the <see cref="SetTrailerLine"></see> method can be used to initialize the contents of a particular line of the receipt trailer.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.CapSetVatTable">
			<summary>Gets a Boolean value that indicates whether <see cref="SetVatValue"></see> and <see cref="SetVatTable"></see> can be used to modify the contents of the printer’s VAT table.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.CapSlpEmptySensor">
			<summary>Gets a Boolean value that indicates whether the slip has a "slip in" sensor.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.CapSlpFiscalDocument">
			<summary>Gets a Boolean value that indicates whether the printer enables fiscal printing to the slip station.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.CapSlpFullSlip">
			<summary>Gets a Boolean value that indicates whether the printer supports printing full-length forms on the slip station.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.CapSlpNearEndSensor">
			<summary>Gets a Boolean value that indicates whether the slip has a "slip near end" sensor.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.CapSlpPresent">
			<summary>Gets a Boolean value that indicates whether the printer has a slip station.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.CapSlpValidation">
			<summary>Gets a Boolean value that indicates whether the printer supports printing validation information on the slip station.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.CapSubAmountAdjustment">
			<summary>Gets a Boolean value that indicates whether the printer handles fixed-amount discounts on the subtotal.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.CapSubPercentAdjustment">
			<summary>Gets a Boolean value that indicates whether the printer handles percentage discounts on the subtotal.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.CapSubtotal">
			<summary>Gets a Boolean value that indicates whether the <see cref="PrintRecSubtotal"></see> method can be used to print the subtotal.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.CapTotalizerType">
			<summary>Gets a Boolean value that indicates whether the printer supports reading different types of totalizers by calling the <see cref="GetTotalizer"></see> method.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.CapTrainingMode">
			<summary>Gets a Boolean value that indicates whether the printer supports a training mode.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.CapValidateJournal">
			<summary>Gets a Boolean value that indicates whether the <see cref="PrintNormal"></see> method can be used to print a validation string on the journal station.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.CapXReport">
			<summary>Gets a Boolean value that indicates whether the <see cref="PrintXReport"></see> method can be used to print an X report.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.ChangeDue">
			<summary>Gets or sets the text to print as a description for the cash return when using the <see cref="PrintRecTotal"></see> method.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.CheckTotal">
			<summary>Gets or sets a Boolean value that indicates whether automatic comparison between the total of the fiscal printer and the total of the application is enabled.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.ContractorId">
			<summary>Gets or sets the identification of the contractor to whom the receipt and some items of the receipt or to whom the receipt or some items of the receipt are assigned.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.CountryCode">
			<summary>Gets a value identifying the countries/regions supported by this service object.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.CoverOpen">
			<summary>Gets a Boolean value that indicates whether the printer's cover is open.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.DateType">
			<summary>Gets or sets the type of date to be requested when calling the <see cref="GetDate"></see> method.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.DayOpened">
			<summary>Gets a Boolean value that indicates whether the fiscal day has been started.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.DescriptionLength">
			<summary>Gets the maximum number of characters that can be passed as a description parameter.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.DuplicateReceipt">
			<summary>Gets or sets a Boolean value that indicates whether all the printing commands inside a fiscal receipt are buffered and can be printed again with the <see cref="PrintDuplicateReceipt"></see> method.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.ErrorLevel">
			<summary>Gets a value that indicates the severity of the error condition.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.ErrorOutId">
			<summary>Gets the identifier of the output in the queue that raised an error event when you use asynchronous printing.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.ErrorState">
			<summary>Gets the current state of the printer when raising an error event for an asynchronous output.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.ErrorStation">
			<summary>Gets the station or stations that were printing when an error was detected.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.ErrorString">
			<summary>Gets a vendor-supplied description of the current error.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.FiscalReceiptStation">
			<summary>Gets or sets the station where the transaction of the fiscal receipt started with <see cref="BeginFiscalReceipt"></see> method will be printed.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.FiscalReceiptType">
			<summary>Gets or sets the type of the fiscal receipt.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.FlagWhenIdle">
			<summary>Gets or sets a Boolean value that indicates whether the service object raises a <see cref="StatusUpdateEvent"></see> event if it is in the Idle state.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.IsExclusiveUseDevice">
			<summary>Gets a Boolean value that indicates whether the Fiscal Printer is an exclusive-use device.</summary>
			<returns>A value of true indicates the fiscal printer is an exclusive-use device. Otherwise, the value will be false.</returns>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.JrnEmpty">
			<summary>Gets a Boolean value that indicates whether the journal is out of paper.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.JrnNearEnd">
			<summary>Gets a Boolean value that indicates whether journal paper is low.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.MessageLength">
			<summary>Gets the maximum number of characters that can be passed as a message line in the <see cref="PrintRecMessage"></see> method.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.MessageType">
			<summary>Gets or sets the kind of message to be printed when you use the <see cref="PrintRecMessage"></see> method.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.NumHeaderLines">
			<summary>Gets the maximum number of header lines that can be printed for each fiscal receipt.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.NumTrailerLines">
			<summary>Gets the maximum number of trailer lines that can be printed for each fiscal receipt.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.NumVatRates">
			<summary>Gets the maximum number of VAT rates that can be entered into the printer’s VAT table.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.OutputId">
			<summary>Gets the identifier of the most recently started asynchronous output.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.PostLine">
			<summary>Gets or sets application-specific text to print on the fiscal receipt after a line item invoked by some <see cref="PrintRec"></see> methods.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.PredefinedPaymentLines">
			<summary>Gets a string that indicates that only predefined payment lines are allowed.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.PreLine">
			<summary>Gets or sets application-specific text to be printed on the fiscal receipt before a line item invoked by some <see cref="PrintRec"></see> methods.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.PrinterState">
			<summary>Gets the printer's current operational state.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.QuantityDecimalPlaces">
			<summary>Gets the number of decimal digits in the fractional part that should be assumed to be in any quantity parameter that is passed to this service object.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.QuantityLength">
			<summary>Gets the maximum number of digits that can be passed as a quantity parameter. This includes both the whole and fractional parts.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.RecEmpty">
			<summary>Gets a Boolean value that indicates whether the receipt station is out of paper.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.RecNearEnd">
			<summary>Gets a Boolean value that indicates whether the receipt station is low on paper.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.RemainingFiscalMemory">
			<summary>Gets the remaining counter of Fiscal Memory.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.ReservedWord">
			<summary>Gets the string that is automatically printed with the total when the <see cref="PrintRecTotal"></see> method is called.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.SlipSelection">
			<summary>Gets or sets the kind of document to print on the slip station.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.SlpEmpty">
			<summary>Gets a Boolean value that indicates whether a slip form is present.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.SlpNearEnd">
			<summary>Gets a Boolean value that indicates whether a slip form is almost at its end.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.TotalizerType">
			<summary>Gets or sets the type of totalizer to be requested when calling the <see cref="GetTotalizer"></see> method. </summary>
		</member>
		<member name="P:Microsoft.PointOfService.FiscalPrinter.TrainingModeActive">
			<summary>Gets a Boolean value that indicates whether the printer's operational state allows the training mode.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.FiscalPrinterState">
			<summary>Enumerates the possible printer operational states that can be reported for a fiscal printer.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinterState.FiscalDocument">
			<summary>The printer is processing a fiscal slip. In this state, the printer accepts either the <see cref="PrintFiscalDocumentLine"></see> or <see cref="EndFiscalDocument"></see> method.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinterState.FiscalReceipt">
			<summary>If the <see cref="TrainingModeActive"></see> property is false, the printer is processing a fiscal receipt. In this state, the printer accepts any of the <see cref="PrintRec"></see> methods.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinterState.FiscalReceiptEnding">
			<summary>If the <see cref="TrainingModeActive"></see> property is false, the printer has completed the receipt up to the total line. In this state, the printer accepts either the <see cref="PrintRecMessage"></see> or <see cref="EndFiscalReceipt"></see> method.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinterState.FiscalReceiptTotal">
			<summary>If the <see cref="TrainingModeActive"></see> property is false, the printer has already accepted at least one payment. However, the total has not been completely paid. In this state, the printer accepts either the <see cref="PrintRecTotal"></see> or <see cref="PrintRecNotPaid"></see> method.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinterState.FixedOutput">
			<summary>The printer is processing fixed text output to one or more stations. In this state, the printer accepts either the <see cref="PrintFixedOutput"></see> or <see cref="EndFixedOutput"></see> method.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinterState.ItemList">
			<summary>The printer is processing an item list report. In this state, the printer accepts either the <see cref="VerifyItem"></see> or <see cref="EndItemList"></see> method.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinterState.Locked">
			<summary>The printer has encountered a non-recoverable hardware problem. An authorized printer technician must be contacted to exit this state.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinterState.Monitor">
			<summary>If the <see cref="TrainingModeActive"></see> property is false, the printer is not in a specific operational mode. In this state, the printer accepts any of the <see cref="Begin"></see> methods and the <see cref="Set"></see> methods.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinterState.NonFiscal">
			<summary>The printer is processing nonfiscal output to one or more stations. In this state, the printer accepts either the <see cref="PrintNormal"></see> or <see cref="EndNonFiscal"></see> method.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinterState.Report">
			<summary>The printer is processing a fiscal report. In this state, the printer does not accept any methods until the report has been completed.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.FiscalPrinterStations">
			<summary>Enumerates the possible fiscal printer stations that can be set to print or reported as printing during the occurrence of an error.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinterStations.Journal">
			<summary>Journal station.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinterStations.JournalReceipt">
			<summary>Journal receipt station.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinterStations.JournalSlip">
			<summary>Journal slip station.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinterStations.Receipt">
			<summary>Receipt station.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinterStations.ReceiptSlip">
			<summary>Receipt slip station.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalPrinterStations.Slip">
			<summary>Slip station.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.FiscalReceiptStation">
			<summary>Enumerates the valid fiscal printer stations that can be used to start non-fiscal fixed text printing.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalReceiptStation.Receipt">
			<summary>The following transactions will be printed on the receipt station.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalReceiptStation.Slip">
			<summary>The following transactions will be printed on the slip station.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.FiscalReceiptType">
			<summary>Enumerates the valid types of receipts for a fiscal printer.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalReceiptType.CashIn">
			<summary>Cash-in receipt.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalReceiptType.CashOut">
			<summary>Cash-out receipt.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalReceiptType.Generic">
			<summary>Generic receipt.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalReceiptType.Refund">
			<summary>Refund receipt.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalReceiptType.Sales">
			<summary>Retail sales receipt.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalReceiptType.Service">
			<summary>Service sales receipt.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalReceiptType.SimpleInvoice">
			<summary>Simplified invoice receipt.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.FiscalSlipSelection">
			<summary>Enumerates two document types—full-length and validation—to be printed.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalSlipSelection.FullLength">
			<summary>Prints full-length documents.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalSlipSelection.Validation">
			<summary>Prints validation documents.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.FiscalTotalizer">
			<summary>Enumerates the possible types of totalizers for a fiscal printer.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalTotalizer.Discount">
			<summary>Discount totalizer specified by the <see cref="P:Microsoft.PointOfService.FiscalPrinter.TotalizerType"></see> and <see cref="P:Microsoft.PointOfService.FiscalPrinter.ContractorId"></see> properties.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalTotalizer.DiscountVoid">
			<summary>Voided discount totalizer specified by the <see cref="TotalizerType"></see> and <see cref="ContractorId"></see> properties.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalTotalizer.Gross">
			<summary>Gross totalizer specified by the <see cref="TotalizerType"></see> and <see cref="ContractorId"></see> properties.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalTotalizer.Item">
			<summary>Item totalizer specified by the <see cref="TotalizerType"></see> and <see cref="ContractorId"></see> properties.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalTotalizer.ItemVoid">
			<summary>Voided item totalizer specified by the <see cref="TotalizerType"></see> and <see cref="ContractorId"></see> properties.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalTotalizer.Net">
			<summary>Net totalizer specified by the <see cref="TotalizerType"></see> and <see cref="ContractorId"></see> properties.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalTotalizer.NotPaid">
			<summary>Not paid totalizer specified by the <see cref="TotalizerType"></see> and <see cref="ContractorId"></see> properties.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalTotalizer.Refund">
			<summary>Refund totalizer specified by the <see cref="TotalizerType"></see> and <see cref="ContractorId"></see> properties. </summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalTotalizer.RefundVoid">
			<summary>Voided refund totalizer specified by the <see cref="TotalizerType"></see> and <see cref="ContractorId"></see> properties.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalTotalizer.SubtotalDiscount">
			<summary>Subtotal discount totalizer specified by the <see cref="TotalizerType"></see> and <see cref="ContractorId"></see> properties.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalTotalizer.SubtotalDiscountVoid">
			<summary>Voided discount totalizer specified by the <see cref="TotalizerType"></see> and <see cref="ContractorId"></see> properties.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalTotalizer.SubtotalSurcharges">
			<summary>Subtotal surcharges totalizer specified by the <see cref="TotalizerType"></see> and <see cref="ContractorId"></see> properties.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalTotalizer.SubtotalSurchargesVoid">
			<summary>Voided surcharges totalizer specified by the <see cref="TotalizerType"></see> and <see cref="ContractorId"></see> properties.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalTotalizer.Surcharge">
			<summary>Surcharge totalizer specified by the <see cref="TotalizerType"></see> and <see cref="ContractorId"></see> properties.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalTotalizer.SurchargeVoid">
			<summary>Voided surcharge totalizer specified by the <see cref="TotalizerType"></see> and <see cref="ContractorId"></see> properties.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalTotalizer.Vat">
			<summary>VAT totalizer specified by the <see cref="TotalizerType"></see> and <see cref="ContractorId"></see> properties.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalTotalizer.VatCategory">
			<summary>VAT totalizer per VAT category specified by the <see cref="TotalizerType"></see> and <see cref="ContractorId"></see> properties associated to the given vatId. </summary>
		</member>
		<member name="T:Microsoft.PointOfService.FiscalTotalizerType">
			<summary>Enumerates the possible types of totalizers.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalTotalizerType.Day">
			<summary>Day totalizer.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalTotalizerType.Document">
			<summary>Document totalizer.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalTotalizerType.Grand">
			<summary>Grand totalizer.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FiscalTotalizerType.Receipt">
			<summary>Receipt totalizer.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.FrameType">
			<summary>Enumerates the possible types of information contained within the Image Scanner's <see cref="P:Microsoft.PointOfService.ImageScanner.FrameData"></see> property.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FrameType.Still">
			<summary>The <see cref="P:Microsoft.PointOfService.ImageScanner.FrameData"></see> property contains a single still image.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.FrameType.Video">
			<summary>The <see cref="P:Microsoft.PointOfService.ImageScanner.FrameData"></see> property contains a block of video data.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.Gate">
			<summary>Defines the programmatic interface for a UPOS Gate device.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.Gate.#ctor">
			<summary>Creates an instance of the <see cref="T:Microsoft.PointOfService.Gate"></see> class.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Gate.StatusBlocked">
			<summary>Indicates that the gate is blocked.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Gate.StatusClosed">
			<summary>Indicates that the gate is closed.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Gate.StatusMalfunction">
			<summary>Indicates that the gate has a hardware problem.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Gate.StatusOpen">
			<summary>Indicates that the gate is open.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.Gate.OpenGate">
			<summary>Opens the gate.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.Gate.WaitForGateClose(System.Int32)">
			<summary>Waits until the gate is closed.</summary>
			<param name="timeout">Maximum number of milliseconds to wait until the gate is closed before it returns control back to the application. If <see cref="F:Microsoft.PointOfService.PosCommon.WaitForever"></see> is defined, the method waits as long as needed until the gate is closed or an error occurs.</param>
		</member>
		<member name="T:Microsoft.PointOfService.GateStatus">
			<summary>Enumerates the status of the Gate.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.GateStatus.Blocked">
			<summary>The gate is blocked.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.GateStatus.Closed">
			<summary>The gate is closed.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.GateStatus.Malfunction">
			<summary>The gate has a hardware problem. Technical help is needed.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.GateStatus.Open">
			<summary>The gate is open.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.HardTotals">
			<summary>Defines the programmatic interface for a UPOS hard totals device.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.HardTotals.#ctor">
			<summary>Creates an instance of the <see cref="T:Microsoft.PointOfService.HardTotals"></see> class.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.HardTotals.ExtendedErrorNoRoom">
			<summary>Indicates that you cannot write because a transaction is in progress, and there is insufficient free space to prepare for the transaction commit.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.HardTotals.ExtendedErrorValidation">
			<summary>Indicates a validation error has occurred while it reads data.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.HardTotals.BeginTrans">
			<summary>Marks the beginning of a series of hard totals writes.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.HardTotals.ClaimFile(System.Int32,System.Int32)">
			<summary>Tries to gain exclusive access to a specific file for use.</summary>
			<param name="timeout">The time (in milliseconds) to wait for the file to become available.If zero, <see cref="ClaimFile"></see> tries to claim the file, then returns the appropriate status immediately.If WaitForever is specified, <see cref="ClaimFile"></see> waits as long as needed until exclusive access is satisfied.</param>
			<param name="handle">Handle to the totals file to claim.</param>
		</member>
		<member name="M:Microsoft.PointOfService.HardTotals.CommitTrans">
			<summary>Ends the current transaction.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.HardTotals.Create(System.String,System.Int32,System.Boolean)">
			<summary>Creates a totals file.</summary>
			<param name="fileName">The name to be assigned to the file.Must not exceed 10 characters. All displayable characters - characters ≥ 20-hex – are valid.</param>
			<param name="size">The length of the file in bytes. When it is created, the file size cannot be changed: totals files are fixed-length files.</param>
			<param name="errorDetection">The level of error detection desired for this file:If true, the service object enables advanced error detection if supported.If false, better performance access is required so that advanced error detection do not have to be enabled for this file.</param>
		</member>
		<member name="M:Microsoft.PointOfService.HardTotals.Delete(System.String)">
			<summary>Deletes the named file.</summary>
			<param name="fileName">The fileName parameter specifies the totals file to delete.</param>
		</member>
		<member name="M:Microsoft.PointOfService.HardTotals.Find(System.String)">
			<summary>Locates an existing totals file.</summary>
			<param name="fileName">The name of the totals file to be located.</param>
		</member>
		<member name="M:Microsoft.PointOfService.HardTotals.FindByIndex(System.Int32)">
			<summary>Returns the name of the totals file associated with the given index.</summary>
			<param name="index">The index of the totals file to be found.</param>
		</member>
		<member name="M:Microsoft.PointOfService.HardTotals.Read(System.Int32,System.Int32,System.Int32)">
			<summary>Reads data from a totals file.</summary>
			<param name="offset">Starting offset for the data to be read.</param>
			<param name="count">Number of bytes of data to read.</param>
			<param name="handle">Totals file handle returned from a <see cref="M:Microsoft.PointOfService.HardTotals.Create(System.String,System.Int32,System.Boolean)"></see> or <see cref="M:Microsoft.PointOfService.HardTotals.Find(System.String)"></see> method.</param>
		</member>
		<member name="M:Microsoft.PointOfService.HardTotals.RecalculateValidationData(System.Int32)">
			<summary>Recalculates validation data for the specified totals file.</summary>
			<param name="handle">The handle parameter contains the handle to a totals file.</param>
		</member>
		<member name="M:Microsoft.PointOfService.HardTotals.ReleaseFile(System.Int32)">
			<summary>Releases exclusive access to a specific file.</summary>
			<param name="handle">The handle parameter contains the handle to the totals file to be released.</param>
		</member>
		<member name="M:Microsoft.PointOfService.HardTotals.Rename(System.Int32,System.String)">
			<summary>Renames a totals file.</summary>
			<param name="newName">The new name to be assigned to the file.The name must not exceed 10 characters. All displayable characters ( ≥ 20 hexadecimal) are valid.</param>
			<param name="handle">Handle to the totals file to be renamed.</param>
		</member>
		<member name="M:Microsoft.PointOfService.HardTotals.Rollback">
			<summary>Ends the current transaction.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.HardTotals.SetAll(System.Int32,System.Byte)">
			<summary>Sets all the data in a totals file to the specified value.</summary>
			<param name="handle">Handle to a totals file.</param>
			<param name="targetValue">Value to set is in the low byte.</param>
		</member>
		<member name="M:Microsoft.PointOfService.HardTotals.ValidateData(System.Int32)">
			<summary>Verifies that all data in the specified totals file passes validation checks.</summary>
			<param name="handle">The handle parameter contains the handle to a totals file.</param>
		</member>
		<member name="M:Microsoft.PointOfService.HardTotals.Write(System.Int32,System.Byte[],System.Int32)">
			<summary>Writes data to a totals file.</summary>
			<param name="offset">Starting offset for the data to be written.</param>
			<param name="data">Data buffer that contains the totals data to be written.</param>
			<param name="handle">Totals file handle returned from a <see cref="M:Microsoft.PointOfService.HardTotals.Create(System.String,System.Int32,System.Boolean)"></see> or <see cref="M:Microsoft.PointOfService.HardTotals.Find(System.String)"></see> method.</param>
		</member>
		<member name="P:Microsoft.PointOfService.HardTotals.CapErrorDetection">
			<summary>Gets a Boolean value that indicates whether error detection is supported.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.HardTotals.CapSingleFile">
			<summary>Gets a Boolean value that indicates whether only a single file is supported.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.HardTotals.CapTransactions">
			<summary>Gets a Boolean value that indicates whether transactions are supported.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.HardTotals.FreeData">
			<summary>Gets the number of bytes of unallocated data in the hard totals device.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.HardTotals.NumberOfFiles">
			<summary>Gets the number of totals files in the hard totals device.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.HardTotals.TotalsSize">
			<summary>Gets the size of the hard totals area.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.HardTotals.TransactionInProgress">
			<summary>Gets a Boolean value that indicates whether a transaction is in progress.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.HardwareIdAttribute">
			<summary>Defines a class containing a range of hardware Ids supported by a service object.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.HardwareIdAttribute.#ctor(System.String)">
			<summary>Creates an instance of the <see cref="HardwareIdAttribute"></see> class with the hardware ID.</summary>
			<param name="id">Hardware ID.</param>
		</member>
		<member name="M:Microsoft.PointOfService.HardwareIdAttribute.#ctor(System.String,System.String)">
			<summary>Creates an instance of the <see cref="HardwareIdAttribute"></see> class with the first and last hardware ID in a range.</summary>
			<param name="fromId">First ID in a range.</param>
			<param name="toId">Last ID in a range.</param>
		</member>
		<member name="P:Microsoft.PointOfService.HardwareIdAttribute.From">
			<summary>Gets the first hardware ID in a range.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.HealthCheckLevel">
			<summary>Enumerates the possible types of health checks to be performed on a device. </summary>
		</member>
		<member name="F:Microsoft.PointOfService.HealthCheckLevel.External">
			<summary>Performs a more thorough test that may change the device. For example, a pattern may be printed on the printer.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.HealthCheckLevel.Interactive">
			<summary>Performs an interactive test of the device. The supporting service object typically displays a modal dialog box to present test options and results.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.HealthCheckLevel.Internal">
			<summary>Performs a health check that does not physically change the device. The device is tested by internal tests to the extent possible.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.IDeviceEnumeration">
			<summary>Defines the interface to enumerate devices.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.IDeviceEnumerationPnp">
			<summary>Defines the interface to enumerate Plug and Play devices.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.ILegacyControlObject">
			<summary>Defines the interface to access a legacy OPOS control object.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.ILegacyControlObject.BinaryConversion">
			<summary>Gets or sets the binary conversion property.</summary>
			<returns>Returns a <see cref="BinaryConversion"></see> enumeration.</returns>
		</member>
		<member name="P:Microsoft.PointOfService.ILegacyControlObject.ControlObjectDescription">
			<summary>Gets the string identifying the control object and the company that produced it.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.ILegacyControlObject.ControlObjectVersion">
			<summary>Gets the version of a control object.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.ImageMemoryStatus">
			<summary>Enumerates the availability status values for image memory.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ImageMemoryStatus.Empty">
			<summary>The image memory is empty.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ImageMemoryStatus.Full">
			<summary>The image memory is full.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ImageMemoryStatus.OK">
			<summary>The image memory has storage available.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.ImageMode">
			<summary>Enumerates the possible modes of operation that an Image Scanner device can use.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ImageMode.All">
			<summary>The image scanner transmits video streams, and it tries to read bar code data. When a bar code is read, the bar code data and a still image are transmitted. The image resolution of video data could be different from the resolution of still image data. A hydra implementation of Image Scanner and Scanner is required for this mode.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ImageMode.DecodeOnly">
			<summary>The image scanner does not transmit still images or video to the application. However, it transmits bar code data decoded from purchased images through a Scanner service. A hydra implementation of Image Scanner and Scanner is required for this mode.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ImageMode.StillAndDecode">
			<summary>The image scanner transmits still images, and it tries to read bar code data. However, it does not transmit video streams. A hydra implementation of <see cref="T:Microsoft.PointOfService.ImageScanner"></see> and Scanner is required for this mode.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ImageMode.StillOnly">
			<summary>The image scanner transmits still images. However, it does not try to read bar code data, nor does it transmit video.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ImageMode.VideoAndDecode">
			<summary>The image scanner transmits video streams, and it tries to read bar code data. A hydra implementation of Image Scanner and Scanner is required for this mode.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ImageMode.VideoAndStill">
			<summary>The image scanner transmits video streams, and it transmits still images. However, it does not try to read bar code data. The image resolution of video data could be different from the resolution of still image data.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.ImageQuality">
			<summary>Enumerates the level of image quality supported by the Image Scanner device.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ImageQuality.High">
			<summary>High image quality is supported.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ImageQuality.Low">
			<summary>Only low image quality is supported.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ImageQuality.Medium">
			<summary>Medium image quality is supported.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.ImageScanner">
			<summary>Defines the programmatic interface for a UPOS Image Scanner device.</summary>
		</member>
		<member name="E:Microsoft.PointOfService.ImageScanner.DataEvent">
			<summary>Notifies the application that input data from the Image Scanner is available.</summary>
		</member>
		<member name="E:Microsoft.PointOfService.ImageScanner.ErrorEvent">
			<summary>Notifies the application that an Image Scanner device error has been detected and a suitable response by the application is necessary to process the error condition.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ImageScanner.StatisticGoodReadCount">
			<summary>Holds the number of performed good read operations.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ImageScanner.StatisticNoReadCount">
			<summary>Holds the number of performed failed read operations.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ImageScanner.StatisticSessionCount">
			<summary>Holds the number of total statistic sessions.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.ImageScanner.ClearInput">
			<summary>Clears all buffered device input.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.ImageScanner.ClearInputProperties">
			<summary>Resets the values of properties altered by the <see cref="E:Microsoft.PointOfService.ImageScanner.DataEvent"></see> event or the <see cref="E:Microsoft.PointOfService.ImageScanner.ErrorEvent"></see> event.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.ImageScanner.StartSession">
			<summary>Starts the Image Scanner session to obtain still images, decode, and video stream data in a mode specified by the <see cref="P:Microsoft.PointOfService.ImageScanner.ImageMode"></see> property.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.ImageScanner.StopSession">
			<summary>Ends a session started by the <see cref="M:Microsoft.PointOfService.ImageScanner.StartSession"></see> method.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.ImageScanner.IsExclusiveUseDevice">
			<summary>Get a Boolean value that indicates whether the Image Scanner is an exclusive-use device.</summary>
			<returns>A value of true indicates that the Image Scanner is exclusive-use. Otherwise, the value is false.</returns>
		</member>
		<member name="T:Microsoft.PointOfService.ItemDispenser">
			<summary>Defines the programmatic interface for an Item Dispenser device.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.ItemDispenser.#ctor">
			<summary>Creates an instance of the <see cref="T:Microsoft.PointOfService.ItemDispenser"></see> class.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ItemDispenser.StatusEmpty">
			<summary>Indicates whether the Item Dispenser is empty.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ItemDispenser.StatusJam">
			<summary>Indicates whether the Item Dispenser is jammed.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ItemDispenser.StatusNearEmpty">
			<summary>Indicates whether the Item Dispenser is almost empty.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ItemDispenser.StatusOk">
			<summary>Indicates whether the Item Dispenser is working correctly.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.ItemDispenser.AdjustItemCount(System.Int32,System.Int32)">
			<summary>Sets the number of items in the Item Dispenser.</summary>
			<param name="itemCount">Contains the number of items to be initialized.</param>
			<param name="slotNumber">Contains the slot number to be initialized. Valid slot numbers are 1 through <see cref="P:Microsoft.PointOfService.ItemDispenser.MaxSlots."></see></param>
		</member>
		<member name="M:Microsoft.PointOfService.ItemDispenser.DispenseItem(System.Int32,System.Int32)">
			<summary>Dispenses items.</summary>
			<param name="numItem">Contains the number of items to be dispensed. On return, it contains the number of items dispensed.</param>
			<param name="slotNumber">Contains the slot number that is used for dispensing items. Valid slot numbers are 1 through <see cref="P:Microsoft.PointOfService.ItemDispenser.MaxSlots"></see></param>
		</member>
		<member name="M:Microsoft.PointOfService.ItemDispenser.ReadItemCount(System.Int32)">
			<summary>Reads the number of items that are currently in the Item Dispenser.</summary>
			<param name="slotNumber">Contains the slot number that is used for reading the item count. Valid slot numbers are 1 through <see cref="P:Microsoft.PointOfService.ItemDispenser.MaxSlots"></see></param>
		</member>
		<member name="T:Microsoft.PointOfService.ItemDispenserStatus">
			<summary>Enumerates the status of the <see cref="T:Microsoft.PointOfService.ItemDispenser"></see>.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ItemDispenserStatus.Empty">
			<summary>Ready to dispense items from all slots. This value is also set when the dispenser is unable to detect error conditions.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ItemDispenserStatus.Jam">
			<summary>Cannot dispense items, because a mechanical fault has occurred.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ItemDispenserStatus.NearEmpty">
			<summary>Can still dispense items. However, the dispenser is almost empty. If <see cref="P:Microsoft.PointOfService.ItemDispenser.MaxSlots"></see> is greater than one (1), some slots are almost empty.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ItemDispenserStatus.Ok">
			<summary>Ready to dispense items from all slots. This value is also set when the dispenser is unable to detect error conditions.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.KeyboardEventType">
			<summary>Enumerates the possible type of keyboard events that the application will receive. </summary>
		</member>
		<member name="T:Microsoft.PointOfService.KeyEvent">
			<summary>Enumerates the possible types for the most recent key event.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.KeyEvent.Down">
			<summary>The key was pressed.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.KeyEvent.Up">
			<summary>The key was released.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.Keylock">
			<summary>Defines the programmatic interface for a UPOS keylock device.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.Keylock.#ctor">
			<summary>Creates an instance of the <see cref="Keylock"></see> class.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Keylock.PositionAny">
			<summary>Indicates to wait for any keylock position change.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Keylock.PositionElectronic">
			<summary>Indicates to wait for keylock position to be set to the "electronic" position.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Keylock.PositionLocked">
			<summary>Indicates to wait for keylock position to be set to the "locked" position.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Keylock.PositionNormal">
			<summary>Indicates to wait for keylock position to be set to the "normal" position.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Keylock.PositionSupervisor">
			<summary>Indicates to wait for keylock position to be set to the "supervisor" position.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Keylock.StatisticLockPositionChangeCount">
			<summary>Indicates how many times the keylock position has changed from "locked."</summary>
		</member>
		<member name="M:Microsoft.PointOfService.Keylock.WaitForKeylockChange(System.Int32,System.Int32)">
			<summary>Used by the application to wait for a specified keylock position to be set.</summary>
			<param name="timeout">Maximum number of milliseconds to wait for the keylock before returning control back to the application.If zero, <see cref="M:Microsoft.PointOfService.Keylock.WaitForKeylockChange(System.Int32,System.Int32)"></see> returns the appropriate status immediately.If WaitForever, <see cref="WaitForKeylockChange"></see> waits as long as needed until the requested key position is satisfied or an error occurs.</param>
			<param name="keyPosition">Requested keylock position.keyPosition can contain one of the following values:ValueMeaning<see cref="F:Microsoft.PointOfService.Keylock.PositionAny"></see>Wait for any keylock position change.<see cref="F:Microsoft.PointOfService.Keylock.PositionLocked"></see>Wait for keylock position to be set to the “locked” position.<see cref="F:Microsoft.PointOfService.Keylock.PositionNormal"></see>Wait for keylock position to be set to the “normal” position.<see cref="F:Microsoft.PointOfService.Keylock.PositionElectronic"></see>Wait for keylock position to be set to the “electronic” position.<see cref="F:Microsoft.PointOfService.Keylock.PositionSupervisor"></see>Wait for keylock position to be set to the “supervisor” position.Other ValuesWait for keylock position to be set to one of the auxiliary positions. This value may range from four (4) up to the total number of keylock positions indicated by the <see cref="P:Microsoft.PointOfService.Keylock.PositionCount"></see> property.</param>
		</member>
		<member name="P:Microsoft.PointOfService.Keylock.IsExclusiveUseDevice">
			<summary>Indicates whether the <see cref="T:Microsoft.PointOfService.Keylock"></see> is an exclusive-use device.</summary>
			<returns>A value of true indicates that the <see cref="T:Microsoft.PointOfService.Keylock"></see> is exclusive-use. Otherwise, false.</returns>
		</member>
		<member name="P:Microsoft.PointOfService.Keylock.KeyPosition">
			<summary>Holds a value that indicates the Keylock's current position.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Keylock.PositionCount">
			<summary>Holds the total number of keylock positions on the Keylock device.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.KeylockType">
			<summary>Lists the possible keylock device types.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.KeylockType.Electronic">
			<summary>The Keylock is an electronic keylock.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.KeylockType.Standard">
			<summary>The Keylock is a standard keylock.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.LightAlarms">
			<summary>Enumerates the different alarms supported by the Light device.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.LightAlarms.Custom1">
			<summary>Supports first custom alarm.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.LightAlarms.Custom2">
			<summary>Supports second custom alarm.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.LightAlarms.Fast">
			<summary>Supports a fast beep.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.LightAlarms.Medium">
			<summary>Supports a medium beep.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.LightAlarms.None">
			<summary>Alarms are not supported.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.LightAlarms.Slow">
			<summary>Supports a slow beep.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.LightColors">
			<summary>Enumerates the supported colors for the Light device.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.LightColors.Custom1">
			<summary>Supports first custom color (usually red).</summary>
		</member>
		<member name="F:Microsoft.PointOfService.LightColors.Custom2">
			<summary>Supports second custom color (usually yellow).</summary>
		</member>
		<member name="F:Microsoft.PointOfService.LightColors.Custom3">
			<summary>Supports third custom color.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.LightColors.Custom4">
			<summary>Supports fourth custom color.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.LightColors.Custom5">
			<summary>Supports fifth custom color.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.LightColors.Primary">
			<summary>Supports primary color (usually green).</summary>
		</member>
		<member name="T:Microsoft.PointOfService.Lights">
			<summary>Defines the programmatic interface for a Light device.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.Lights.#ctor">
			<summary>Creates an instance of the <see cref="T:Microsoft.PointOfService.Lights"></see> class.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.Lights.SwitchOff(System.Int32)">
			<summary>Switches off the specified light.</summary>
			<param name="lightNumber">Specifies the light number. Valid light numbers are 1 through <see cref="P:Microsoft.PointOfService.Lights.MaxLights"></see>.</param>
		</member>
		<member name="M:Microsoft.PointOfService.Lights.SwitchOn(System.Int32,System.Int32,System.Int32,Microsoft.PointOfService.LightColors,Microsoft.PointOfService.LightAlarms)">
			<summary>Switches on the specified light or lets it blink.</summary>
			<param name="blinkOffCycle">A zero (0) value indicates no blink cycle. A positive value indicates the blink off cycle time in milliseconds. Negative values are not allowed.</param>
			<param name="alarm">Specifies the used alarm type, must be one of the alarms defined by <see cref="P:Microsoft.PointOfService.Lights.CapAlarm"></see>.</param>
			<param name="color">Specifies the color of the light, must be one of the colors defined by <see cref="P:Microsoft.PointOfService.Lights.CapColor"></see>.</param>
			<param name="blinkOnCycle">A zero (0) value indicates no blink cycle. A positive value indicates the blink on cycle time in milliseconds. Negative values are not allowed.</param>
			<param name="lightNumber">Specifies the light number. Valid light numbers are 1 through <see cref="P:Microsoft.PointOfService.Lights.MaxLights"></see>.</param>
		</member>
		<member name="T:Microsoft.PointOfService.LineDisplay">
			<summary>Defines the programmatic interface for a UPOS Line Display device.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.LineDisplay.#ctor">
			<summary>Creates an instance of the <see cref="LineDisplay"></see> class.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.LineDisplay.CharacterSetAnsi">
			<summary>Indicates the default character set is ANSI.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.LineDisplay.CharacterSetAscii">
			<summary>Indicates the default character set is ASCII.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.LineDisplay.CharacterSetUnicode">
			<summary>Indicates the default character set is Unicode.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.LineDisplay.DisplayBitmapAsIs">
			<summary>Displays the bitmap with one bitmap pixel per dot. </summary>
		</member>
		<member name="F:Microsoft.PointOfService.LineDisplay.DisplayBitmapBottom">
			<summary>Aligns the bitmap’s bottom edge with the bottommost pixel of the current character position, as specified by the <see cref="P:Microsoft.PointOfService.LineDisplay.CursorRow"></see> property setting.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.LineDisplay.DisplayBitmapCenter">
			<summary>Aligns the bitmap in the horizontal center of the current character position, as specified by the <see cref="P:Microsoft.PointOfService.LineDisplay.CursorColumn"></see> property setting.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.LineDisplay.DisplayBitmapLeft">
			<summary>Aligns the bitmap’s left edge with the leftmost pixel of the current character position, as specified by the <see cref="P:Microsoft.PointOfService.LineDisplay.CursorColumn"></see> property setting.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.LineDisplay.DisplayBitmapRight">
			<summary>Aligns the bitmap’s right edge with the rightmost pixel of the current character position, as specified by the <see cref="P:Microsoft.PointOfService.LineDisplay.CursorColumn"></see> property setting.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.LineDisplay.DisplayBitmapTop">
			<summary>Aligns the bitmap’s top edge with the topmost pixel of the current character position, as specified by the <see cref="P:Microsoft.PointOfService.LineDisplay.CursorRow"></see> property setting.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.LineDisplay.ExtendedErrorBadFormat">
			<summary>Indicates that the specified file is either not a bitmap file or it is in an unsupported format.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.LineDisplay.ExtendedErrorTooBig">
			<summary>Indicates that the bitmap is either too wide to display without transformation, or it is too big to transform.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.LineDisplay.StatisticOnlineTransitionCount">
			<summary>Incremented when data is successfully drawn in the line display window.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.LineDisplay.ClearDescriptors">
			<summary>Turns off all descriptors.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.LineDisplay.ClearText">
			<summary>Clears the active window by displaying blanks, sets the <see cref="P:Microsoft.PointOfService.LineDisplay.CursorRow"></see> and <see cref="P:Microsoft.PointOfService.LineDisplay.CursorColumn"></see> properties to zero, and then resynchronizes the beginning of the window with the start of the viewport.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.LineDisplay.CreateWindow(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
			<summary>Creates a viewport over the part of the display specified by the first four parameters.</summary>
			<param name="viewportRow">The viewport’s start device row.</param>
			<param name="viewportHeight">The number of device rows in the viewport.</param>
			<param name="viewportWidth">The number of device columns in the viewport.</param>
			<param name="viewportColumn">The viewport’s start device column.</param>
			<param name="windowWidth">The number of columns in the window.</param>
			<param name="windowHeight">The number of rows in the window.</param>
		</member>
		<member name="M:Microsoft.PointOfService.LineDisplay.DefineGlyph(System.Int32,System.Byte[])">
			<summary>Defines a glyph character.</summary>
			<param name="glyph">Data bytes that define the glyph.</param>
			<param name="glyphCode">The character code to be defined.</param>
		</member>
		<member name="M:Microsoft.PointOfService.LineDisplay.DestroyWindow">
			<summary>Destroys the active window.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.LineDisplay.DisplayBitmap(System.String,System.Int32,System.Int32)">
			<summary>Displays the bitmap with the specified alignment.</summary>
			<param name="alignmentX">Horizontal placement of the bitmap to be displayed. For possible values, see Remarks.</param>
			<param name="fileName">File name or URL of the bitmap file. Various file formats can be supported, such as BMP, GIF, or JPEG.</param>
			<param name="alignmentY">Vertical placement of the bitmap to be displayed. For possible values, see Remarks.</param>
		</member>
		<member name="M:Microsoft.PointOfService.LineDisplay.DisplayBitmap(System.String,System.Int32,System.Int32,System.Int32)">
			<summary>Displays the bitmap with the specified alignment and width.</summary>
			<param name="alignmentX">Horizontal placement of the bitmap to be displayed. For possible values, see Remarks.</param>
			<param name="fileName">File name or URL of the bitmap file. Various file formats can be supported, such as BMP, GIF, or JPEG.</param>
			<param name="width">Width of the bitmap to be displayed. See values below.</param>
			<param name="alignmentY">Vertical placement of the bitmap to be displayed. For possible values, see Remarks.</param>
		</member>
		<member name="M:Microsoft.PointOfService.LineDisplay.DisplayText(System.String)">
			<summary>Displays the specified string of characters.</summary>
			<param name="data">The string of characters to display.</param>
		</member>
		<member name="M:Microsoft.PointOfService.LineDisplay.DisplayText(System.String,Microsoft.PointOfService.DisplayTextMode)">
			<summary>Displays the specified string of characters in the specified display mode.</summary>
			<param name="data">The string of characters to display.</param>
			<param name="attribute">The display attribute for the text. Possible values are defined by the <see cref="T:Microsoft.PointOfService.DisplayTextMode"></see> enumeration. Valid values are Normal or Blink.</param>
		</member>
		<member name="M:Microsoft.PointOfService.LineDisplay.DisplayTextAt(System.Int32,System.Int32,System.String)">
			<summary>Displays the string of characters at the specified row and column.</summary>
			<param name="data">The string of characters to display.</param>
			<param name="row">The start row for the text.</param>
			<param name="column">The start column for the text.</param>
		</member>
		<member name="M:Microsoft.PointOfService.LineDisplay.DisplayTextAt(System.Int32,System.Int32,System.String,Microsoft.PointOfService.DisplayTextMode)">
			<summary>Displays the string of characters at the specified row and column, in the specified display mode.</summary>
			<param name="data">The string of characters to display.</param>
			<param name="row">The start row for the text.</param>
			<param name="column">The start column for the text.</param>
			<param name="attribute">The display attribute for the text. Possible values are defined by the <see cref="T:Microsoft.PointOfService.DisplayTextMode"></see> enumeration. Must be either Normal or Blink.</param>
		</member>
		<member name="M:Microsoft.PointOfService.LineDisplay.ReadCharacterAtCursor">
			<summary>Reads the currently displayed character at the cursor position.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.LineDisplay.RefreshWindow(System.Int32)">
			<summary>Changes the active window to the one specified by the window parameter, then redisplays that window’s viewport.</summary>
			<param name="window">Specifies the window to be refreshed.</param>
		</member>
		<member name="M:Microsoft.PointOfService.LineDisplay.ScrollText(Microsoft.PointOfService.DisplayScrollText,System.Int32)">
			<summary>Scrolls text in the active window, in the specified direction.</summary>
			<param name="direction">Indicates the scrolling direction, as defined by the <see cref="T:Microsoft.PointOfService.DisplayScrollText"></see> enumeration.</param>
			<param name="units">Indicates the number of columns or rows to scroll.</param>
		</member>
		<member name="M:Microsoft.PointOfService.LineDisplay.SetBitmap(System.Int32,System.String,System.Int32,System.Int32)">
			<summary>Sets the bitmap number and placement.</summary>
			<param name="alignmentX">The horizontal placement of the bitmap. For possible values, see Remarks.</param>
			<param name="fileName">The file name or URL of the bitmap file. Various file formats may be supported, such as BMP, GIF, or JPEG. If fileName is set to an empty string (""), then the bitmap is unset.</param>
			<param name="bitmapNumber">The number to be assigned to this bitmap. Valid bitmap numbers are 1 through 100.</param>
			<param name="alignmentY">The vertical placement of the bitmap. For possible values, see Remarks.</param>
		</member>
		<member name="M:Microsoft.PointOfService.LineDisplay.SetBitmap(System.Int32,System.String,System.Int32,System.Int32,System.Int32)">
			<summary>Sets the bitmap number, placement, and width.</summary>
			<param name="alignmentX">The horizontal placement of the bitmap. For possible values, see Remarks.</param>
			<param name="fileName">The file name or URL of the bitmap file. Various file formats may be supported, such as BMP, GIF, or JPEG. If fileName is set to an empty string (""), then the bitmap is unset.</param>
			<param name="width">The width of the bitmap to be displayed. See values here.</param>
			<param name="bitmapNumber">The number to be assigned to this bitmap. Valid bitmap numbers are 1 through 100.</param>
			<param name="alignmentY">The vertical placement of the bitmap. For possible values, see Remarks.</param>
		</member>
		<member name="M:Microsoft.PointOfService.LineDisplay.SetDescriptor(System.Int32,Microsoft.PointOfService.DisplaySetDescriptor)">
			<summary>Sets the state of a descriptor.</summary>
			<param name="attribute">Indicates the attribute for the descriptor. Possible values are defined by the <see cref="T:Microsoft.PointOfService.DisplaySetDescriptor"></see> enumeration.</param>
			<param name="descriptor">Indicates which descriptor to change. The value can range between zero and one less than the value of the <see cref="P:Microsoft.PointOfService.LineDisplay.DeviceDescriptors"></see> property.</param>
		</member>
		<member name="P:Microsoft.PointOfService.LineDisplay.BlinkRate">
			<summary>Gets or sets the blink cycle in milliseconds.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.LineDisplay.CapBitmap">
			<summary>Gets the Boolean value that indicates whether the display of bitmaps is supported. </summary>
		</member>
		<member name="P:Microsoft.PointOfService.LineDisplay.CapBlink">
			<summary>Gets the character blink capability of the Line Display device.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.LineDisplay.CapBlinkRate">
			<summary>Gets the Boolean value that indicates whether the blink rate of the device can be controlled.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.LineDisplay.CapBrightness">
			<summary>Gets the Boolean value that indicates whether brightness can be controlled. </summary>
		</member>
		<member name="P:Microsoft.PointOfService.LineDisplay.CapCharacterSet">
			<summary>Gets the default character set capability of the Line Display device.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.LineDisplay.CapCursorType">
			<summary>Gets a bitwise indication of the cursor types supported by the Line Display device, selectable through the <see cref="P:Microsoft.PointOfService.LineDisplay.CursorType"></see> property.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.LineDisplay.CapCustomGlyph">
			<summary>Gets the Boolean value that indicates whether the device support custom glyph definition.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.LineDisplay.CapDescriptors">
			<summary>Gets the Boolean value that indicates whether the device supports descriptors.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.LineDisplay.CapHMarquee">
			<summary>Gets the Boolean value that indicates whether the device supports horizontal marquee windows. </summary>
		</member>
		<member name="P:Microsoft.PointOfService.LineDisplay.CapICharWait">
			<summary>Gets the Boolean value that indicates whether the device supports inter-character wait.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.LineDisplay.CapMapCharacterSet">
			<summary>Gets the Boolean value that indicates whether the service object can map the characters provided by the application to the character sets defined in the <see cref="P:Microsoft.PointOfService.LineDisplay.CharacterSetList"></see> property when displaying data.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.LineDisplay.CapReadBack">
			<summary>Gets the capability of the Line Display device to read back the data displayed on it.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.LineDisplay.CapReverse">
			<summary>Gets the reverse video capability of the Line Display device.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.LineDisplay.CapScreenMode">
			<summary>Gets the Boolean value that indicates whether the Line Display device supports changing the screen mode; that is, the number of text rows and columns.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.LineDisplay.CapVMarquee">
			<summary>Gets the Boolean value that indicates whether the device supports vertical marquee windows.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.LineDisplay.CharacterSet">
			<summary>Gets or sets the character set for displaying characters.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.LineDisplay.CharacterSetList">
			<summary>Gets a string of character set numbers.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.LineDisplay.Columns">
			<summary>Gets the number of columns for this window.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.LineDisplay.CurrentWindow">
			<summary>Gets or sets the active window to which text is displayed.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.LineDisplay.CursorColumn">
			<summary>Gets or sets the column in the active window to which the next displayed character will be output.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.LineDisplay.CursorRow">
			<summary>Gets or sets the row in the active window to which the next displayed character is written.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.LineDisplay.CursorType">
			<summary>Gets or sets the cursor type for the active window. Possible values are defined by the <see cref="T:Microsoft.PointOfService.DisplayCursors"></see> enumeration.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.LineDisplay.CursorUpdate">
			<summary>Gets or sets the Boolean value that indicates whether characters are updated.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.LineDisplay.CustomGlyphList">
			<summary>Gets an array of instances of the <see cref="T:Microsoft.PointOfService.RangeOfCharacters"></see> helper class, which represents the character code ranges that are available for defining glyphs.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.LineDisplay.DeviceBrightness">
			<summary>Gets or sets the device brightness value, expressed as a percentage between 0 and 100.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.LineDisplay.DeviceColumns">
			<summary>Gets the number of columns on this device.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.LineDisplay.DeviceDescriptors">
			<summary>Gets the number of descriptors on this device.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.LineDisplay.DeviceRows">
			<summary>Gets the number of rows on this device.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.LineDisplay.DeviceWindows">
			<summary>Gets the maximum number of windows that the Line Display device supports.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.LineDisplay.GlyphHeight">
			<summary>Gets the glyph height based on the number of pixels for a character cell.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.LineDisplay.GlyphWidth">
			<summary>Gets the glyph width based on the number of pixels for a character cell.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.LineDisplay.InterCharacterWait">
			<summary>Gets or sets the wait time, specified in milliseconds, between the display of each character with the <see cref="M:Microsoft.PointOfService.LineDisplay.DisplayText(System.String)"></see> and <see cref="M:Microsoft.PointOfService.LineDisplay.DisplayTextAt(System.Int32,System.Int32,System.String)"></see> methods.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.LineDisplay.IsExclusiveUseDevice">
			<summary>Gets the Boolean value that indicates whether the Line Display device is an exclusive-use device.</summary>
			<returns>A value of true indicates that the <see cref="T:Microsoft.PointOfService.LineDisplay"></see> is exclusive-use. Otherwise, the value is false.</returns>
		</member>
		<member name="P:Microsoft.PointOfService.LineDisplay.MapCharacterSet">
			<summary>Gets or sets the Boolean value that indicates whether the Line Display device supports mapping character sets. </summary>
		</member>
		<member name="P:Microsoft.PointOfService.LineDisplay.MarqueeFormat">
			<summary>Gets or sets the marquee format for the active window.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.LineDisplay.MarqueeRepeatWait">
			<summary>Gets or sets the wait time, specified in milliseconds, between scrolling the final character or row of the window into its viewport and restarting the marquee with the first or last character or row.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.LineDisplay.MarqueeType">
			<summary>Gets or sets the marquee type for the active window.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.LineDisplay.MarqueeUnitWait">
			<summary>Gets or sets the wait time, specified in milliseconds, between marquee scrolling of each column or row in the window.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.LineDisplay.MaximumX">
			<summary>Gets the maximum number of horizontal pixels that the device supports </summary>
		</member>
		<member name="P:Microsoft.PointOfService.LineDisplay.MaximumY">
			<summary>Gets the maximum number of vertical pixels that the device supports.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.LineDisplay.Rows">
			<summary>Gets the number of rows for this window.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.LineDisplay.ScreenMode">
			<summary>Gets or sets the screen mode value of the device.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.LineDisplay.ScreenModeList">
			<summary>Gets the array of <see cref="T:Microsoft.PointOfService.DisplayScreenMode"></see> class instances that are supported by the device.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.Logger">
			<summary>Defines an event log file structure to which programs can write informational or programmatic warning or error events. </summary>
		</member>
		<member name="M:Microsoft.PointOfService.Logger.Close">
			<summary>Closes the log stream.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.Logger.Error(System.String,System.String)">
			<summary>Logs an error event with the specified parameters.</summary>
			<param name="message">The error message</param>
			<param name="caller">The source of the error</param>
		</member>
		<member name="M:Microsoft.PointOfService.Logger.Error(System.String,System.String,System.Exception)">
			<summary>Logs an error event with the specified parameters.</summary>
			<param name="message">The error message</param>
			<param name="e">The exception that is the source of the error</param>
			<param name="caller">The source of the error</param>
		</member>
		<member name="M:Microsoft.PointOfService.Logger.Info(System.String,System.String)">
			<summary>Logs an informational event with the specified parameters.</summary>
			<param name="message">An informational message</param>
			<param name="caller">The source of the information</param>
		</member>
		<member name="M:Microsoft.PointOfService.Logger.Info(System.String,System.String,System.Boolean)">
			<summary>Logs an informational event with the specified parameters.</summary>
			<param name="message">An informational message</param>
			<param name="caller">The source of the information</param>
			<param name="eventLog">TRUE to write to the Windows event log; otherwise, FALSE</param>
		</member>
		<member name="M:Microsoft.PointOfService.Logger.Warn(System.String,System.String)">
			<summary>Logs a warning event with the specified parameters.</summary>
			<param name="message">A warning</param>
			<param name="caller">The warning source</param>
		</member>
		<member name="M:Microsoft.PointOfService.Logger.Warn(System.String,System.String,System.Boolean)">
			<summary>Logs a warning event with the specified parameters.</summary>
			<param name="message">A warning</param>
			<param name="caller">The warning source</param>
			<param name="eventLog">TRUE to write to the Windows event log; otherwise, FALSE</param>
		</member>
		<member name="P:Microsoft.PointOfService.Logger.Enabled">
			<summary>Indicates whether logging is enabled.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Logger.RegistryPath">
			<summary>Holds the registry path to the log file.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.LogState">
			<summary>Enumerates the state of the transaction log.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.LogState.Full">
			<summary>The transaction log is full.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.LogState.NearFull">
			<summary>The transaction log is nearly full.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.LogState.Ok">
			<summary>The transaction log has enough capacity.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.MapMode">
			<summary>Lists the valid units of measure for Printer, Check Scanner, and Point Card Reader Writer devices.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.MapMode.Dots">
			<summary>The device's dot width.  </summary>
		</member>
		<member name="F:Microsoft.PointOfService.MapMode.English">
			<summary>0.001 inch</summary>
		</member>
		<member name="F:Microsoft.PointOfService.MapMode.Metric">
			<summary>0.01 millimeter</summary>
		</member>
		<member name="F:Microsoft.PointOfService.MapMode.Twips">
			<summary>1/1440 of an inch</summary>
		</member>
		<member name="T:Microsoft.PointOfService.MarkerType">
			<summary>Lists the possible marker types.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.MarkerType.Document">
			<summary>Marker for a document or ticket.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.MarkerType.Head">
			<summary>Marks the first implicitly stored marker on the medium.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.MarkerType.None">
			<summary>No assigned type.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.MarkerType.SessionBegin">
			<summary>Marks the beginning of a session.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.MarkerType.SessionEnd">
			<summary>Marks the end of a session.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.MarkerType.Tail">
			<summary>Marks the last implicitly stored marker on the medium.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.Micr">
			<summary>Defines the programmatic interface for a UPOS magnetic ink character recognition (MICR) device.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.Micr.#ctor">
			<summary>Creates an instance of the <see cref="Micr"></see> class.</summary>
		</member>
		<member name="E:Microsoft.PointOfService.Micr.DataEvent">
			<summary>Raised by the service object to notify the application when MICR data is read from a check and is available to read.</summary>
		</member>
		<member name="E:Microsoft.PointOfService.Micr.ErrorEvent">
			<summary>Raised by the service object to notify the application that an error has been detected when it reads MICR data.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Micr.ExtendedErrorBadData">
			<summary>Indicates an unreadable character was detected during input processing.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Micr.ExtendedErrorBadSize">
			<summary>Indicates the length of the check was beyond the expected readable range.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Micr.ExtendedErrorCheck">
			<summary>Indicates the device was taken out of Removal mode while a check is still present.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Micr.ExtendedErrorCheckDigit">
			<summary>Indicates the check digit verification has failed even though there was no error during input processing.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Micr.ExtendedErrorCoverOpen">
			<summary>Indicates the check insertion process failed because of the POS printer cover being open.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Micr.ExtendedErrorJam">
			<summary>Indicates the check insertion process has caused a paper jam.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Micr.ExtendedErrorNoCheck">
			<summary>Indicates the device was taken out of Insertion mode without a check being inserted.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Micr.ExtendedErrorNoData">
			<summary>Indicates the input data stream was unreadable. </summary>
		</member>
		<member name="F:Microsoft.PointOfService.Micr.StatisticFailedDataParseCount">
			<summary>Contains the failed data parse count.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Micr.StatisticFailedReadCount">
			<summary>Contains the failed read count.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Micr.StatisticGoodReadCount">
			<summary>Contains the successful read count.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.Micr.BeginInsertion(System.Int32)">
			<summary>Starts check insertion processing.</summary>
			<param name="timeout">The timeout parameter gives the number of milliseconds before failing the method.If timeout is zero, <see cref="BeginInsertion"></see> tries to begin Insertion mode, then returns the appropriate status immediately.If timeout is WaitForever, <see cref="BeginInsertion"></see> tries to begin Insertion mode, then waits as long until either the check is inserted or an error occurs.</param>
		</member>
		<member name="M:Microsoft.PointOfService.Micr.BeginRemoval(System.Int32)">
			<summary>Starts the check removal processing.</summary>
			<param name="timeout">The timeout parameter gives the number of milliseconds before failing the method.If timeout is zero, <see cref="BeginRemoval"></see> tries to begin Removal mode, then returns the appropriate status immediately.If timeout is WaitForever, <see cref="BeginRemoval"></see> tries to begin Removal mode, then waits until either the check is removed or an error occurs.</param>
		</member>
		<member name="M:Microsoft.PointOfService.Micr.ClearInput">
			<summary>Clears all device input that has been buffered.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.Micr.ClearInputProperties">
			<summary>Resets the values of properties altered by <see cref="E:Microsoft.PointOfService.Micr.DataEvent"></see> or <see cref="E:Microsoft.PointOfService.Micr.ErrorEvent"></see>.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.Micr.EndInsertion">
			<summary>Ends the check insertion processing.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.Micr.EndRemoval">
			<summary>Ends the check removal processing.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Micr.AccountNumber">
			<summary>Gets the account number parsed from the most recently read MICR data.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Micr.Amount">
			<summary>Gets the amount field parsed from the most recently read MICR data.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Micr.AutoDisable">
			<summary>Gets or sets a Boolean value that indicates whether POS for .NET automatically disables the device when data is received.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Micr.BankNumber">
			<summary>Gets the bank number part of the transit field parsed from the most recently read MICR data.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Micr.CapValidationDevice">
			<summary>Gets a Boolean value that indicates whether this device also performs validation printing through the POS Printer service object's slip station.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Micr.CheckType">
			<summary>Gets a number that represents the type of check parsed from the most recently read MICR data.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Micr.CountryCode">
			<summary>Gets a number that represents the country/region of origin of the check, parsed from the most recently read MICR data.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Micr.DataCount">
			<summary>Gets the number of currently queued <see cref="E:Microsoft.PointOfService.Micr.DataEvent"></see> events.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Micr.DataEventEnabled">
			<summary>Gets or sets a Boolean value that indicates whether a <see cref="E:Microsoft.PointOfService.Micr.DataEvent"></see> event is delivered when input data is queued.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Micr.Epc">
			<summary>Gets the Extended Processing Code ("EPC") field.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Micr.IsExclusiveUseDevice">
			<summary>Gets a Boolean value that indicates whether the <see cref="T:Microsoft.PointOfService.Micr"></see> is an exclusive-use device.</summary>
			<returns>A value of true indicates that the <see cref="T:Microsoft.PointOfService.Micr"></see> is exclusive-use. Otherwise, the value is false.</returns>
		</member>
		<member name="P:Microsoft.PointOfService.Micr.RawData">
			<summary>Gets the MICR data from the most recent MICR read.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Micr.SerialNumber">
			<summary>Gets the serial number of the check parsed from the most recently read MICR data.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Micr.TransitNumber">
			<summary>Gets the transit field of the check parsed from the most recently read MICR data.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.MotionSensor">
			<summary>Defines the programmatic interface for a UPOS Motion Sensor device.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.MotionSensor.#ctor">
			<summary>Creates an instance of <see cref="MotionSensor"></see> class.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.MotionSensor.StatisticMotionEventCount">
			<summary>Indicates statistics for motion event reporting.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.MotionSensor.StatusMotionAbsent">
			<summary>Indicates the absence of motion.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.MotionSensor.StatusMotionPresent">
			<summary>Indicates the presence of motion.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.MotionSensor.WaitForMotion(System.Int32)">
			<summary>Used by the application to wait for detection of a motion from the motion sensor.</summary>
			<param name="timeout">Maximum number of milliseconds for the motion sensor to wait for a person to be present before it returns control back to the application. If 0, the method returns immediately. If WaitForever, the method waits as long as needed until motion is detected or an error occurs.</param>
		</member>
		<member name="P:Microsoft.PointOfService.MotionSensor.IsExclusiveUseDevice">
			<summary>Gets a Boolean value that indicates whether the <see cref="T:Microsoft.PointOfService.MotionSensor"></see> is an exclusive-use device.</summary>
			<returns>A value of true indicates that the <see cref="T:Microsoft.PointOfService.MotionSensor"></see> is exclusive-use. Otherwise, the value will be false.</returns>
		</member>
		<member name="P:Microsoft.PointOfService.MotionSensor.Motion">
			<summary>Gets a Boolean value that indicates whether motion has been detected. </summary>
		</member>
		<member name="P:Microsoft.PointOfService.MotionSensor.Timeout">
			<summary>Gets or sets the number of milliseconds from the last time motion was detected until the status update event of <see cref="F:Microsoft.PointOfService.MotionSensor.StatusMotionAbsent"></see> is raised.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.Msr">
			<summary>Defines the programmatic interface for a UPOS magnetic stripe reader (MSR) device.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.Msr.#ctor">
			<summary>Creates an instance of the <see cref="Msr"></see> class.</summary>
		</member>
		<member name="E:Microsoft.PointOfService.Msr.DataEvent">
			<summary>Raised by the service object to indicate the delivery of input data from the device to the application.</summary>
		</member>
		<member name="E:Microsoft.PointOfService.Msr.ErrorEvent">
			<summary>Raised by the service object when an error is detected while trying to read MSR data.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Msr.CardTypeAamva">
			<summary>Indicates the card type is AAMVA.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Msr.CardTypeBank">
			<summary>Indicates the card type is BANK.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Msr.ExtendedErrorDeviceAuthenticationFailed">
			<summary>Indicates an extended error where the device authentication process failed.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Msr.ExtendedErrorDeviceDeauthenticationFailed">
			<summary>Indicates an extended error where the device deauthentication failed.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Msr.ExtendedErrorEnd">
			<summary>Indicates an end sentinel error.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Msr.ExtendedErrorFailure">
			<summary>Indicates a general error.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Msr.ExtendedErrorLrc">
			<summary>Indicates an LRC error.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Msr.ExtendedErrorParity">
			<summary>Indicates a parity error.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Msr.ExtendedErrorStart">
			<summary>Indicates a start sentinel error.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Msr.ExtendedErrorSuccess">
			<summary>Indicates no error.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Msr.StatisticChallengeRequestCount">
			<summary>Contains the count of challenge requests.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Msr.StatisticFailedCardAuthenticationDataCount">
			<summary>Contains the count of failed card authentication attempts.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Msr.StatisticFailedDeviceAuthenticationCount">
			<summary>Contains the count of failed device authentication attempts.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Msr.StatisticFailedReadCount">
			<summary>This is field contains the node name used in the POS.NET XML statistics file. The number of failed card reads is stored in this node.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Msr.StatisticFailedWriteCount">
			<summary>This is field contains a node name used in the POS.NET XML statistics file. The number of failed card writes is stored in this node.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Msr.StatisticGoodCardAuthenticationDataCount">
			<summary>Contains the count of successful card authentication attempts.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Msr.StatisticGoodDeviceAuthenticationCount">
			<summary>Contains the count of successful device authentication attempts.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Msr.StatisticGoodReadCount">
			<summary>This is field contains the node name used in the POS.NET XML statistics file. The number of successful card reads is stored in this node.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Msr.StatisticGoodWriteCount">
			<summary>This is field contains a node name used in the POS.NET XML statistics file. The number of successful card writes is stored in this node.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Msr.StatisticMissingStartSentinelTrack1Count">
			<summary>This is field contains a node name used in the POS.NET XML statistics file. The number of times the track 1 sentinel was found missing is stored in this node.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Msr.StatisticMissingStartSentinelTrack2Count">
			<summary>This is field contains a node name used in the POS.NET XML statistics file. The number of times the track 2 sentinel was found missing is stored in this node.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Msr.StatisticMissingStartSentinelTrack3Count">
			<summary>This is field contains a node name used in the POS.NET XML statistics file. The number of times the track 3 sentinel was found missing is stored in this node.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Msr.StatisticMissingStartSentinelTrack4Count">
			<summary>This is field contains a node name used in the POS.NET XML statistics file. The number of times the track 4 sentinel was found missing is stored in this node.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Msr.StatisticParityLrcErrorTrack1Count">
			<summary>This is field contains the node name used in the POS.NET XML statistics file. The number of parity errors for track 1 is stored in this node.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Msr.StatisticParityLrcErrorTrack2Count">
			<summary>This is field contains the node name used in the POS.NET XML statistics file. The number of parity errors for track 2 is stored in this node.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Msr.StatisticParityLrcErrorTrack3Count">
			<summary>This is field contains the node name used in the POS.NET XML statistics file. The number of parity errors for track 3 is stored in this node.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Msr.StatisticParityLrcErrorTrack4Count">
			<summary>This is field contains the node name used in the POS.NET XML statistics file. The number of parity errors for track 4 is stored in this node.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Msr.StatisticUnreadableCardCount">
			<summary>This is field contains the node name used in the POS.NET XML statistics file. The number of failed card reads is stored in this node.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Msr.StatusDeviceAuthenticated">
			<summary>Indicates if the device is authenticated.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Msr.StatusDeviceDeauthenticated">
			<summary>Indicates if the device is deauthenticated.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.Msr.AuthenticateDevice(System.Byte[])">
			<summary>Authenticates a device.</summary>
			<param name="responseToken">A response token generated from the challenge token retrieved from a previous call to the <see cref="M:Microsoft.PointOfService.Msr.RetrieveDeviceAuthenticationData"></see> method.</param>
		</member>
		<member name="M:Microsoft.PointOfService.Msr.ClearInput">
			<summary>Clears all device input that has been buffered.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.Msr.ClearInputProperties">
			<summary>Resets the values of properties altered by <see cref="E:Microsoft.PointOfService.Msr.DataEvent"></see> or <see cref="E:Microsoft.PointOfService.Msr.ErrorEvent"></see>.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.Msr.DeauthenticateDevice(System.Byte[])">
			<summary>Deauthenticates a device that is currently in the authenticated state </summary>
			<param name="responseToken">A response token generated from the challenge token retrieved from a previous call to the <see cref="M:Microsoft.PointOfService.Msr.RetrieveDeviceAuthenticationData"></see> method.</param>
		</member>
		<member name="M:Microsoft.PointOfService.Msr.RetrieveCardProperty(System.String)">
			<summary>Retrieves the value of specific parsed properties from the last card swiped.</summary>
			<param name="name">Name of the property whose value is to be retrieved. The <see cref="P:Microsoft.PointOfService.Msr.CardPropertyList"></see> property can be parsed to determine the set of valid properties for the most recently swiped card.</param>
		</member>
		<member name="M:Microsoft.PointOfService.Msr.UpdateKey(System.String,System.String)">
			<summary>Provides a new encryption key to the device.</summary>
			<param name="keyName">A name used to identify the key.</param>
			<param name="key">A Hex-ASCII value for a new key.</param>
		</member>
		<member name="M:Microsoft.PointOfService.Msr.WriteTracks(System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Int32)">
			<summary>Initiates the encoding of data to the MSR track(s) selected in the <see cref="P:Microsoft.PointOfService.Msr.TracksToWrite"></see> property.</summary>
			<param name="track1Data">The first data track.</param>
			<param name="track3Data">The third data track.</param>
			<param name="timeout">The number of milliseconds before failing the method. If -1, the method waits as long as need before the card is swiped.</param>
			<param name="track2Data">The second data track.</param>
			<param name="track4Data">The fourth data track.</param>
		</member>
		<member name="P:Microsoft.PointOfService.Msr.AccountNumber">
			<summary>Holds the account number from the most recently swiped card.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Msr.AutoDisable">
			<summary>Indicates whether POS for .NET automatically disables the device when data is received.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Msr.CapIso">
			<summary>If true, the MSR device supports ISO cards; otherwise it is false.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Msr.CapJisOne">
			<summary>If true, the MSR device supports JIS Type-I cards; otherwise it is false.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Msr.CapJisTwo">
			<summary>If true, the MSR device supports JIS Type-II cards; otherwise it is false.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Msr.CapTransmitSentinels">
			<summary>If true, the MSR device can transmit start and end sentinels. If false, these characters cannot be returned to the application.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Msr.DataCount">
			<summary>Holds the number of data events currently queued by the service object.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Msr.DataEventEnabled">
			<summary>When set to true by the application, POS for .NET delivers the next event in the event queue.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Msr.DecodeData">
			<summary>If false, the <see cref="P:Microsoft.PointOfService.Msr.Track1Data"></see>, <see cref="P:Microsoft.PointOfService.Msr.Track2Data"></see>, <see cref="P:Microsoft.PointOfService.Msr.Track3Data"></see>, and <see cref="P:Microsoft.PointOfService.Msr.Track4Data"></see> properties contain the original encoded bit sequence, known as “raw format.”</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Msr.ErrorReportingType">
			<summary>Holds the type of error reporting the application wants to receive. Possible values are defined by the <see cref="T:Microsoft.PointOfService.MsrErrorReporting"></see> enumeration.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Msr.ExpirationDate">
			<summary>Holds the expiration date from the most recently swiped card, as four ASCII decimal characters in the form YYMM. For example, February 1998 is “9802” and August 2018 is “1808”.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Msr.FirstName">
			<summary>Holds the first name from the most recently swiped card.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Msr.IsExclusiveUseDevice">
			<summary>Indicates whether the <see cref="T:Microsoft.PointOfService.Msr"></see> is an exclusive-use device.</summary>
			<returns>A value of true indicates that the <see cref="T:Microsoft.PointOfService.Msr"></see> is exclusive-use. Otherwise, the value will be false.</returns>
		</member>
		<member name="P:Microsoft.PointOfService.Msr.MiddleInitial">
			<summary>Holds the middle initial from the most recently swiped card.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Msr.ParseDecodeData">
			<summary>If true, the decoded data contained within the <see cref="Track1Data"></see> and <see cref="Track2Data"></see> properties is further separated into fields for access via various other properties.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Msr.ServiceCode">
			<summary>Holds the service code from the most recently swiped card.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Msr.Suffix">
			<summary>Holds the suffix from the most recently swiped card.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Msr.Surname">
			<summary>Holds the surname from the most recently swiped card.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Msr.Title">
			<summary>Holds the title from the most recently swiped card.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Msr.Track1Data">
			<summary>Holds either the Track 1 data from the most recently swiped card or an empty array.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Msr.Track1DiscretionaryData">
			<summary>Holds the Track 1 discretionary data from the most recently swiped card.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Msr.Track2Data">
			<summary>Holds either the Track 2 data from the most recently swiped card or an empty array.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Msr.Track2DiscretionaryData">
			<summary>The Track 2 discretionary data from the most recently swiped card.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Msr.Track3Data">
			<summary>Holds either the Track 3 data from the most recently swiped card or an empty array.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Msr.Track4Data">
			<summary>Holds the Track 4 data (JIS-II) from the most recently swiped card.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Msr.TracksToRead">
			<summary>Indicates the track data that the application wishes to place into the <see cref="Track1Data"></see>, <see cref="Track2Data"></see>, <see cref="Track3Data"></see> and <see cref="Track4Data"></see> properties following a card swipe.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Msr.TracksToWrite">
			<summary>Specifies which MSR tracks will be written when the <see cref="M:Microsoft.PointOfService.Msr.WriteTracks(System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Int32)"></see> method is called and an MSR card swiped.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Msr.TransmitSentinels">
			<summary>If true, the <see cref="Track1Data"></see>, <see cref="Track2Data"></see>, <see cref="Track3Data"></see>, and <see cref="Track4Data"></see> properties contain start sentinel and end sentinel values.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.Msr.AamvaCardProperties">
			<summary>Contains the different properties that can be accessed for AAMVA cards.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Msr.AamvaCardProperties.Address">
			<summary>Contains the address property from the AAMVA card.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Msr.AamvaCardProperties.BirthDate">
			<summary>Contains the birth date property from the AAMVA card.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Msr.AamvaCardProperties.City">
			<summary>Contains the city property from the AAMVA card.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Msr.AamvaCardProperties.Class">
			<summary>Contains the class property from the AAMVA card.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Msr.AamvaCardProperties.Endorsements">
			<summary>Contains the endorsements property from the AAMVA card.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Msr.AamvaCardProperties.ExpirationDate">
			<summary>Contains the expiration date property from the AAMVA card.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Msr.AamvaCardProperties.EyeColor">
			<summary>Contains the eye color property from the AAMVA card.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Msr.AamvaCardProperties.FirstName">
			<summary>Contains the first name property from the AAMVA card.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Msr.AamvaCardProperties.Gender">
			<summary>Contains the gender property from the AAMVA card.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Msr.AamvaCardProperties.HairColor">
			<summary>Contains the hair color property from the AAMVA card.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Msr.AamvaCardProperties.Height">
			<summary>Contains the height property from the AAMVA card.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Msr.AamvaCardProperties.LicenseNumber">
			<summary>Contains the license number property from the AAMVA card.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Msr.AamvaCardProperties.PostalCode">
			<summary>Contains the postal code property from the AAMVA card.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Msr.AamvaCardProperties.Restrictions">
			<summary>Contains the restrictions property from the AAMVA card.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Msr.AamvaCardProperties.State">
			<summary>Contains the state property from the AAMVA card.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Msr.AamvaCardProperties.Suffix">
			<summary>Contains the suffix property from the AAMVA card.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Msr.AamvaCardProperties.Surname">
			<summary>Contains the surname property from the AAMVA card.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Msr.AamvaCardProperties.Weight">
			<summary>Contains the weight property from the AAMVA card.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.Msr.BankCardProperties">
			<summary>Contains the properties that can be accessed from the bank card.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Msr.BankCardProperties.AccountNumber">
			<summary>Contains the account number property from the bank card.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Msr.BankCardProperties.ExpirationDate">
			<summary>Contains the expiration date property from the bank card.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Msr.BankCardProperties.FirstName">
			<summary>Contains the first name property from the bank card.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Msr.BankCardProperties.MiddleInitial">
			<summary>Contains the middle initial property from the bank card.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Msr.BankCardProperties.ServiceCode">
			<summary>Contains the service code property from the bank card.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Msr.BankCardProperties.Suffix">
			<summary>Contains the suffix property from the bank card.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Msr.BankCardProperties.Surname">
			<summary>Contains the surname property from the bank card.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Msr.BankCardProperties.Title">
			<summary>Contains the title from the bank card.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.MsrErrorReporting">
			<summary>Lists the error reporting types for an MSR device.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.MsrErrorReporting.Card">
			<summary>Report errors at a card level.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.MsrErrorReporting.Track">
			<summary>Report errors at a track level.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.MsrTracks">
			<summary>Lists the possible combinations of track data to be read.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.MsrTracks.None">
			<summary>No track will be obtained.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.MsrTracks.Track1">
			<summary>Obtain track 1.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.MsrTracks.Track2">
			<summary>Obtain track 2.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.MsrTracks.Track3">
			<summary>Obtain track 3.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.MsrTracks.Track4">
			<summary>Obtain track 4.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.MsrTracks.Tracks12">
			<summary>Obtain tracks 1 and 2.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.MsrTracks.Tracks123">
			<summary>Obtain tracks 1, 2, and 3.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.MsrTracks.Tracks1234">
			<summary>Obtain tracks 1, 2, 3, and 4.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.MsrTracks.Tracks124">
			<summary>Obtain tracks 1, 2, and 4.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.MsrTracks.Tracks13">
			<summary>Obtain tracks 1 and 3.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.MsrTracks.Tracks134">
			<summary>Obtain tracks 1, 3, and 4.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.MsrTracks.Tracks14">
			<summary>Obtain tracks 1 and 4.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.MsrTracks.Tracks23">
			<summary>Obtain tracks 2 and 3.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.MsrTracks.Tracks234">
			<summary>Obtain tracks 2, 3, and 4.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.MsrTracks.Tracks24">
			<summary>Obtain tracks 2 and 4.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.MsrTracks.Tracks34">
			<summary>Obtain tracks 3 and 4.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.OutputCompleteEventArgs">
			<summary>Defines the programmatic interface for the transmission of Output Complete Events.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.OutputCompleteEventArgs.#ctor(System.Int32)">
			<summary>Creates a new instance of <see cref="OutputCompleteEventArgs"></see> with the specified data.</summary>
			<param name="outputId">ID number of the asynchronous output request that is complete.</param>
		</member>
		<member name="P:Microsoft.PointOfService.OutputCompleteEventArgs.OutputId">
			<summary>Holds the ID number of the asynchronous output request that is complete.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.OutputCompleteEventHandler">
			<summary>Defines the method that will handle a <see cref="T:Microsoft.PointOfService.OutputCompleteEventArgs"></see> events.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.PageModeDescriptors">
			<summary>Lists the valid page mode functions of the printer for the selected <see cref="PageModeStation"></see>.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PageModeDescriptors.Barcode">
			<summary>Printing of barcodes on the <see cref="PageModeStation"></see> is supported.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PageModeDescriptors.BarcodeRotate">
			<summary>Rotation of barcodes on the <see cref="PageModeStation"></see> is supported.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PageModeDescriptors.Bitmap">
			<summary>Printing of bitmaps on the <see cref="PageModeStation"></see> is supported.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PageModeDescriptors.BitmapRotate">
			<summary>Rotation of bitmaps on the <see cref="PageModeStation"></see> is supported.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PageModeDescriptors.None">
			<summary>No function is supported.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PageModeDescriptors.Opaque">
			<summary>Text, graphics, and background are opaque, meaning items already placed on the page area in the specified print area will not be visible after being printed over.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.PageModePrintControl">
			<summary>Lists the valid Page Mode controls for a print station.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PageModePrintControl.Cancel">
			<summary>Clear the page and exit the Page Mode without any printing of any print area.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PageModePrintControl.Normal">
			<summary>Print the print area and destroy the canvas and exit Page Mode.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PageModePrintControl.PageMode">
			<summary>Enter Page Mode.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PageModePrintControl.PrintSave">
			<summary>Print <see cref="PageModePrintArea"></see> and save the canvas. Page Mode is not exited. Use for printing of repeated pages.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.PageModePrintDirection">
			<summary>Lists the possible print directions that can be set for a print station.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PageModePrintDirection.BottomToTop">
			<summary>Print bottom to top, starting at the bottom left position of the print area (that is, rotated left 90° printing).</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PageModePrintDirection.LeftToRight">
			<summary>Print left to right, starting at top left position of the print area (that is, normal printing).</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PageModePrintDirection.None">
			<summary>No valid station is selected.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PageModePrintDirection.RightToLeft">
			<summary>Print right to left, starting at the bottom right position of the print area (that is, upside down printing).</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PageModePrintDirection.TopToBottom">
			<summary>Print top to bottom, starting at the top right position of the print area (that is, rotated right 90° printing.)</summary>
		</member>
		<member name="T:Microsoft.PointOfService.PaymentCondition">
			<summary>Lists the valid payment conditions for an authorization operation.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PaymentCondition.Bonus1">
			<summary>Bonus 1</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PaymentCondition.Bonus2">
			<summary>Bonus 2</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PaymentCondition.Bonus3">
			<summary>Bonus 3</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PaymentCondition.Bonus4">
			<summary>Bonus 4</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PaymentCondition.Bonus5">
			<summary>Bonus 5</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PaymentCondition.BonusCombination1">
			<summary>Bonus combination payments 1</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PaymentCondition.BonusCombination2">
			<summary>Bonus combination payments 2</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PaymentCondition.BonusCombination3">
			<summary>Bonus combination payments 3</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PaymentCondition.BonusCombination4">
			<summary>Bonus combination payments 4</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PaymentCondition.Debit">
			<summary>Debit card</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PaymentCondition.ElectronicMoney">
			<summary>Electronic money</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PaymentCondition.Installment1">
			<summary>Installment 1</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PaymentCondition.Installment2">
			<summary>Installment 2</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PaymentCondition.Installment3">
			<summary>Installment 3</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PaymentCondition.Lump">
			<summary>Lump-sum</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PaymentCondition.Revolving">
			<summary>Revolving</summary>
		</member>
		<member name="T:Microsoft.PointOfService.PaymentMedia">
			<summary>Lists the valid payment media types for an approval method.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PaymentMedia.Credit">
			<summary>Credit card</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PaymentMedia.Debit">
			<summary>Debit card</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PaymentMedia.Unspecified">
			<summary>No media type specified</summary>
		</member>
		<member name="T:Microsoft.PointOfService.PinEntryStatus">
			<summary>Lists the possible PIN entry status values. </summary>
		</member>
		<member name="F:Microsoft.PointOfService.PinEntryStatus.BadKey">
			<summary>The user pressed an invalid key during PIN entry.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PinEntryStatus.Cancel">
			<summary>The user pressed the Cancel key, canceling PIN entry.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PinEntryStatus.Success">
			<summary>PIN entry was successfully completed.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PinEntryStatus.Timeout">
			<summary>The device timed out before PIN entry was completed.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.PinPad">
			<summary>Defines the programmatic interface for a UPOS PIN pad device.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.PinPad.#ctor">
			<summary>Creates an instance of the <see cref="PinPad"></see> class.</summary>
		</member>
		<member name="E:Microsoft.PointOfService.PinPad.DataEvent">
			<summary>Raised by the service object to present input data from the PIN pad device to the application.</summary>
		</member>
		<member name="E:Microsoft.PointOfService.PinPad.ErrorEvent">
			<summary>Raised by the service object when an error is detected while trying to perform a PIN encryption function. </summary>
		</member>
		<member name="F:Microsoft.PointOfService.PinPad.ExtendedErrorBadKey">
			<summary>Indicates that an encryption key is corrupted or missing.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PinPad.StatisticInvalidPINEntryCount">
			<summary>Incremented during the <see cref="ExitPinEntryMode"></see> method if PIN entry has failed.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PinPad.StatisticValidPINEntryCount">
			<summary>Incremented during the <see cref="ExitPinEntryMode"></see> method if PIN entry has occurred successfully.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.PinPad.BeginEftTransaction(Microsoft.PointOfService.PinPadSystem,System.Int32)">
			<summary>Informs the PIN Pad’s service object that an EFT Transaction is starting.</summary>
			<param name="transactionHost">Identifies the EFT Transaction Host to be used for this transaction.</param>
			<param name="pinpadSystem">Name of the desired PIN Pad Management System.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PinPad.ClearInput">
			<summary>Clears all device input that has been buffered.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.PinPad.ClearInputProperties">
			<summary>Resets the values of properties altered by <see cref="E:Microsoft.PointOfService.PinPad.DataEvent"></see> or <see cref="E:Microsoft.PointOfService.PinPad.ErrorEvent"></see>.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.PinPad.ComputeMac(System.String)">
			<summary>Tells the service object to compute a MAC value and return it to the application. </summary>
			<param name="inMsg">Contains the message that the application intends to send to the EFT Transaction Host.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PinPad.EnablePinEntry">
			<summary>Starts PIN entry at the PIN pad device. When <see cref="EnablePinEntry"></see> is called, the service object sets the <see cref="PinEntryEnabled"></see> property to true.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.PinPad.EndEftTransaction(Microsoft.PointOfService.EftTransactionCompletion)">
			<summary>Takes the PIN pad out of EFT Transaction Mode.</summary>
			<param name="completionCode">Valid values for the completionCode are defined by the <see cref="EftTransactionCompletion"></see> enumeration.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PinPad.UpdateKey(System.Int32,System.String)">
			<summary>Provides a new encryption key to the PIN pad service object for those PIN Pad Management Systems in which new key values are sent to the terminal as a field in standard messages from the EFT Transaction Host.</summary>
			<param name="keyNumber">Contains a key number.</param>
			<param name="key">Contains a Hex-ASCII value for a new key.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PinPad.VerifyMac(System.String)">
			<summary>Tells the service object to verify the MAC value in a message received from an EFT Transaction Host.</summary>
			<param name="message">The message parameter contains a message received from an EFT Transaction Host.</param>
		</member>
		<member name="P:Microsoft.PointOfService.PinPad.AccountNumber">
			<summary>Holds the user’s account number for the current EFT transaction.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PinPad.AdditionalSecurityInformation">
			<summary>Holds security/encryption information, formatted as a Hex-ASCII string, after a successful PIN entry operation in which the <see cref="DataEvent"></see> event is queued to the application with a <see cref="DataEventArgs.Status"></see> of Success.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PinPad.Amount">
			<summary>Holds the amount of the current EFT transaction.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PinPad.AvailableLanguagesList">
			<summary>Holds an array of the languages supported by the pre-defined prompts in the PIN pad device, as defined by the <see cref="CultureInfo"></see> .NET Framework Class.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PinPad.AvailablePromptsList">
			<summary>Holds a comma-separated string of supported values for the <see cref="Prompt"></see> property.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PinPad.CapDisplay">
			<summary>Indicates the operations that the application can perform on the PIN pad display.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PinPad.CapKeyboard">
			<summary>If set to true, the application can use the PIN pad keyboard to obtain input.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PinPad.CapLanguage">
			<summary>Indicates the language of pre-defined messages for the PIN pad device (for example, English, French, Arabic, and so on).</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PinPad.CapMacCalculation">
			<summary>If set to true, the PIN pad supports MAC calculation.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PinPad.CapTone">
			<summary>If set to true, the PIN pad has a tone indicator, which is implemented as a <see cref="ToneIndicator"></see> class object.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PinPad.DataCount">
			<summary>Holds the number of data events currently queued by the service object.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PinPad.DataEventEnabled">
			<summary>When set to true by the application, the service object can deliver the next queued <see cref="DataEvent"></see> event.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PinPad.EncryptedPin">
			<summary>Holds the value of the encrypted PIN after the <see cref="DataEvent"></see> event notifies the application that a PIN entry operation has been completed.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PinPad.IsExclusiveUseDevice">
			<summary>Indicates whether the <see cref="T:Microsoft.PointOfService.PinPad"></see> is an exclusive-use device.</summary>
			<returns>A value of true indicates that the <see cref="T:Microsoft.PointOfService.PinPad"></see> is exclusive-use. Otherwise, the value will be false.</returns>
		</member>
		<member name="P:Microsoft.PointOfService.PinPad.MaximumPinLength">
			<summary>Holds the maximum acceptable number of digits to be entered for the PIN.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PinPad.MerchantId">
			<summary>Holds the Merchant ID, as it is known to the EFT Transaction Host.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PinPad.MinimumPinLength">
			<summary>Holds the minimum acceptable number of digits to be entered for a PIN.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PinPad.PinEntryEnabled">
			<summary>Indicates whether the PinPad is ready to accept PIN entry.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PinPad.Prompt">
			<summary>Holds a pre-defined message to be displayed on the PIN Pad.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PinPad.PromptLanguage">
			<summary>Specifies the language in which the message specified by the <see cref="Prompt"></see> property will be displayed, as defined by the <see cref="CultureInfo"></see> .NET Framework class. </summary>
		</member>
		<member name="P:Microsoft.PointOfService.PinPad.TerminalId">
			<summary>Holds the Terminal ID, as it is known to the EFT Transaction Host.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PinPad.Track1Data">
			<summary>Holds either the decoded Track 1 data from the previous card swipe or an empty string.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PinPad.Track2Data">
			<summary>Holds either the decoded Track 2 data from the previous card swipe or an empty string.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PinPad.Track3Data">
			<summary>Holds either the decoded Track 3 data from the previous card swipe or an empty string.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PinPad.Track4Data">
			<summary>Holds either the decoded Track 4 data from the previous card swipe or an empty string.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PinPad.TransactionType">
			<summary>Holds the current EFT transaction type.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.PinPadDisplay">
			<summary>Lists the possible ways in which an application can use the PIN pad’s display.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PinPadDisplay.None">
			<summary>The PIN pad device in use does not have a display.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PinPadDisplay.PinRestricted">
			<summary>The application can use the PIN pad’s display in an unrestricted manner except during PIN entry.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PinPadDisplay.RestrictedList">
			<summary>The application cannot specify the text of messages to display; it can only select from a list of pre-defined messages.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PinPadDisplay.RestrictedOrder">
			<summary>The application cannot specify the text of messages to display; it can only select from a list of pre-defined messages, and the selections must occur in a pre-defined order.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PinPadDisplay.Unrestricted">
			<summary>The application can use the PIN pad’s display in an unrestricted manner to display messages.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.PinPadLanguage">
			<summary>Lists language characteristics for predefined prompt messages of the PIN pad device.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PinPadLanguage.None">
			<summary>The PIN pad supports no pre-defined prompt messages.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PinPadLanguage.One">
			<summary>The PIN pad supports pre-defined prompt messages in one language.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PinPadLanguage.PinRestricted">
			<summary>The PIN Pad cannot change prompt languages during PIN entry.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PinPadLanguage.Unrestricted">
			<summary>The application can change the language of pre-defined prompt messages at any time.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.PinPadMessage">
			<summary>Lists the possible prompt messages for the PIN pad device. </summary>
		</member>
		<member name="F:Microsoft.PointOfService.PinPadMessage.AmountOK">
			<summary>The customer should enter Yes/No to approve the amount.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PinPadMessage.Approved">
			<summary>The request has been approved.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PinPadMessage.Canceled">
			<summary>The request is canceled.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PinPadMessage.Declined">
			<summary>The EFT Transaction Host has declined to perform the requested function.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PinPadMessage.EnterPin">
			<summary>The user should enter his PIN on the PIN pad.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PinPadMessage.EnterValidPin">
			<summary>The PIN that was entered is not correct. The user should enter the correct PIN.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PinPadMessage.Idle">
			<summary>The system is Idle.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PinPadMessage.InsertCard">
			<summary>The customer should insert their (smart)card.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PinPadMessage.NotReady">
			<summary>The PIN pad is not ready for use by customer.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PinPadMessage.PleaseWait">
			<summary>The system is processing. The user should wait.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PinPadMessage.RetriesExceeded">
			<summary>The user has failed to enter the correct PIN and the maximum number of attempts has been exceeded.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PinPadMessage.SelectCardType">
			<summary>The customer should select the card type (typically credit or debit).</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PinPadMessage.SlideCard">
			<summary>The user should slide their card through the integrated magnetic strip reader (MSR).</summary>
		</member>
		<member name="T:Microsoft.PointOfService.PinPadSystem">
			<summary>Enumerates the possible PIN pad management systems to use.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PinPadSystem.Apacs40">
			<summary>Standard 40 (UK and other countries/regions)</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PinPadSystem.AS2805">
			<summary>Australian Standard 2805</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PinPadSystem.Dukpt">
			<summary>Derived Unique Key Per Transaction (USA, Latin America)</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PinPadSystem.Hgepos">
			<summary>(Italian)</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PinPadSystem.Jdebit2">
			<summary>Japanese Debit 2</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PinPadSystem.MasterSession">
			<summary>Master/Session. (USA, Latin America)</summary>
		</member>
		<member name="T:Microsoft.PointOfService.PointCardAreas">
			<summary>Lists the valid parts of the point card that can be cleared.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PointCardAreas.MagneticTracks">
			<summary>Magnetic tracks</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PointCardAreas.PrintingArea">
			<summary>Printing area</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PointCardAreas.PrintingAreaAndMagneticTracks">
			<summary>Both printing area and magnetic tracks</summary>
		</member>
		<member name="T:Microsoft.PointOfService.PointCardReadWriteState">
			<summary>Lists valid track states for a Point Card Reader Writer.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PointCardReadWriteState.Encode">
			<summary>No encoding</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PointCardReadWriteState.End">
			<summary>End sentinel error</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PointCardReadWriteState.Failure">
			<summary>Another error</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PointCardReadWriteState.LrcError">
			<summary>LRC error</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PointCardReadWriteState.Parity">
			<summary>Parity error</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PointCardReadWriteState.Start">
			<summary>Start sentinel error</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PointCardReadWriteState.Success">
			<summary>Successful read of the data</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PointCardReadWriteState.Verify">
			<summary>Verify error</summary>
		</member>
		<member name="T:Microsoft.PointOfService.PointCardReadWriteStates">
			<summary>Defines a programmatic structure used by the service object to communicate write or read state information for a Point Card Reader Writer device during an error condition.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.PointCardReadWriteStates.#ctor(Microsoft.PointOfService.PointCardReadWriteState,Microsoft.PointOfService.PointCardReadWriteState,Microsoft.PointOfService.PointCardReadWriteState,Microsoft.PointOfService.PointCardReadWriteState,Microsoft.PointOfService.PointCardReadWriteState,Microsoft.PointOfService.PointCardReadWriteState)">
			<summary>Creates a new instance of <see cref="PointCardReadWriteStates"></see> from parameters specifying the instance's constituent parts.</summary>
			<param name="track5">A <see cref="PointCardReadWriteState"></see> enumeration value.</param>
			<param name="track4">A <see cref="PointCardReadWriteState"></see> enumeration value.</param>
			<param name="track6">A <see cref="PointCardReadWriteState"></see> enumeration value.</param>
			<param name="track1">A <see cref="PointCardReadWriteState"></see> enumeration value.</param>
			<param name="track3">A <see cref="PointCardReadWriteState"></see> enumeration value.</param>
			<param name="track2">A <see cref="PointCardReadWriteState"></see> enumeration value.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PointCardReadWriteStates.Equals(System.Object)">
			<summary>Determines whether the specified Object is equal to the current PointCardReadWriteStates.</summary>
			<returns>True if the specified object is equal to the current PointCardReadWriteStates; otherwise, false.</returns>
			<param name="o">The object to be compared with the current PointCardReadWriteStates.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PointCardReadWriteStates.Equals(Microsoft.PointOfService.PointCardReadWriteStates)">
			<summary>Determines whether the specified PointCardReadWriteStates is equal to the current PointCardReadWriteStates.</summary>
			<returns>True if the specified PointCardReadWriteStates is equal to the current PointCardReadWriteStates; otherwise, false.</returns>
			<param name="states">The PointCardReadWriteStates to be compared with the current PointCardReadWriteStates</param>
		</member>
		<member name="M:Microsoft.PointOfService.PointCardReadWriteStates.Equals(Microsoft.PointOfService.PointCardReadWriteStates,Microsoft.PointOfService.PointCardReadWriteStates)">
			<summary>Determines whether the specified PointCardReadWriteStates instances are equal.</summary>
			<returns>True if a is equal to b; otherwise, false.</returns>
			<param name="a">The first PointCardReadWriteStates instance</param>
			<param name="b">The second PointCardReadWriteStates instance</param>
		</member>
		<member name="M:Microsoft.PointOfService.PointCardReadWriteStates.GetHashCode">
			<summary>Returns the hash code of the current PointCardReadWriteStates.</summary>
			<returns>Int32 representation of the hash code for the current PointCardReadWriteStates.</returns>
		</member>
		<member name="M:Microsoft.PointOfService.PointCardReadWriteStates.op_Equality(Microsoft.PointOfService.PointCardReadWriteStates,System.Object)">
			<summary>Compares the specified PointCardReadWriteStates and object to determine whether they are equal.</summary>
			<returns>True if a is equal to b; otherwise, false.</returns>
			<param name="a">The PointCardReadWriteStates to be compared to b</param>
			<param name="b">The object to be compared to a</param>
		</member>
		<member name="M:Microsoft.PointOfService.PointCardReadWriteStates.op_Inequality(Microsoft.PointOfService.PointCardReadWriteStates,System.Object)">
			<summary>Returns a value indicating whether an instance of <see cref="PointCardReadWriteStates"></see> and an object are not equal.</summary>
			<returns>True if a is not equal to b; otherwise, false.</returns>
			<param name="a">The PointCardReadWriteStates to be compared to b</param>
			<param name="b">The object to be compared to a</param>
		</member>
		<member name="T:Microsoft.PointOfService.PointCardReceiveLengths">
			<summary>Defines a programmatic structure used by the service object to communicate the length of track data for a Point Card Reader Writer device.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.PointCardReceiveLengths.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
			<summary>Creates an instance of <see cref="PointCardReceiveLengths"></see> with the specified data tracks.</summary>
			<param name="track5">The fifth data track's length in bytes.</param>
			<param name="track4">The fourth data track's length in bytes.</param>
			<param name="track6">The sixth data track's length in bytes.</param>
			<param name="track1">The first data track's length in bytes.</param>
			<param name="track3">The third data track's length in bytes.</param>
			<param name="track2">The second data track's length in bytes.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PointCardReceiveLengths.Equals(System.Object)">
			<summary>Determines whether the specified object is equal to the current <see cref="T:Microsoft.PointOfService.PointCardReceiveLengths"></see>.</summary>
			<returns>A boolean value that is true if the specified object is equal to the current <see cref="T:Microsoft.PointOfService.PointCardReceiveLengths"></see> and false otherwise.</returns>
			<param name="o">The object to be compared with the current <see cref="T:Microsoft.PointOfService.PointCardReceiveLengths"></see>.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PointCardReceiveLengths.Equals(Microsoft.PointOfService.PointCardReceiveLengths)">
			<summary>Determines whether the specified <see cref="T:Microsoft.PointOfService.PointCardReceiveLengths"></see> is equal to the current <see cref="T:Microsoft.PointOfService.PointCardReceiveLengths"></see>.</summary>
			<returns>A boolean value that is true if the specified <see cref="T:Microsoft.PointOfService.PointCardReceiveLengths"></see> is equal to the current <see cref="T:Microsoft.PointOfService.PointCardReceiveLengths"></see> and false otherwise.</returns>
			<param name="lengths">The <see cref="T:Microsoft.PointOfService.PointCardReceiveLengths"></see> to be compared with the current <see cref="T:Microsoft.PointOfService.PointCardReceiveLengths"></see></param>
		</member>
		<member name="M:Microsoft.PointOfService.PointCardReceiveLengths.Equals(Microsoft.PointOfService.PointCardReceiveLengths,Microsoft.PointOfService.PointCardReceiveLengths)">
			<summary>Determines whether the specified <see cref="T:Microsoft.PointOfService.PointCardReceiveLengths"></see> instances are equal.</summary>
			<returns>A boolean value indicating whether the specified instances are equal. The boolean is true if a is equal to b; otherwise, it is false.</returns>
			<param name="a">The first <see cref="T:Microsoft.PointOfService.PointCardReceiveLengths"></see> instance</param>
			<param name="b">The second <see cref="T:Microsoft.PointOfService.PointCardReceiveLengths"></see> instance</param>
		</member>
		<member name="M:Microsoft.PointOfService.PointCardReceiveLengths.GetHashCode">
			<summary>Returns the hash code of the current <see cref="T:Microsoft.PointOfService.PointCardReceiveLengths"></see>.</summary>
			<returns>An integer representation of the hash code for the current <see cref="T:Microsoft.PointOfService.PointCardReceiveLengths"></see>.</returns>
		</member>
		<member name="M:Microsoft.PointOfService.PointCardReceiveLengths.op_Equality(Microsoft.PointOfService.PointCardReceiveLengths,System.Object)">
			<summary>Compares the specified <see cref="T:Microsoft.PointOfService.PointCardReceiveLengths"></see> and object to determine whether they are equal.</summary>
			<returns>A boolean indicating whether a and b are equal. The boolean is true if a is equal to b; otherwise, it is false.</returns>
			<param name="a">The <see cref="T:Microsoft.PointOfService.PointCardReceiveLengths"></see> to be compared to b</param>
			<param name="b">The object to be compared to a</param>
		</member>
		<member name="M:Microsoft.PointOfService.PointCardReceiveLengths.op_Inequality(Microsoft.PointOfService.PointCardReceiveLengths,System.Object)">
			<summary>Returns a value indicating whether an instance of <see cref="PointCardReceiveLengths"></see> and an object are not equal.</summary>
			<returns>A boolean value indicating whether a and b are unequal. The boolean is true if a is not equal to b; otherwise, false.</returns>
			<param name="a">The PointCardReceiveLengths to be compared to b</param>
			<param name="b">The object to be compared to a</param>
		</member>
		<member name="P:Microsoft.PointOfService.PointCardReceiveLengths.Track1">
			<summary>Holds the length in bytes for Track 1.</summary>
			<returns>An integer representing the length of data track 1.</returns>
		</member>
		<member name="P:Microsoft.PointOfService.PointCardReceiveLengths.Track2">
			<summary>Holds the length in bytes for Track 2.</summary>
			<returns>An integer representing the length of data track 2.</returns>
		</member>
		<member name="P:Microsoft.PointOfService.PointCardReceiveLengths.Track3">
			<summary>Holds the length in bytes for Track 3.</summary>
			<returns>An integer representing the length of data track 3.</returns>
		</member>
		<member name="P:Microsoft.PointOfService.PointCardReceiveLengths.Track4">
			<summary>Holds the length in bytes for Track 4.</summary>
			<returns>An integer representing the length of data track 4.</returns>
		</member>
		<member name="P:Microsoft.PointOfService.PointCardReceiveLengths.Track5">
			<summary>Holds the length in bytes for Track 5.</summary>
			<returns>An integer representing the length of data track 5.</returns>
		</member>
		<member name="P:Microsoft.PointOfService.PointCardReceiveLengths.Track6">
			<summary>Holds the length in bytes for Track 6.</summary>
			<returns>An integer representing the length of data track 6.</returns>
		</member>
		<member name="T:Microsoft.PointOfService.PointCardRW">
			<summary>Defines the programmatic interface for a UPOS Point Card Reader/Writer device.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.PointCardRW.#ctor">
			<summary>Creates an instance of the <see cref="PointCardRW"></see> class.</summary>
		</member>
		<member name="E:Microsoft.PointOfService.PointCardRW.DataEvent">
			<summary>Raised by the service object to notify the application that input data is available from the device.</summary>
		</member>
		<member name="E:Microsoft.PointOfService.PointCardRW.ErrorEvent">
			<summary>Raised by the service object to notify the application that a point card error has been detected and a suitable response by the application is necessary to process the error condition.</summary>
		</member>
		<member name="E:Microsoft.PointOfService.PointCardRW.OutputCompleteEvent">
			<summary>Raised by the service object to notify the application that the queued output request associated with the <see cref="OutputId"></see> property has completed successfully.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PointCardRW.CharacterSetAnsi">
			<summary>The ANSI character set.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PointCardRW.CharacterSetAscii">
			<summary>The ASCII character set, supporting the ASCII characters between 0x20 and 0x7F.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PointCardRW.CharacterSetUnicode">
			<summary>The character set supports Unicode.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PointCardRW.ExtendedErrorCover">
			<summary>Indicates the conveyance motor cover is open.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PointCardRW.ExtendedErrorDisplay">
			<summary>Indicates a display indicator error.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PointCardRW.ExtendedErrorJam">
			<summary>Indicates a card jam.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PointCardRW.ExtendedErrorMotor">
			<summary>Indicates a conveyance motor error.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PointCardRW.ExtendedErrorNoCard">
			<summary>Indicates there is no card in the reader.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PointCardRW.ExtendedErrorPrinter">
			<summary>Indicates a printer error.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PointCardRW.ExtendedErrorRead">
			<summary>Indicates a read error.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PointCardRW.ExtendedErrorRelease">
			<summary>Indicates a card jam.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PointCardRW.ExtendedErrorWrite">
			<summary>Indicates a write error.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PointCardRW.StatusInserted">
			<summary>Indicates a card is in the device.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PointCardRW.StatusNoCard">
			<summary>Indicates no card is in the device, or the card sensor position is indeterminate.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PointCardRW.StatusRemaining">
			<summary>Indicates a card remains in the entrance.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.PointCardRW.BeginInsertion(System.Int32)">
			<summary>Starts point card processing.</summary>
			<param name="timeout">The timeout parameter gives the number of milliseconds before failing the method. If zero, <see cref="BeginInsertion"></see> tries to begin insertion mode, then returns the appropriate status immediately. If <see cref="WaitForever"></see>, <see cref="BeginInsertion"></see> tries to begin insertion mode, then waits as long as needed until the point card is inserted or an error occurs.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PointCardRW.BeginRemoval(System.Int32)">
			<summary>Starts point card removal processing.</summary>
			<param name="timeout">Gives the number of milliseconds before failing the method. If zero, the <see cref="BeginRemoval"></see> method tries to begin removal mode, then returns the appropriate status immediately. If <see cref="WaitForever"></see>, <see cref="BeginRemoval"></see> tries to begin the Removal mode, then waits as long as needed until the point card is ejected or an error occurs.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PointCardRW.CleanCard">
			<summary>Cleans the read/write heads of the point card reader/writer.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.PointCardRW.ClearInput">
			<summary>Clears all buffered device input.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.PointCardRW.ClearInputProperties">
			<summary>Resets the values of properties altered by <see cref="E:Microsoft.PointOfService.PointCardRW.DataEvent"></see> or <see cref="E:Microsoft.PointOfService.PointCardRW.ErrorEvent"></see>.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.PointCardRW.ClearOutput">
			<summary>Clears all buffered output data. This includes all asynchronous output.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.PointCardRW.ClearPrintWrite(Microsoft.PointOfService.PointCardAreas,System.Int32,System.Int32,System.Int32,System.Int32)">
			<summary>Erases the printing area of a point card and erases the magnetic track data on a point card or erases the magnetic track data on a point card.</summary>
			<param name="verticalPosition">The vertical start position for erasing the printing area. The value is in <see cref="MapMode"></see> units if <see cref="CapPrintMode"></see> is true.</param>
			<param name="width">The width used for erasing the printing area. The value is in <see cref="MapMode"></see> units if <see cref="CapPrintMode"></see> is true.</param>
			<param name="horizontalPosition">The horizontal start position for erasing the printing area. The value is in <see cref="MapMode"></see> units if <see cref="CapPrintMode"></see> is true.</param>
			<param name="height">The height used for erasing the printing area. The value is in <see cref="MapMode"></see> units if <see cref="CapPrintMode"></see> is true.</param>
			<param name="kind">Defines the parts of the point card that will be cleared (erased).1: PrintingArea2: MagneticTracks3: PrintingAreaAndMagneticTracks</param>
		</member>
		<member name="M:Microsoft.PointOfService.PointCardRW.EndInsertion">
			<summary>Ends point card insertion processing.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.PointCardRW.EndRemoval">
			<summary>Ends point card removal processing.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.PointCardRW.PrintWrite(Microsoft.PointOfService.PointCardAreas,System.Int32,System.Int32,System.String)">
			<summary>Prints the specified data on the printing area of the point card, writes data from the <see cref="WriteXData"></see> properties to the magnetic tracks, or both.</summary>
			<param name="verticalPosition">The vertical start position for printing. The value is in <see cref="MapMode"></see> units if <see cref="CapPrintMode"></see> is true.</param>
			<param name="data">The data to print. Any escape sequences in the data depends on the capabilities of the device.</param>
			<param name="horizontalPosition">The horizontal start position for printing. The value is in <see cref="MapMode"></see> units if <see cref="CapPrintMode"></see> is true.</param>
			<param name="kind">Designates the effect of the point card.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PointCardRW.RotatePrint(Microsoft.PointOfService.Rotation)">
			<summary>Enters or exits rotated print mode.</summary>
			<param name="rotation">Direction of rotation.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PointCardRW.ValidateData(System.String)">
			<summary>Determines whether a data sequence, possibly including one or more escape sequences, is valid for the specified station, before it calls the <see cref="PrintWrite"></see> method.</summary>
			<param name="data">The data to validate. May include printable data and escape sequences.</param>
		</member>
		<member name="P:Microsoft.PointOfService.PointCardRW.CapBold">
			<summary>Gets a Boolean value that indicates whether the device can print bold characters.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PointCardRW.CapCardEntranceSensor">
			<summary>Gets a Boolean value that indicates whether the device has an entrance sensor.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PointCardRW.CapCharacterSet">
			<summary>Gets the default character set capability.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PointCardRW.CapCleanCard">
			<summary>Gets a Boolean value that indicates whether the device supports cleaning under application control.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PointCardRW.CapClearPrint">
			<summary>Gets a Boolean value that indicates whether the device can erase the printing area.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PointCardRW.CapDHigh">
			<summary>Gets a Boolean value that indicates whether the device can print double-high characters.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PointCardRW.CapDWide">
			<summary>Gets a Boolean value that indicates whether the device can print double-wide characters.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PointCardRW.CapDWideDHigh">
			<summary>Gets a Boolean value that indicates whether the device can print double-high/double-width characters.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PointCardRW.CapItalic">
			<summary>Gets a Boolean value that indicates whether the device can print italic characters.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PointCardRW.CapLeft90">
			<summary>Gets a Boolean value that indicates whether the device can print in rotated-90-degree-left mode.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PointCardRW.CapMapCharacterSet">
			<summary>Gets a Boolean value that indicates whether the service object can map </summary>
		</member>
		<member name="P:Microsoft.PointOfService.PointCardRW.CapPrint">
			<summary>Gets a Boolean value that indicates whether the device has printing capability.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PointCardRW.CapPrintMode">
			<summary>Gets a Boolean value that indicates whether the device can designate a starting position with the <see cref="MapMode"></see> property.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PointCardRW.CapRight90">
			<summary>Gets a Boolean value that indicates the device can print in a rotated-90 degree-right mode.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PointCardRW.CapRotate180">
			<summary>Gets a Boolean value that indicates the device can print in a rotated upside-down mode.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PointCardRW.CapTracksToRead">
			<summary>Gets a bitmask that indicates which magnetic tracks are available.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PointCardRW.CapTracksToWrite">
			<summary>Gets a bitmask that indicates which tracks are writable on the point card.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PointCardRW.CardState">
			<summary>Gets the point card state.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PointCardRW.CharacterSet">
			<summary>Gets or sets the character set for printing characters.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PointCardRW.CharacterSetList">
			<summary>Gets a string of character set numbers.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PointCardRW.DataCount">
			<summary>Gets the number of currently queued data events.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PointCardRW.DataEventEnabled">
			<summary>Gets or sets a Boolean value that indicates whether a <see cref="DataEvent"></see> event is delivered when input data is queued.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PointCardRW.FontTypefaceList">
			<summary>Gets the fonts and typefaces supported by the point card reader/writer.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PointCardRW.IsExclusiveUseDevice">
			<summary>Gets a Boolean value that indicates whether the <see cref="T:Microsoft.PointOfService.PointCardRW"></see> is an exclusive-use device.</summary>
			<returns>A value of true indicates that the <see cref="T:Microsoft.PointOfService.PointCardRW"></see> device is exclusive-use. Otherwise, the value will be false.</returns>
		</member>
		<member name="P:Microsoft.PointOfService.PointCardRW.LineChars">
			<summary>Gets or sets the number of characters that can be printed on a line on the point card reader/writer.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PointCardRW.LineCharsList">
			<summary>Gets the line character widths supported by the point card reader/writer.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PointCardRW.LineHeight">
			<summary>Gets or sets the point card reader/writer print line height.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PointCardRW.LineSpacing">
			<summary>Gets or sets the spacing of each single-high print line. This includes both the printed line height plus the white space between each pair of lines.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PointCardRW.LineWidth">
			<summary>Gets the width of a line of <see cref="LineChars"></see> characters.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PointCardRW.MapCharacterSet">
			<summary>Gets or sets a Boolean value that indicates whether characters are mapped from the application to the set specified in the <see cref="CharacterSet"></see><see cref="property."></see></summary>
		</member>
		<member name="P:Microsoft.PointOfService.PointCardRW.MapMode">
			<summary>Gets or sets the mapping mode of the point card reader/writer.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PointCardRW.MaxLine">
			<summary>Gets the maximum printable line number.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PointCardRW.OutputId">
			<summary>Gets a unique output request ID.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PointCardRW.PrintHeight">
			<summary>Gets the height of the largest character in a character set.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PointCardRW.ReadState">
			<summary>Gets read state information for Track1 through Track6. </summary>
		</member>
		<member name="P:Microsoft.PointOfService.PointCardRW.RecvLength">
			<summary>Gets length information for Track1 through Track6.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PointCardRW.SidewaysMaxChars">
			<summary>Gets the maximum number of characters that can be printed on each line in sideways mode.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PointCardRW.SidewaysMaxLines">
			<summary>Gets the maximum number of lines that can be printed in sideways mode.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PointCardRW.Track1Data">
			<summary>Gets the Track1 data from the point card.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PointCardRW.Track2Data">
			<summary>Gets the Track2 data from the point card.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PointCardRW.Track3Data">
			<summary>Gets the Track3 data from the point card.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PointCardRW.Track4Data">
			<summary>Gets the Track4 data from the point card.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PointCardRW.Track5Data">
			<summary>Gets the Track5 data from the point card.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PointCardRW.Track6Data">
			<summary>Gets the Track6 data from the point card.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PointCardRW.TracksToRead">
			<summary>Gets or sets the tracks to read from the point card.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PointCardRW.TracksToWrite">
			<summary>Gets or sets the tracks to write to the point card.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PointCardRW.Write1Data">
			<summary>Gets or sets the data <see cref="PrintWrite"></see> uses to write to Track1.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PointCardRW.Write2Data">
			<summary>Gets or sets the data <see cref="PrintWrite"></see> uses to write to Track2.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PointCardRW.Write3Data">
			<summary>Gets or sets the data <see cref="PrintWrite"></see> uses to write to Track3.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PointCardRW.Write4Data">
			<summary>Gets or sets the data <see cref="PrintWrite"></see> uses to write to Track4.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PointCardRW.Write5Data">
			<summary>Gets or sets the data <see cref="PrintWrite"></see> uses to write to Track5.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PointCardRW.Write6Data">
			<summary>Gets or sets the data <see cref="PrintWrite"></see> uses to write to Track6.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PointCardRW.WriteState">
			<summary>Gets write state information for Track1 through Track6.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.PointCardRWTracks">
			<summary>Enumerates the possible tracks to read from or write to.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PointCardRWTracks.Track1">
			<summary>Track 1</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PointCardRWTracks.Track2">
			<summary>Track 2</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PointCardRWTracks.Track3">
			<summary>Track 3</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PointCardRWTracks.Track4">
			<summary>Track 4</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PointCardRWTracks.Track5">
			<summary>Track 5</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PointCardRWTracks.Track6">
			<summary>Track 6</summary>
		</member>
		<member name="T:Microsoft.PointOfService.PointCardState">
			<summary>Enumerates the possible card states the point card device can be in.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PointCardState.Inserted">
			<summary>There is a card in the device.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PointCardState.NoCard">
			<summary>No card or card sensor position indeterminate.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PointCardState.Remaining">
			<summary>There is a card remaining in an entrance.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.PosAssemblyAttribute">
			<summary>Defines an assembly attribute that can be attached as metadata to a .dll, identifying that assembly as a POS for .NET service object.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.PosAssemblyAttribute.#ctor(System.String)">
			<summary>Creates an instance of the <see cref="PosAssemblyAttribute"></see> class with the specified manufacturer name.</summary>
			<param name="manufacturerName">Manufacturer name.</param>
		</member>
		<member name="T:Microsoft.PointOfService.PosCommon">
			<summary>Defines the programmatic interface for constants, properties, methods, and events common to all UPOS devices.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.PosCommon.#ctor">
			<summary>Creates an instance of the <see cref="PosCommon"></see> class.</summary>
		</member>
		<member name="E:Microsoft.PointOfService.PosCommon.DirectIOEvent">
			<summary>Raised by the Service Object to communicate information directly to the application.</summary>
		</member>
		<member name="E:Microsoft.PointOfService.PosCommon.StatusUpdateEvent">
			<summary>Raised by the Service Object to alert the application of a device status change.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosCommon.ExtendedErrorFirmwareBadFile">
			<summary>Indicates the specified firmware file or files exist, but one or more of those files are either not in the correct format or are corrupted.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosCommon.ExtendedErrorStatistics">
			<summary>Indicates a specified statistic could not be reset or updated.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosCommon.StatisticCommunicationErrorCount">
			<summary>Holds the programmatic name of the Communication Error Count common statistic.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosCommon.StatisticDeviceCategory">
			<summary>Holds the programmatic name of the Device Category common statistic.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosCommon.StatisticFirmwareRevision">
			<summary>Holds the programmatic name of the Firmware Revision common statistic.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosCommon.StatisticHoursPoweredCount">
			<summary>Holds the programmatic name of the Hours Powered On common statistic.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosCommon.StatisticInstallationDate">
			<summary>Holds the programmatic name of the Installation Date common statistic.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosCommon.StatisticInterface">
			<summary>Holds the programmatic name of the Interface common statistic.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosCommon.StatisticManufactureDate">
			<summary>Holds the programmatic name of the Manufacture Date common statistic.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosCommon.StatisticManufacturerName">
			<summary>Holds the programmatic name of the Manufacturer Name common statistic.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosCommon.StatisticMechanicalRevision">
			<summary>Holds the programmatic name of the Mechanical Revision common statistic.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosCommon.StatisticModelName">
			<summary>Holds the programmatic name of the Model Name common statistic.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosCommon.StatisticSerialNumber">
			<summary>Holds the programmatic name of the Serial Number common statistic.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosCommon.StatisticUnifiedPOSVersion">
			<summary>Holds the programmatic name of the Unified POS Version common statistic.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosCommon.StatusPowerOff">
			<summary>Indicates that the device’s power is turned off or it is detached from the terminal.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosCommon.StatusPowerOffline">
			<summary>Indicates that the device is powered on but is either not ready or unable to respond to requests.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosCommon.StatusPowerOffOffline">
			<summary>Indicates that either the device’s power is off or it is offline.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosCommon.StatusPowerOnline">
			<summary>Indicates that the device’s power is turned on and it is ready for use.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosCommon.StatusUpdateFirmwareComplete">
			<summary>Indicates the update firmware process has completed successfully.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosCommon.StatusUpdateFirmwareCompleteDeviceNotRestored">
			<summary>Indicates the update firmware process succeeded. However, the Service Object and/or the physical device cannot be returned to the state they were in before the update firmware process started. </summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosCommon.StatusUpdateFirmwareFailedDeviceNeedsFirmware">
			<summary>Indicates the update firmware process failed. The device will not be operational until another attempt to update the firmware is successful.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosCommon.StatusUpdateFirmwareFailedDeviceOk">
			<summary>Indicates the update firmware process failed. However, the device is still operational.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosCommon.StatusUpdateFirmwareFailedDeviceUnknown">
			<summary>Indicates the update firmware process failed. The device is in an indeterminate state.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosCommon.StatusUpdateFirmwareFailedDeviceUnrecoverable">
			<summary>Indicates the update firmware process failed. The device is either unusable or unrecoverable through software.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosCommon.StatusUpdateFirmwareProgress">
			<summary>Indicates the update firmware process has completed 1 to 100 percent successfully.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosCommon.WaitForever">
			<summary>Used as the value for a timeout parameter in common and device-specific methods to indicate the method should wait until it receives a response, instead of timing out.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.PosCommon.CheckHealth(Microsoft.PointOfService.HealthCheckLevel)">
			<summary>Tests the state of a device.</summary>
			<param name="level">Indicates the type of health check to be performed on the device. Possible values are defined by the <see cref="HealthCheckLevel"></see> enumeration.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PosCommon.Claim(System.Int32)">
			<summary>Requests exclusive access to the device.</summary>
			<param name="timeout">Contains the maximum number of milliseconds to wait for exclusive access to be satisfied.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PosCommon.Close">
			<summary>Releases the device and its resources.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.PosCommon.CompareFirmwareVersion(System.String)">
			<summary>Determines whether the version of the specified firmware is newer than, older than, or the same as the version of firmware in the physical device.</summary>
			<param name="firmwareFileName">The name of the file that contains the firmware, or the name of a file that contains a list of firmware files.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PosCommon.DeleteConfigurationProperty(System.String)">
			<summary>Deletes the specified property from the XML configuration file.</summary>
			<param name="propertyName">Contains the name of the property the Service Object wants to delete from the configuration XML file.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PosCommon.DirectIO(System.Int32,System.Int32,System.Object)">
			<summary>Used to communicate directly with the Service Object.</summary>
			<param name="Obj">Additional data supplied by the Service Object. Specific values vary by command and by what the Service Object chooses to transmit.</param>
			<param name="Data">Additional numeric data. Specific values vary by command and the Service Object.</param>
			<param name="command">Command number. Specific values assigned by the Service Object.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PosCommon.GetConfigurationProperty(System.String)">
			<summary>Used by the Service Object to retrieve the specified property from the XML configuration file.</summary>
			<param name="propertyName">Contains the name of the property the Service Object wants to retrieve from the configuration XML file.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PosCommon.Invoke(System.Delegate,System.Object[])">
			<summary>Used by the Service Objects to raise an event.</summary>
			<param name="args">Object array of the arguments taken by the delegate.</param>
			<param name="method">Name of the event delegate.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PosCommon.Open">
			<summary>Opens a device for later input/output processing.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.PosCommon.Release">
			<summary>Releases exclusive access to the device.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.PosCommon.ResetStatistic(System.String)">
			<summary>Resets the specified statistic to 0 (zero).</summary>
			<param name="statistic">Specifies the statistic that is to be reset.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PosCommon.ResetStatistics">
			<summary>Resets all statistics associated with a device to 0 (zero).</summary>
		</member>
		<member name="M:Microsoft.PointOfService.PosCommon.ResetStatistics(Microsoft.PointOfService.StatisticCategories)">
			<summary>Resets all statistics for a specified category to 0 (zero).</summary>
			<param name="statistics">Contains the category of statistics the application wishes to reset for the device. Possible categories are defined by the <see cref="StatisticsCategories"></see> enumeration.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PosCommon.ResetStatistics(System.String[])">
			<summary>Resets the specified statistics to 0 (zero).</summary>
			<param name="statistics">Contains an array of statistic names to be reset.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PosCommon.RetrieveStatistic(System.String)">
			<summary>Retrieves the specified device statistic.</summary>
			<param name="Statistic">Specifies the statistic to be retrieved.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PosCommon.RetrieveStatistics">
			<summary>Retrieves all device statistics.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.PosCommon.RetrieveStatistics(Microsoft.PointOfService.StatisticCategories)">
			<summary>Retrieves the statistics for the specified category.</summary>
			<param name="Statistics">Contains the category of statistics the application wishes to retrieve. Possible values are defined by the <see cref="StatisticsCategories"></see> enumeration.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PosCommon.RetrieveStatistics(System.String[])">
			<summary>Retrieves the specified statistics.</summary>
			<param name="Statistics">Contains an array of statistic names to retrieve.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PosCommon.SetConfigurationProperty(System.String,System.String)">
			<summary>Sets a property value (or create a new property) in the XML configuration file.</summary>
			<param name="Data">Contains the value to which the property should be set.</param>
			<param name="propertyName">Contains the name of the property the Service Object wants to set in the configuration XML file.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PosCommon.UpdateFirmware(System.String)">
			<summary>Updates the firmware of a device with the version of the firmware contained or defined in the file specified by the firmwareFileName parameter regardless of whether that firmware’s version is newer than, older than, or the same as the version of the firmware already in the device.</summary>
			<param name="firmwareFileName">Specifies either the name of the file that contains the firmware or a file that contains a set of firmware files that are to be downloaded into the device.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PosCommon.UpdateStatistic(System.String,System.Object)">
			<summary>Updates the value of a specified device statistic.</summary>
			<param name="Value">Value to which the statistic should be set.</param>
			<param name="Name">Name of the statistic to be updated.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PosCommon.UpdateStatistics(Microsoft.PointOfService.Statistic[])">
			<summary>Updates a list of statistics with the corresponding specified values.</summary>
			<param name="statistics">Contains an array of <see cref="Statistic"></see> class instances (name-value pairs) that contain the names and values of the statistics to be updated.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PosCommon.UpdateStatistics(Microsoft.PointOfService.StatisticCategories,System.Object)">
			<summary>Updates the specified category of statistics with the specified value.</summary>
			<param name="Value">Contains the value to be used to update the statistics in the specified category.</param>
			<param name="statistics">Contains the category of statistics the application wishes to update. Possible categories are defined by the <see cref="StatisticsCategories"></see> enumeration.</param>
		</member>
		<member name="P:Microsoft.PointOfService.PosCommon.CapCompareFirmwareVersion">
			<summary>Gets a Boolean value that indicates whether the Service Object/device supports comparing the firmware version in the physical device against that of a firmware file.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosCommon.CapPowerReporting">
			<summary>Gets the power reporting capabilities of the device.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosCommon.CapStatisticsReporting">
			<summary>Gets a Boolean value that indicates whether the device can accumulate and can provide various statistics regarding usage.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosCommon.CapUpdateFirmware">
			<summary>Gets a Boolean value that indicates whether the device's firmware can be updated through the UpdateFirmware method.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosCommon.CapUpdateStatistics">
			<summary>Gets a Boolean value that indicates whether some or all the device statistics can be reset to 0 (zero) by using the <see cref="ResetStatistic"></see> and <see cref="ResetStatistics"></see> methods, or updated by using the <see cref="UpdateStatistic"></see> and <see cref="UpdateStatistics"></see> methods.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosCommon.CheckHealthText">
			<summary>Gets a string that indicates the health of the device.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosCommon.Claimed">
			<summary>Gets a Boolean value that indicates whether the device is claimed for exclusive access. </summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosCommon.DeviceDescription">
			<summary>Gets a string identifying the device and the company that manufactured it.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosCommon.DeviceEnabled">
			<summary>Gets or sets a Boolean value that indicates whether the device has been placed in an operational state.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosCommon.DeviceName">
			<summary>Gets a short string identifying the device and any pertinent information about it.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosCommon.DevicePath">
			<summary>Gets or sets the hardware path of a device.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosCommon.FreezeEvents">
			<summary>Gets or sets a Boolean value that indicates whether the application has requested that the Service Object not deliver events.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosCommon.PowerNotify">
			<summary>Gets or sets the type of power notification selection made by the application.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosCommon.PowerState">
			<summary>Gets the current power condition.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosCommon.ServiceObjectDescription">
			<summary>Gets a string identifying the Service Object that supports the device and the company that produced it.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosCommon.ServiceObjectVersion">
			<summary>Gets the Service Object version number.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosCommon.State">
			<summary>Gets the current state of the device.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosCommon.SynchronizingObject">
			<summary>Gets or sets the object that is used to marshal the event handler calls issued because of a POS event.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.PosControlException">
			<summary>Defines the programmatic interface for exceptions thrown by service objects.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.PosControlException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
			<summary>Creates an instance of the <see cref="PosControlException"></see> class with serialized data.</summary>
			<param name="serializationInfo">The <see cref="SerializationInfo"></see> object that holds the serialized object data about the exception being thrown.</param>
			<param name="streamingContext">The <see cref="StreamingContext"></see> object that contains contextual information about the source or destination.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PosControlException.#ctor(System.String,Microsoft.PointOfService.ErrorCode)">
			<summary>Creates an instance of the <see cref="T:Microsoft.PointOfService.PosControlException"></see> class with a specified error message and error code.</summary>
			<param name="errorCode">An <see cref="T:Microsoft.PointOfService.ErrorCode"></see> value that represents the error code for the exception.</param>
			<param name="message">A string that contains text that explains the reason for the exception.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PosControlException.#ctor(System.String,Microsoft.PointOfService.ErrorCode,System.Exception)">
			<summary>Creates an instance of the <see cref="T:Microsoft.PointOfService.PosControlException"></see> class with a specified error message, error code, and inner exception.</summary>
			<param name="errorCode">An <see cref="T:Microsoft.PointOfService.ErrorCode"></see> value that represents the error code for the exception.</param>
			<param name="e">The exception that is the cause of the <see cref="T:Microsoft.PointOfService.PosControlException"></see> being constructed. If this parameter is not null (Nothing in Visual Basic), the exception provided is available to exception handling code as the <see cref="T:Microsoft.PointOfService.PosControlException"></see>'s InnerException.</param>
			<param name="message">A string that contains text that explains the reason for the exception.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PosControlException.#ctor(System.String,Microsoft.PointOfService.ErrorCode,System.Int32)">
			<summary>Creates an instance of the <see cref="PosControlException"></see> class with a specified error message, error code, and extended error code value.</summary>
			<param name="errorCode">An <see cref="T:Microsoft.PointOfService.ErrorCode"></see> value that represents the error code for the exception. If an extended error code is provided, this value should be <see cref="F:Microsoft.PointOfService.ErrorCode.Extended"></see>.</param>
			<param name="message">A string that contains text that explains the reason for the exception.</param>
			<param name="errorCodeExtended">The extended error code for the exception. This value is typically device-specific. See the documentation for the POS for .NET device in question to discover what values may be passed here.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PosControlException.#ctor(System.String,Microsoft.PointOfService.ErrorCode,System.Int32,System.Exception)">
			<summary>Creates an instance of the <see cref="PosControlException"></see> class with a specified error message, error code, extended error code value, and the exception that is the cause of the current exception.</summary>
			<param name="errorCode">An <see cref="T:Microsoft.PointOfService.ErrorCode"></see> value that represents the error code for the exception. If an extended error code is provided, this value should be <see cref="F:Microsoft.PointOfService.ErrorCode.Extended"></see>.</param>
			<param name="e">The exception that is the cause of the <see cref="T:Microsoft.PointOfService.PosControlException"></see> being constructed. If this parameter is not null (Nothing in Visual Basic), the exception provided is available to exception handling code as the <see cref="T:Microsoft.PointOfService.PosControlException"></see>'s InnerException.</param>
			<param name="message">A string that contains text that explains the reason for the exception.</param>
			<param name="errorCodeExtended">The extended error code for the exception. This value is typically device-specific. See the documentation for the POS for .NET device in question to discover what values may be passed here.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PosControlException.ToString">
			<summary>Creates and returns a string representation of the current exception.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosControlException.ErrorCode">
			<summary>Gets the <see cref="T:Microsoft.PointOfService.ErrorCode"></see> value for this exception.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosControlException.ErrorCodeExtended">
			<summary>Gets the extended error code for this exception</summary>
		</member>
		<member name="T:Microsoft.PointOfService.PosDevice">
			<summary>Defines the programmatic interface that represents a generic POS device. The <see cref="PosCommon"></see> class inherits from the <see cref="PosDevice"></see> class.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.PosDevice.#ctor">
			<summary>Creates an instance of the <see cref="PosDevice"></see> class.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.PosEventArgs">
			<summary>Defines the base class for POS for .NET classes containing event data.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.PosEventArgs.#ctor">
			<summary>Creates an instance of the <see cref="PosEventArgs"></see> class.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosEventArgs.EventId">
			<summary>Gets the event identifier.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosEventArgs.TimeStamp">
			<summary>Gets the DateTime of the event.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.PosException">
			<summary>Defines the programmatic interface for a generic exception in the POS for .NET system. All other exception classes inherit from <see cref="PosException"></see>.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.PosException.#ctor">
			<summary>Creates an instance of the <see cref="PosException"></see> class.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.PosException.#ctor(System.String)">
			<summary>Creates an instance of the <see cref="PosException"></see> class with a specified error message.</summary>
			<param name="message">The error message that explains the reason for the exception.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PosException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
			<summary>Creates an instance of the <see cref="PosException"></see> class with serialized data.</summary>
			<param name="serializationInfo">The <see cref="SerializationInfo"></see> that holds the serialized object data about the exception being thrown.</param>
			<param name="streamingContext">The <see cref="StreamingContext"></see> that contains contextual information about the source or destination.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PosException.#ctor(System.String,System.Exception)">
			<summary>Creates an instance of the <see cref="PosException"></see> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
			<param name="e">The exception that is the cause of the current exception. If the e parameter is not a null reference (Nothing in Visual Basic), the current exception is raised in a catch block that handles the inner exception.</param>
			<param name="message">The error message that explains the reason for the exception.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PosException.#ctor(System.String,Microsoft.PointOfService.ErrorCode,System.Int32)">
			<summary>Creates an instance of the <see cref="PosException"></see> class with a specified error message, error code, and extended error code values.</summary>
			<param name="errorCode">The error code for the exception.</param>
			<param name="message">The error message that explains the reason for the exception.</param>
			<param name="errorCodeExtended">The extended error code for the exception.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PosException.#ctor(System.String,Microsoft.PointOfService.ErrorCode,System.Int32,System.Exception)">
			<summary>Creates an instance of the <see cref="PosException"></see> class with a specified error message, error code, and extended error code value.</summary>
			<param name="errorCode">The error code for the exception.</param>
			<param name="e">The exception that is the cause of the current exception. If the e parameter is not a null reference (Nothing in Visual Basic), the current exception is raised in a catch block that handles the inner exception. </param>
			<param name="message">The error message that explains the reason for the exception.</param>
			<param name="errorCodeExtended">The extended error code for the exception.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PosException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
			<summary>Sets the <see cref="SerializationInfo"></see> with information about the exception.</summary>
			<param name="context">The <see cref="StreamingContext"></see> that contains contextual information about the source or destination.</param>
			<param name="info">The <see cref="SerializationInfo"></see> that holds the serialized object data about the exception being thrown.</param>
		</member>
		<member name="T:Microsoft.PointOfService.PosExplorer">
			<summary>Defines the programmatic interface for enumeration and initialization of POS installed devices.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.PosExplorer.#ctor">
			<summary>Creates an instance of the <see cref="PosExplorer"></see> class.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.PosExplorer.#ctor(System.ComponentModel.ISynchronizeInvoke)">
			<summary>Creates an instance of the <see cref="PosExplorer"></see> class with the specified parameter and initializes the system.</summary>
			<param name="synchronizingObject">An object that implements the .NET Framework class <see cref="IsynchronizeInvoke"></see>. <see cref="ISynchronizeInvoke"></see> is used to marshal events to a particular thread defined by the object. For more information, see the .NET Framework Library documentation.</param>
		</member>
		<member name="E:Microsoft.PointOfService.PosExplorer.DeviceAddedEvent">
			<summary>Notifies the application when a POS device has been added to the system.</summary>
		</member>
		<member name="E:Microsoft.PointOfService.PosExplorer.DeviceRemovedEvent">
			<summary>Notifies the application when a POS device has been removed from the system.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.PosExplorer.CreateInstance(Microsoft.PointOfService.DeviceInfo)">
			<summary>Creates an instance of the service object based on the information supplied by the property values of the <see cref="DeviceInfo"></see> object.</summary>
			<param name="device">An object that describes the device that you want to create an instance of, and which is an instance of the <see cref="DeviceInfo"></see> class. <see cref="DeviceInfo"></see> contains <see cref="Compatibility"></see>, <see cref="Description"></see>, <see cref="HardwareID"></see> properties and so on for the device.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PosExplorer.GetDevice(System.String)">
			<summary>Retrieves a device of the specified type.</summary>
			<param name="type">A string that contains one of the 36 POS device types, as defined by the <see cref="DeviceType"></see> helper class.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PosExplorer.GetDevice(System.String,System.String)">
			<summary>Retrieves a device of the specified type and logical name (or alias).</summary>
			<param name="type">A string that contains one of the 36 POS device types, as defined by the <see cref="DeviceType"></see> helper class.</param>
			<param name="logicalName">The logical name or alias of the device.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PosExplorer.GetDevices">
			<summary>Returns a collection of all POS devices currently installed in the system.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.PosExplorer.GetDevices(Microsoft.PointOfService.DeviceCompatibilities)">
			<summary>Retrieves all POS devices currently installed in the system, based on a compatibility level (or version number).</summary>
			<param name="compatibility">DeviceCompatibilities enumeration that indicates compatibility level.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PosExplorer.GetDevices(System.String)">
			<summary>Retrieves all POS devices of the specified type.</summary>
			<param name="type">A string that contains one of the 36 POS device types, as defined by the <see cref="DeviceType"></see> helper class.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PosExplorer.GetDevices(System.String,Microsoft.PointOfService.DeviceCompatibilities)">
			<summary>Retrieves all POS devices of the specified type and compatibility (or version).</summary>
			<param name="type">A string that contains one of the 36 POS device types, as defined by the <see cref="DeviceType"></see> helper class.</param>
			<param name="compatibility"><see cref="DeviceCompatibilities"></see> enumeration that indicates compatibility level.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PosExplorer.Refresh">
			<summary>Re-enumerates the list of attached POS devices and rebuilds internal data structures.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosExplorer.PosRegistryKey">
			<summary>Gets the POS for .NET configuration root registry key in relation to HKEY_LOCAL_MACHINE.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosExplorer.StatisticsFile">
			<summary>Gets a path of the file in which device statistics is persisted.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosExplorer.SynchronizingObject">
			<summary>Gets or sets the <see cref="IsynchronizeInvoke"></see> object.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.PosKeyboard">
			<summary>Defines the programmatic interface for a UPOS Keyboard device.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.PosKeyboard.#ctor">
			<summary>Creates an instance of <see cref="PosKeyboard"></see> class.</summary>
		</member>
		<member name="E:Microsoft.PointOfService.PosKeyboard.DataEvent">
			<summary>Raised by the service object to present input data from the device to the application.</summary>
		</member>
		<member name="E:Microsoft.PointOfService.PosKeyboard.ErrorEvent">
			<summary>Raised by the service object to indicate an error has been detected while it is trying to read keyboard device input data.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosKeyboard.StatisticKeyPressedCount">
			<summary>Incremented for each key-down action.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.PosKeyboard.ClearInput">
			<summary>Clears all device input that has been buffered.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosKeyboard.AutoDisable">
			<summary>Gets or sets a Boolean value that indicates whether POS for .NET automatically disables the device when data is received.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosKeyboard.CapKeyUp">
			<summary>Gets a Boolean value that indicates whether the keyboard device can generate both key-down and key-up input data, based on the value of the <see cref="EventTypes"></see> property.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosKeyboard.DataCount">
			<summary>Gets the number of data events currently queued by the service object.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosKeyboard.DataEventEnabled">
			<summary>Gets or sets a Boolean value that indicates whether the service object can deliver a queued event by raising a <see cref="DataEvent"></see> event.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosKeyboard.EventTypes">
			<summary>Gets or sets the type of events that the application wants to receive.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosKeyboard.PosKeyData">
			<summary>Gets the value of the key from the last <see cref="DataEvent"></see> event.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosKeyboard.PosKeyEventType">
			<summary>Gets the type of the last keyboard event.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.PosLibraryException">
			<summary>Defines the programmatic interface used by <see cref="PosExplorer"></see> class to throw exceptions. </summary>
		</member>
		<member name="M:Microsoft.PointOfService.PosLibraryException.#ctor(System.String)">
			<summary>Initializes a new instance of the <see cref="PosLibraryException"></see> class with a specified error message.</summary>
			<param name="message">The error message that explains the reason for the exception.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PosLibraryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
			<summary>Initializes a new instance of the <see cref="PosLibraryException"></see> class with serialized data.</summary>
			<param name="serializationInfo">The <see cref="SerializationInfo"></see> that holds the serialized object data about the exception being thrown.</param>
			<param name="streamingContext">The <see cref="StreamingContext"></see> that contains contextual information about the source or destination.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PosLibraryException.#ctor(System.String,System.Exception)">
			<summary>Initializes a new instance of the <see cref="PosLibraryException"></see> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
			<param name="e">The exception that is the cause of the current exception. If the e parameter is not a null reference (Nothing in Visual Basic), the current exception is raised in a catch block that handles the inner exception. </param>
			<param name="message">The error message that explains the reason for the exception.</param>
		</member>
		<member name="T:Microsoft.PointOfService.PosManagementException">
			<summary>Defines the programmatic interface used by POS for .NET management APIs to throw exceptions.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.PosManagementException.#ctor(System.String)">
			<summary>Initializes a new instance of the <see cref="PosManagementException"></see> class with a specified error message.</summary>
			<param name="message">The error message that explains the reason for the exception.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PosManagementException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
			<summary>Initializes a new instance of the <see cref="PosManagementException"></see> class with serialized data.</summary>
			<param name="serializationInfo">The <see cref="SerializationInfo"></see> that holds the serialized object data about the exception being thrown.</param>
			<param name="streamingContext">The <see cref="StreamingContext"></see> that contains contextual information about the source or destination.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PosManagementException.#ctor(System.String,System.Exception)">
			<summary>Initializes a new instance of the <see cref="PosManagementException"></see> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
			<param name="e">The exception that is the cause of the current exception. If the e parameter is not a null reference (Nothing in Visual Basic), the current exception is raised in a catch block that handles the inner exception. </param>
			<param name="message">The error message that explains the reason for the exception.</param>
		</member>
		<member name="T:Microsoft.PointOfService.PosPower">
			<summary>Defines the programmatic interface for a UPOS power system device.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.PosPower.#ctor">
			<summary>Creates an instance of the <see cref="PosPower"></see> class.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPower.StatusBatteryCapacityRemaining">
			<summary>Indicates the <see cref="BatteryCapacityRemaining"></see> property has been updated.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPower.StatusBatteryCritical">
			<summary>Indicates the remaining battery capacity is at or below the critically low battery threshold and the system is operating from the battery.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPower.StatusBatteryLow">
			<summary>Indicates the remaining battery capacity is at or below the low battery threshold and the system is operating from the battery.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPower.StatusFanRunning">
			<summary>Indicates the fan is running.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPower.StatusFanStopped">
			<summary>Indicates the fan has stopped.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPower.StatusPowerSource">
			<summary>Indicates the <see cref="PowerSource"></see> property has been updated.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPower.StatusRestart">
			<summary>Indicates the system will restart immediately.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPower.StatusShutDown">
			<summary>Indicates the device has shut down.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPower.StatusStandby">
			<summary>Indicates the system is requesting a transition to the Standby state.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPower.StatusSuspend">
			<summary>Indicates the system is requesting a transition to the Suspend state.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPower.StatusTemperatureHigh">
			<summary>Indicates the device is running at a high temperature.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPower.StatusTemperatureOK">
			<summary>Indicates the device's temperature is within acceptable range.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPower.StatusUpsCritical">
			<summary>Indicates the UPS battery is in a critical state.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPower.StatusUpsFull">
			<summary>Indicates the UPS battery is almost full charge.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPower.StatusUpsLow">
			<summary>Indicates the UPS battery is almost depleted of charge.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPower.StatusUpsWarning">
			<summary>Indicates the UPS battery is near 50 percent charge.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPower.StatusUserStandby">
			<summary>Indicates the system is requesting a transition to the Standby state because of user input.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPower.StatusUserSuspend">
			<summary>Indicates the system is requesting a transition to the Suspend state because of user input.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.PosPower.RestartPos">
			<summary>Restarts the POS system independent of the power state.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.PosPower.ShutdownPos">
			<summary>Shuts down the POS system independent of the power state.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.PosPower.StandbyPos(Microsoft.PointOfService.SystemStateChangeReason)">
			<summary>Requests that the POS system be put in the Standby state or responds to a request to put the system in the Standby state.</summary>
			<param name="reason">Specifies the reason <see cref="StandbyPos"></see> has been called. Possible values are defined by the <see cref="SystemStateChangeReason"></see> enumeration.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PosPower.SuspendPos(Microsoft.PointOfService.SystemStateChangeReason)">
			<summary>Requests that the POS system be put in the Suspend state or responds to a request to put the system in the Suspend state.</summary>
			<param name="reason">Specifies the reason <see cref="SuspendPos"></see> has been called. Possible values are defined by the <see cref="SystemStateChangeReason"></see> enumeration.</param>
		</member>
		<member name="P:Microsoft.PointOfService.PosPower.BatteryCapacityRemaining">
			<summary>Gets a value between 0 and 100 that represents the percentage of remaining battery capacity.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPower.CapFanAlarm">
			<summary>Gets a Boolean value that indicates whether the device can detect the CPU fan is stopped.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPower.CapHeatAlarm">
			<summary>Gets a Boolean value that indicates whether the device can detect if the CPU is running at a high temperature.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPower.CapQuickCharge">
			<summary>Gets a Boolean value that indicates whether power management allows charging the battery with a quick method.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPower.CapShutdownPos">
			<summary>Gets a Boolean value that indicates whether the device can explicitly shut down the POS system.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPower.CapUpsChargeState">
			<summary>Gets one or more UPS charge states.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPower.EnforcedShutdownDelayTime">
			<summary>Gets or sets an integer value for a built-in mechanism to shut down the POS terminal.</summary>
			<returns>When <see cref="EnforcedShutdownDelayTime"></see> is set, the following value is put in the <see cref="ErrorCode"></see> property:ValueMeaningSuccess<see cref="EnforcedShutdownDelayTime"></see> was set successfully.IllegalAn illegal value was specified.</returns>
		</member>
		<member name="P:Microsoft.PointOfService.PosPower.PowerFailDelayTime">
			<summary>Gets the time in milliseconds for power failure intervals.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPower.QuickChargeMode">
			<summary>Gets a Boolean value that indicates whether the battery is being recharged in a quick charge mode.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPower.QuickChargeTime">
			<summary>Gets the remaining time for loading the battery.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPower.UpsChargeState">
			<summary>Gets the UPS charge state.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.PosPrinter">
			<summary>Defines the programmatic interface for a UPOS Printer device.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.PosPrinter.#ctor">
			<summary>Creates an instance of the <see cref="PosPrinter"></see> class.</summary>
		</member>
		<member name="E:Microsoft.PointOfService.PosPrinter.ErrorEvent">
			<summary>Queued by the service object when an error is detected and the device’s <see cref="State"></see> transitions into the error state.</summary>
		</member>
		<member name="E:Microsoft.PointOfService.PosPrinter.OutputCompleteEvent">
			<summary>Queued by the service object to notify the application when asynchronous processing that corresponds to an <see cref="OutputID"></see> has successfully completed.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.CharacterSetAnsi">
			<summary>Indicates the default character set supports the ANSI character set.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.CharacterSetAscii">
			<summary>Indicates the default character set supports the ASCII character set.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.CharacterSetUnicode">
			<summary>Indicates the default character set supports the Unicode character set.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.ExtendedErrorBadFormat">
			<summary>Indicates an unsupported format.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.ExtendedErrorCoverOpen">
			<summary>Indicates that the printer cover is open.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.ExtendedErrorJournalCartridgeEmpty">
			<summary>Indicates the journal cartridge is empty.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.ExtendedErrorJournalCartridgeRemoved">
			<summary>Indicates the journal cartridge has been removed.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.ExtendedErrorJournalEmpty">
			<summary>Indicates the journal station is out of paper.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.ExtendedErrorJournalHeadCleaning">
			<summary>Indicates the journal cartridge head is being cleaned.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.ExtendedErrorReceiptCartridgeEmpty">
			<summary>Indicates the receipt cartridge is empty.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.ExtendedErrorReceiptCartridgeRemoved">
			<summary>Indicates the receipt cartridge has been removed.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.ExtendedErrorReceiptEmpty">
			<summary>Indicates the receipt station is out of paper.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.ExtendedErrorReceiptHeadCleaning">
			<summary>Indicates the receipt cartridge head is being cleaned.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.ExtendedErrorSlipCartridgeEmpty">
			<summary>Indicates the slip cartridge is empty.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.ExtendedErrorSlipCartridgeRemoved">
			<summary>Indicates the slip cartridge has been removed.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.ExtendedErrorSlipEmpty">
			<summary>Indicates a form has not been inserted into the slip station.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.ExtendedErrorSlipForm">
			<summary>Indicates a form is present while the printer is being taken out of from removal mode.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.ExtendedErrorSlipHeadCleaning">
			<summary>Indicates the slip cartridge head is being cleaned.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.ExtendedErrorTooBig">
			<summary>Indicates the bitmap is either too wide to print without transformation, or too big to tranform.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.PrinterBarCodeCenter">
			<summary>Indicates the bar code should be printed aligned with the center of the station.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.PrinterBarCodeLeft">
			<summary>Indicates the bar code should be printed aligned with the leftmost print column.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.PrinterBarCodeRight">
			<summary>Indicates the bar code should be printed aligned with the rightmost print column.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.PrinterBitmapAsIs">
			<summary>Indicates the bitmap should be printed with one bitmap pixel per printer dot.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.PrinterBitmapCenter">
			<summary>Indicates the bitmap should be printed aligned with the center of the station.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.PrinterBitmapLeft">
			<summary>Indicates the bitmap should be printed aligned with the leftmost print column.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.PrinterBitmapRight">
			<summary>Indicates the bitmap should be printed aligned with the rightmost print column.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.PrinterCutPaperFullCut">
			<summary>Indicates a full paper cut.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.StatisticBarcodePrintedCount">
			<summary>Incremented when a bar code is successfully printed.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.StatisticFailedPaperCutCount">
			<summary>Incremented for each failed paper cut.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.StatisticFailedPrintSideChangeCount">
			<summary>Incremented for each failed print side change or failed check flip.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.StatisticFormInsertionCount">
			<summary>Incremented when a form is successfully inserted into the document/slip station.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.StatisticHomeErrorCount">
			<summary>Incremented when a home error occurs.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.StatisticJournalCharacterPrintedCount">
			<summary>Incremented for every journal character printed.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.StatisticJournalCoverOpenCount">
			<summary>Incremented every time that the document/slip station cover opened.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.StatisticJournalLinePrintedCount">
			<summary>Incremented for each journal line printed.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.StatisticMaximumTempReachedCount">
			<summary>Incremented every time that maximum temperature is reached. </summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.StatisticNVRAMWriteCount">
			<summary>Incremented every time that NVRAM is written to.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.StatisticPaperCutCount">
			<summary>Incremented every time that paper is cut successfully.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.StatisticPrinterFaultCount">
			<summary>Incremented when a printer fault occurs.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.StatisticPrintSideChangeCount">
			<summary>Incremented when the print side changes or a check flips.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.StatisticReceiptCharacterPrintedCount">
			<summary>Incremented every time that a receipt character is printed.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.StatisticReceiptCoverOpenCount">
			<summary>Incremented every time that the receipt cover opened.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.StatisticReceiptLineFeedCount">
			<summary>Incremented every time that a receipt line feed is performed.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.StatisticReceiptLinePrintedCount">
			<summary>Incremented every time that a receipt line is printed.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.StatisticSlipCharacterPrintedCount">
			<summary>Incremented every time that a slip character is printed.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.StatisticSlipCoverOpenCount">
			<summary>Incremented every time that the slip cover opened.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.StatisticSlipLineFeedCount">
			<summary>Incremented every time that a slip line feed is performed.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.StatisticSlipLinePrintedCount">
			<summary>Incremented every time that a slip line is printed.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.StatisticStampFiredCount">
			<summary>Incremented for each Stamp raised.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.StatusCoverOK">
			<summary>Indicates the printer cover is closed.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.StatusCoverOpen">
			<summary>Indicates the printer cover is open.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.StatusIdle">
			<summary>Indicates all asynchronous output is finished, either successfully or because the output has been cleared. The printer State property is now set to <see cref="ControlState.Idle"></see>.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.StatusJournalCartridgeEmpty">
			<summary>Indicates the journal cartridge has to be replaced.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.StatusJournalCartridgeNearEmpty">
			<summary>Indicates the journal cartridge is near its end.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.StatusJournalCartridgeOK">
			<summary>Indicates all journal cartridges are ready.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.StatusJournalCoverOK">
			<summary>Indicates the journal cover is closed.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.StatusJournalCoverOpen">
			<summary>Indicates the journal cover is open.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.StatusJournalEmpty">
			<summary>Indicates there is no journal paper.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.StatusJournalHeadCleaning">
			<summary>Indicates the journal cartridge has begun head cleaning.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.StatusJournalNearEmpty">
			<summary>Indicates the journal paper is low.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.StatusJournalPaperOK">
			<summary>Indicates the journal paper is ready.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.StatusReceiptCartridgeEmpty">
			<summary>Indicates the receipt cartridge has to be replaced.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.StatusReceiptCartridgeNearEmpty">
			<summary>Indicates the receipt cartridge is nearing empty.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.StatusReceiptCartridgeOK">
			<summary>Indicates all receipt cartridges are ready.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.StatusReceiptCoverOK">
			<summary>Indicates the receipt cover is closed.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.StatusReceiptCoverOpen">
			<summary>Indicates the receipt cover is open. </summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.StatusReceiptEmpty">
			<summary>Indicates there is no receipt paper.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.StatusReceiptHeadCleaning">
			<summary>Indicates the receipt cartridge has begun head cleaning.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.StatusReceiptNearEmpty">
			<summary>Indicates the receipt paper is low.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.StatusReceiptPaperOK">
			<summary>Indicates the receipt paper is ready.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.StatusSlipCartridgeEmpty">
			<summary>Indicates the slip cartridge has to be replaced.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.StatusSlipCartridgeNearEmpty">
			<summary>Indicates the slip cartridge is nearing empty.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.StatusSlipCartridgeOK">
			<summary>Indicates all slip cartridges are ready.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.StatusSlipCoverOK">
			<summary>Indicates the slip cover is closed.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.StatusSlipCoverOpen">
			<summary>Indicates the slip cover is open.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.StatusSlipEmpty">
			<summary>Indicates that no slip form is inserted and no slip form has been detected at the entrance to the slip station.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.StatusSlipHeadCleaning">
			<summary>Indicates the receipt cartridge has begun head cleaning.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.StatusSlipNearEmpty">
			<summary>Indicates the slip form is close to the bottom.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PosPrinter.StatusSlipPaperOK">
			<summary>Indicates the slip form is inserted.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.PosPrinter.BeginInsertion(System.Int32)">
			<summary>Starts form insertion processing. <see cref="BeginInsertion"></see> is paired with the <see cref="EndInsertion"></see> method to control form insertion.</summary>
			<param name="timeout">The timeout parameter gives the number of milliseconds before failing the method.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PosPrinter.BeginRemoval(System.Int32)">
			<summary>Starts form removal processing.</summary>
			<param name="Timeout">The timeout parameter gives the number of milliseconds before failing the method.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PosPrinter.ChangePrintSide(Microsoft.PointOfService.PrinterSide)">
			<summary>Selects the side of the document that it wants to print on.</summary>
			<param name="Side">The side parameter indicates the side of the document where printing will occur. Possible values are defined by the <see cref="PrintSide"></see> enumeration.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PosPrinter.ClearOutput">
			<summary>Clears all device output that has been buffered. Also, when it is possible, stops outputs that are in progress.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.PosPrinter.ClearPrintArea">
			<summary>Clears the area defined by the <see cref="PageModePrintArea"></see> property.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.PosPrinter.CutPaper(System.Int32)">
			<summary>Cuts the receipt paper.</summary>
			<param name="percentage">The percentage parameter indicates the percentage of paper to cut. If percentage is set to the constant <see cref="PrinterCutPaperFullCut"></see>, this causes a full paper cut. Other percentage values request a partial cut.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PosPrinter.EndInsertion">
			<summary>Ends form-insertion processing.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.PosPrinter.EndRemoval">
			<summary>Ends form-removal processing.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.PosPrinter.MarkFeed(Microsoft.PointOfService.PrinterMarkFeeds)">
			<summary>Uses the printer’s mark sensor for receipt paper.</summary>
			<param name="Type">The type parameter indicates the kind of mark-sensed paper handling. Possible values are defined by the <see cref="PrinterMarkFeeds"></see> enumeration.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PosPrinter.PageModePrint(Microsoft.PointOfService.PageModePrintControl)">
			<summary>Starts or exits Page Mode for the station specified in the <see cref="PageModeStation"></see> property.</summary>
			<param name="control">The Page Mode control.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PosPrinter.PrintBarCode(Microsoft.PointOfService.PrinterStation,System.String,Microsoft.PointOfService.BarCodeSymbology,System.Int32,System.Int32,System.Int32,Microsoft.PointOfService.BarCodeTextPosition)">
			<summary>Prints a bar code on the specified printer station.</summary>
			<param name="data">Character string to be bar-coded.</param>
			<param name="width">Bar code width. Expressed in the unit of measure indicated by the <see cref="MapMode"></see> property.</param>
			<param name="height">Bar code height. Expressed in the unit of measure indicated by the <see cref="MapMode"></see> property.</param>
			<param name="symbology">Bar code symbol type to use. Possible values are defined by the <see cref="BarCodeSymbology"></see> enumeration.</param>
			<param name="textPosition">Placement of the readable character string. Possible values are defined by the <see cref="BarCodeTextPosition"></see> enumeration.</param>
			<param name="alignment">Placement of the bar code. For possible values, see Remarks in this topic.</param>
			<param name="station">The printer station to be used. Possible values are defined by the <see cref="PrinterStation"></see> enumeration. Valid values are <see cref="PrinterStation.Receipt"></see> or <see cref="PrinterStation.Slip"></see>.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PosPrinter.PrintBitmap(Microsoft.PointOfService.PrinterStation,System.String,System.Int32,System.Int32)">
			<summary>Prints a bitmap on the specified printer station. </summary>
			<param name="fileName">Name of Windows bitmap file. The file must be in uncompressed format.</param>
			<param name="width">Printed width of the bitmap to be performed. See Remarks in this topic.</param>
			<param name="alignment">Placement of the bitmap. For possible values, see Remarks in this topic.</param>
			<param name="station">The printer station to be used. Possible values are defined by the <see cref="PrinterStation"></see> enumeration. Valid values are <see cref="PrinterStation.Receipt"></see> or <see cref="PrinterStation.Slip"></see>.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PosPrinter.PrintImmediate(Microsoft.PointOfService.PrinterStation,System.String)">
			<summary>Prints the string immediately that is specified for data on the printer station specified by station. </summary>
			<param name="data">The characters to be printed. May consist of printable characters, escape sequences, carriage returns (13 decimal), and new line / line feed (10 decimal).</param>
			<param name="station">The printer station to be used. Possible values are defined by the <see cref="PrinterStation"></see> enumeration. Valid values are as follows: <see cref="PrinterStation.Journal"></see>, <see cref="PrinterStation.Receipt"></see>, or <see cref="PrinterStation.Slip"></see>.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PosPrinter.PrintMemoryBitmap(Microsoft.PointOfService.PrinterStation,System.Drawing.Bitmap,System.Int32,System.Int32)">
			<summary>Prints a bitmap from memory on the specified printer station.</summary>
			<param name="data">The bitmap to be printed.</param>
			<param name="width">Printed width of the bitmap.</param>
			<param name="alignment">Placement of the bitmap.</param>
			<param name="station">The printer station to be used. Can be either PrinterStation.Slip or PrinterStation.Receipt.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PosPrinter.PrintNormal(Microsoft.PointOfService.PrinterStation,System.String)">
			<summary>Prints the string specified in data on the printer station specified in station.</summary>
			<param name="data">The characters to be printed. May consist of printable characters, escape sequences, carriage returns (13 decimal), and new line / line feed (10 decimal).</param>
			<param name="station">The printer station to be used. Possible values are defined by the <see cref="PrinterStation"></see> enumeration. Valid values are as follows: <see cref="PrinterStation.Journal"></see>, <see cref="PrinterStation.Receipt"></see>, or <see cref="PrinterStation.Slip"></see>.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PosPrinter.PrintTwoNormal(Microsoft.PointOfService.PrinterStation,System.String,System.String)">
			<summary>Prints two strings on two print stations concurrently. When supported, this may give increased print performance.</summary>
			<param name="stations">The printer stations to be used. Possible values are defined by the <see cref="PrinterStation"></see> enumeration. Valid values are as follows: <see cref="PrinterStation.TwoReceiptJournal"></see>, <see cref="PrinterStation.TwoSlipJournal"></see>, or <see cref="PrinterStation.TwoSlipReceipt"></see>.</param>
			<param name="data2">The characters to be printed on the second station. (Restrictions are the same as data1.) If this string is the empty string (""), then print the same data as data1. On some printers, by using this format may give additional increased print performance.</param>
			<param name="data1">The characters to be printed on the first station. May consist of printable characters and escape sequences as listed in the <see cref="PosPrinter"></see> topic. The characters must all fit on one printed line so that the printer may try to print on both stations concurrently.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PosPrinter.RotatePrint(Microsoft.PointOfService.PrinterStation,Microsoft.PointOfService.PrintRotation)">
			<summary>Enters or exits rotated print mode.</summary>
			<param name="rotation">Direction of rotation. Possible values are defined by the <see cref="PrintRotation"></see> enumeration.</param>
			<param name="station">The printer station to be used. Possible values are defined by the <see cref="PrinterStation"></see> enumeration. Valid values are as follows: <see cref="PrinterStation.Receipt"></see> or <see cref="PrinterStation.Slip"></see>.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PosPrinter.SetBitmap(System.Int32,Microsoft.PointOfService.PrinterStation,System.String,System.Int32,System.Int32)">
			<summary>Saves information about a bitmap for later printing.</summary>
			<param name="fileName">Name of Windows bitmap file. The file must be in uncompressed format. If set to an empty string (""), the bitmap is unset.</param>
			<param name="width">Printed width of the bitmap to be performed. See the <see cref="PrintBitmap"></see> method for values.</param>
			<param name="bitmapNumber">The number to be assigned to this bitmap. Two bitmaps, numbered 1 and 2, may be set.</param>
			<param name="alignment">Placement of the bitmap.</param>
			<param name="station">The printer station to be used. Possible values are defined by the <see cref="PrinterStation"></see> enumeration. Valid values are as follows: <see cref="PrinterStation.Receipt"></see> or <see cref="PrinterStation.Slip"></see>.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PosPrinter.SetLogo(Microsoft.PointOfService.PrinterLogoLocation,System.String)">
			<summary>Saves a data string as the top or bottom logo.</summary>
			<param name="data">The characters that produce the logo. May consist of printable characters, escape sequences, carriage returns (13 decimal), and newline / line feed (10 decimal).</param>
			<param name="location">Where the logo is to be set. Possible values are defined by the <see cref="PrinterLogoLocation"></see> enumeration as <see cref="PrinterLogoLocation.Top"></see> or <see cref="PrinterLogoLocation.Bottom"></see>.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PosPrinter.TransactionPrint(Microsoft.PointOfService.PrinterStation,Microsoft.PointOfService.PrinterTransactionControl)">
			<summary>Enters or exits transaction mode.</summary>
			<param name="control">Transaction control. Possible values are defined by the <see cref="PrinterTransactionControl"></see> enumeration. See in this topic.</param>
			<param name="station">The printer station to be used. Possible values are defined by the <see cref="PrinterStation"></see> enumeration. Valid values are as follows: <see cref="PrinterStation.Journal"></see>, <see cref="PrinterStation.Receipt"></see>, or <see cref="PrinterStation.Slip"></see>.</param>
		</member>
		<member name="M:Microsoft.PointOfService.PosPrinter.ValidateData(Microsoft.PointOfService.PrinterStation,System.String)">
			<summary>Determines whether a data sequence, possibly including one or more escape sequences, is valid for the specified station, before it calls the <see cref="PrintImmediate"></see>, <see cref="PrintNormal"></see>, or <see cref="PrintTwoNormal"></see> methods.</summary>
			<param name="data">The data to be validated. May include printable data and escape sequences. See Remarks in this topic.</param>
			<param name="station">The printer station to be used. Possible values are defined by the <see cref="PrinterStation"></see> enumeration. Valid values are as follows: <see cref="PrinterStation.Journal"></see>, <see cref="PrinterStation.Receipt"></see>, or <see cref="PrinterStation.Slip"></see>.</param>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.AsyncMode">
			<summary>Gets or sets a Boolean value that indicates whether certain print methods will be performed asynchronously.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.CapCharacterSet">
			<summary>Gets the default character set capability.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.CapConcurrentJrnRec">
			<summary>Gets a Boolean value that indicates whether the journal and receipt stations can print at the same time.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.CapConcurrentJrnSlp">
			<summary>Gets a Boolean value that indicates whether the journal and slip stations can print at the same time.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.CapConcurrentPageMode">
			<summary>Gets a Boolean value that indicates whether the printer can support Page Mode at the same time for both the receipt and slip stations.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.CapConcurrentRecSlp">
			<summary>Gets a Boolean value that indicates whether the receipt and slip stations can print at the same time.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.CapCoverSensor">
			<summary>Gets a Boolean value that indicates whether the printer has a "cover open" sensor.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.CapJrn2Color">
			<summary>Gets a Boolean value that indicates whether the journal can print dark plus an alternate color.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.CapJrnBold">
			<summary>Gets a Boolean value that indicates whether the journal can print bold characters.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.CapJrnCartridgeSensor">
			<summary>Gets the presence of journal cartridge monitoring sensors.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.CapJrnColor">
			<summary>Gets available journal color cartridges.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.CapJrnDHigh">
			<summary>Gets a Boolean value that indicates whether the journal can print double-high characters.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.CapJrnDWide">
			<summary>Gets a Boolean value that indicates whether the journal can print double-wide characters.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.CapJrnDWideDHigh">
			<summary>Gets a Boolean value that indicates whether the journal can print characters that are both double-high and double-wide.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.CapJrnEmptySensor">
			<summary>Gets a Boolean value that indicates whether the journal has an out-of-paper sensor.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.CapJrnItalic">
			<summary>Gets a Boolean value that indicates whether the journal can print italic characters.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.CapJrnNearEndSensor">
			<summary>Gets a Boolean value that indicates whether the journal has a low-paper sensor.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.CapJrnPresent">
			<summary>Gets a Boolean value that indicates whether the journal print station is present.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.CapJrnUnderline">
			<summary>Gets a Boolean value that indicates whether the journal can underline characters.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.CapMapCharacterSet">
			<summary>Gets a Boolean value that indicates whether when printing data, the service object can map the characters sent by the application (in the character set that is defined by the <see cref="CharacterSet"></see> property) to the character sets that are defined by the <see cref="CharacterSetList"></see> property.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.CapRec2Color">
			<summary>Gets a Boolean value that indicates whether the receipt can print dark plus an alternate color.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.CapRecBarCode">
			<summary>Gets a Boolean value that indicates whether the receipt has bar code printing capability.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.CapRecBitmap">
			<summary>Gets a Boolean value that indicates whether the receipt can print bitmaps.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.CapRecBold">
			<summary>Gets a Boolean value that indicates whether the receipt can print bold characters.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.CapRecCartridgeSensor">
			<summary>Gets the presence of receipt cartridge monitoring sensors.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.CapRecColor">
			<summary>Gets the receipt color cartridges.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.CapRecDHigh">
			<summary>Gets a Boolean value that indicates whether the receipt can print double-high characters.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.CapRecDWide">
			<summary>Gets a Boolean value that indicates whether the receipt can print double-wide characters.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.CapRecDWideDHigh">
			<summary>Gets a Boolean value that indicates whether the receipt can print double-high, double-wide characters.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.CapRecEmptySensor">
			<summary>Gets a Boolean value that indicates whether the receipt has an out-of-paper sensor.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.CapRecItalic">
			<summary>Gets a Boolean value that indicates whether the receipt can print italic characters.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.CapRecLeft90">
			<summary>Gets a Boolean value that indicates whether the receipt can print in rotated-90-degree-left mode.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.CapRecMarkFeed">
			<summary>Gets the type of mark-sensed paper handling available.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.CapRecNearEndSensor">
			<summary>Gets a Boolean value that indicates whether the receipt has a low-paper sensor.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.CapRecPaperCut">
			<summary>Gets a Boolean value that indicates whether the receipt can perform paper cuts.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.CapRecPresent">
			<summary>Gets a Boolean value that indicates whether the receipt print station is present.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.CapRecRight90">
			<summary>Gets a Boolean value that indicates whether the receipt can print in a rotated-90-degree-right mode.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.CapRecRotate180">
			<summary>Gets a Boolean value that indicates whether the receipt can print in a rotated upside-down mode.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.CapRecStamp">
			<summary>Gets a Boolean value that indicates whether the receipt has a stamp capability.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.CapRecUnderline">
			<summary>Gets a Boolean value that indicates whether the receipt can underline characters.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.CapSlp2Color">
			<summary>Gets a Boolean value that indicates whether the slip can print dark plus an alternate color.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.CapSlpBarCode">
			<summary>Gets a Boolean value that indicates whether the slip has bar code printing capability.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.CapSlpBitmap">
			<summary>Gets a Boolean value that indicates whether the slip can print bitmaps.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.CapSlpBold">
			<summary>Gets a Boolean value that indicates whether the slip can print bold characters.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.CapSlpBothSidesPrint">
			<summary>Gets a Boolean value that indicates whether the slip print station supports printing on both sides of the document. </summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.CapSlpCartridgeSensor">
			<summary>Gets the presence of slip-cartridge monitoring sensors.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.CapSlpColor">
			<summary>Gets the type of color cartridges supported for slip printing.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.CapSlpDHigh">
			<summary>Gets a Boolean value that indicates whether the slip can print double-high characters.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.CapSlpDWide">
			<summary>Gets a Boolean value that indicates whether the slip can print double-wide characters.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.CapSlpDWideDHigh">
			<summary>Gets a Boolean value that indicates whether the slip can print characters that are both double-wide and double-high.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.CapSlpEmptySensor">
			<summary>Gets a Boolean value that indicates whether the slip has a "slip in" sensor.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.CapSlpFullSlip">
			<summary>Gets a Boolean value that indicates whether the slip is a full slip station; it can print full-length forms.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.CapSlpItalic">
			<summary>Gets a Boolean value that indicates whether the slip can print italic characters.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.CapSlpLeft90">
			<summary>Gets a Boolean value that indicates whether the slip can print in a rotated 90 degree left mode.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.CapSlpNearEndSensor">
			<summary>Gets a Boolean value that indicates whether the slip has a "slip near end" sensor.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.CapSlpPageMode">
			<summary>Gets a Boolean value that indicates whether the printer can support Page Mode for the slip station.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.CapSlpPresent">
			<summary>Gets a Boolean value that indicates whether the slip print station is present.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.CapSlpRight90">
			<summary>Gets a Boolean value that indicates whether the slip can print in a rotated-90-degree-right mode.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.CapSlpRotate180">
			<summary>Gets a Boolean value that indicates whether the slip can print in an upside-down mode.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.CapSlpUnderline">
			<summary>Gets a Boolean value that indicates whether the slip can underline characters.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.CapTransaction">
			<summary>Gets a Boolean value that indicates whether each station supports printer transactions.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.CartridgeNotify">
			<summary>Gets or sets the type of cartridge state notification the application wants to receive.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.CharacterSet">
			<summary>Gets or sets the numeric value that indicates the character set that the application wants to use for printing characters.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.CharacterSetList">
			<summary>Gets the list of character set numbers supported for printing.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.CoverOpen">
			<summary>Gets a Boolean value that indicates whether the printer’s cover is open.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.ErrorLevel">
			<summary>Gets the severity of the most recent error condition.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.ErrorStation">
			<summary>Gets the station or stations that were printing when an error was detected.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.ErrorString">
			<summary>Gets a vendor-supplied description of the current error.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.FlagWhenIdle">
			<summary>Gets or sets a Boolean value that indicates whether the service object queues a <see cref="StatusUpdateEvent"></see> event by using the <see cref="StatusIdle"></see> constant when the device is in an idle state, and reset <see cref="FlagWhenIdle"></see> to false.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.FontTypefaceList">
			<summary>Gets a string array that specifies the fonts and typefaces supported by the printer.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.JrnCartridgeState">
			<summary>Gets the status of the selected journal cartridge (ink, ribbon, or toner).</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.JrnCurrentCartridge">
			<summary>Gets or sets the currently selected journal cartridge.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.JrnEmpty">
			<summary>Gets or sets a Boolean value that indicates whether the journal is out of paper.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.JrnLetterQuality">
			<summary>Gets or sets a Boolean value that indicates whether the printer can print in high-quality mode. </summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.JrnLineChars">
			<summary>Gets or sets the number of characters that the application wants to print on a journal line.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.JrnLineCharsList">
			<summary>Gets a collection of the line widths (characters per line) supported by the journal station.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.JrnLineHeight">
			<summary>Gets or sets the journal print line height that the application wants to use, expressed in the unit of measure indicated by the <see cref="MapMode"></see> property setting.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.JrnLineSpacing">
			<summary>Gets or sets the spacing of each single-high print line, including both the printed line height and the white space between each pair of lines that the application wants to use.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.JrnLineWidth">
			<summary>Gets the width of a line for the number of characters indicated by the <see cref="JrnLineChars"></see> property, expressed in the unit of measure indicated by the <see cref="MapMode"></see> property.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.JrnNearEnd">
			<summary>Gets a Boolean value that indicates whether the journal paper is low.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.MapCharacterSet">
			<summary>Gets a Boolean value that indicates whether the service object maps the characters transferred by the application to the character set selected in the <see cref="CharacterSet"></see> property.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.MapMode">
			<summary>Gets or sets the mapping mode of the printer the application wants to use.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.OutputId">
			<summary>Gets the identifier associated with the current output request.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.PageModeArea">
			<summary>Gets the page area for the selected <see cref="PageModeStation"></see> expressed in the unit of measure given by <see cref="MapMode"></see>.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.PageModeDescriptor">
			<summary>Gets the basic Page mode functionality of the printer for the selected <see cref="PageModeStation"></see> property.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.PageModeHorizontalPosition">
			<summary>Gets or sets the horizontal start position offset within the print area for the print station specified by the <see cref="PageModeStation"></see> property, expressed in the unit of measure specified by the <see cref="MapMode"></see> property.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.PageModeVerticalPosition">
			<summary>Gets or sets the vertical start position offset within the print area for the print station specified by the <see cref="PageModeStation"></see> property, expressed in the unit of measure specified by the <see cref="MapMode"></see> property.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.RecBarCodeRotationList">
			<summary>Gets a list of the directions in which a receipt bar code can be rotated.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.RecBitmapRotationList">
			<summary>Gets a list of the directions in which a receipt bitmap can be rotated.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.RecCartridgeState">
			<summary>Gets the status of the selected receipt cartridge (ink, ribbon or toner).</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.RecCurrentCartridge">
			<summary>Gets or sets the receipt cartridge selected by the application.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.RecEmpty">
			<summary>Gets a Boolean value that indicates whether the receipt is out of paper.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.RecLetterQuality">
			<summary>Gets a Boolean value that indicates whether the printer prints in high-quality mode. </summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.RecLineChars">
			<summary>Gets or sets the number of characters that the application wants to print on a receipt line.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.RecLineCharsList">
			<summary>Gets a collection of the line widths (characters per line) supported by the receipt station.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.RecLineHeight">
			<summary>Gets or sets the receipt print line height, expressed in the unit of measure indicated by the <see cref="MapMode"></see> property setting, that the application wants to use.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.RecLineSpacing">
			<summary>Gets or sets the spacing of each single-high print line. This includes both the printed line height and the white space between each pair of lines, that the application wants to use.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.RecLinesToPaperCut">
			<summary>Gets the number of lines that must be advanced before cutting the receipt paper.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.RecLineWidth">
			<summary>Gets the width of a line, based on the number of characters specified in the <see cref="RecLineChars"></see> property, expressed in the unit of measure indicated by the <see cref="MapMode"></see> property.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.RecNearEnd">
			<summary>Gets a Boolean value that indicates whether the receipt paper is low.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.RecSidewaysMaxChars">
			<summary>Gets the maximum number of characters that can be printed on each line in sideways mode.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.RecSidewaysMaxLines">
			<summary>Gets the maximum number of lines that can be printed in sideways mode.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.RotateSpecial">
			<summary>Gets or sets the rotation orientation for bar codes that the application wants to use.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.SlpBarCodeRotationList">
			<summary>Gets a collection of the directions in which a slip bar code may be rotated.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.SlpBitmapRotationList">
			<summary>Gets a collection of the directions in which a slip bitmap can be rotated.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.SlpCartridgeState">
			<summary>Gets the status of the selected slip cartridge (ink, ribbon, or toner).</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.SlpCurrentCartridge">
			<summary>Gets or sets the slip cartridge the application wants to use.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.SlpEmpty">
			<summary>Gets a Boolean value that indicates whether a slip form is not present.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.SlpLetterQuality">
			<summary>Gets or sets a Boolean value that indicates whether the printer prints in high-quality mode. </summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.SlpLineChars">
			<summary>Gets or sets the number of characters that the application wants to print on a slip line.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.SlpLineCharsList">
			<summary>Gets a collection of the line widths (characters per line) supported by the slip station.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.SlpLineHeight">
			<summary>Gets or sets the slip print-line height, expressed in the unit of measure indicated by the <see cref="MapMode"></see> property setting, that the application wants to use.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.SlpLinesNearEndToEnd">
			<summary>Gets the number of lines that can be printed after the <see cref="SlpNearEnd"></see> property has been set to true but before the printer reaches the end of the slip.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.SlpLineSpacing">
			<summary>Gets or sets the spacing of each single-high print line. This includes both the printed line height and the white space between each pair of lines that the application wants to use.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.SlpLineWidth">
			<summary>Gets the line width, based on the number of characters specified for the <see cref="SlpLineChars"></see> property, expressed in the unit of measure indicated by the <see cref="MapMode"></see> property.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.SlpMaxLines">
			<summary>Gets the maximum number of lines that can be printed on a form.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.SlpNearEnd">
			<summary>Gets a Boolean value that indicates whether the slip form is near its end.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.SlpPrintSide">
			<summary>Gets the side of the slip print station document on which printing will occur.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.SlpSidewaysMaxChars">
			<summary>Gets the maximum number of characters that can be printed on each line in sideways mode.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.PosPrinter.SlpSidewaysMaxLines">
			<summary>Gets the maximum number of lines that can be printed in sideways mode.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.PowerNotification">
			<summary>Enumerates the possible states of power notification for the current device.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PowerNotification.Disabled">
			<summary>The service object will not provide power notifications to the application. No power notification <see cref="StatusUpdateEvent"></see> events will be raised, and the <see cref="PowerState"></see> property may not be set.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PowerNotification.Enabled">
			<summary>The service object will raise power notification <see cref="StatusUpdateEvent"></see> events and update the <see cref="PowerState"></see> property, beginning when the <see cref="DeviceEnabled"></see> property is set to true. The level of functionality available depends on the value of the <see cref="CapPowerReporting"></see> property.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.PowerReporting">
			<summary>Enumerates the possible power reporting capabilities of a device. </summary>
		</member>
		<member name="F:Microsoft.PointOfService.PowerReporting.Advanced">
			<summary>The service object can determine and report all three power states, Off, Offline, and Online.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PowerReporting.None">
			<summary>The service object cannot determine the state of the device. Therefore, no power reporting is possible.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PowerReporting.Standard">
			<summary>The service object can determine and report two of the power states, OffOffline (that is, Off or Offline) and Online.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.PowerSource">
			<summary>Enumerates possible current power sources for a device.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PowerSource.AC">
			<summary>The current power source is the AC line.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PowerSource.Backup">
			<summary>The current power source is a backup source such as an UPS or backup battery.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PowerSource.Battery">
			<summary>The current power source is a system battery. This value is only presented for systems that operate typically on battery.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PowerSource.NotAvailable">
			<summary>Power source reporting is not available.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.PowerState">
			<summary>Enumerates the possible current power state values for a device.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PowerState.Off">
			<summary>The device is turned off or detached from the terminal.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PowerState.Offline">
			<summary>The device is turned on but is either not ready or unable to respond to requests.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PowerState.OffOffline">
			<summary>The device is either turned off or offline.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PowerState.Online">
			<summary>The device is turned on and ready for use.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PowerState.Unknown">
			<summary>Cannot determine the device's power state.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.PrinterCartridgeNotify">
			<summary>Enumerates the possible cartridge-state notification capabilities for a printer.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PrinterCartridgeNotify.Disabled">
			<summary>Cartridge-state notifications are not available.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PrinterCartridgeNotify.Enabled">
			<summary>Cartridge-state notifications are available.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.PrinterCartridgeSensors">
			<summary>Enumerates the possible printer-cartridge-monitoring sensors.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PrinterCartridgeSensors.Cleaning">
			<summary>A sensor that indicates the head is being cleaned.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PrinterCartridgeSensors.Empty">
			<summary>A sensor that indicates the cartridge is empty.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PrinterCartridgeSensors.NearEnd">
			<summary>A sensor that determines whether the color cartridge is near its end.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PrinterCartridgeSensors.None">
			<summary>The device does not support cartridge-monitoring sensors.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PrinterCartridgeSensors.Removed">
			<summary>A sensor that indicates the cartridge has been removed.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.PrinterCartridgeStates">
			<summary>Enumerates the possible printer cartridge states.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PrinterCartridgeStates.Cleaning">
			<summary>The printer head is being cleaned.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PrinterCartridgeStates.Empty">
			<summary>The cartridge is empty.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PrinterCartridgeStates.NearEnd">
			<summary>The cartridge is near its end.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PrinterCartridgeStates.OK">
			<summary>The cartridge in normal condition.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PrinterCartridgeStates.Removed">
			<summary>The cartridge has been removed.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PrinterCartridgeStates.Unknown">
			<summary>Cannot determine the cartridge state.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.PrinterColors">
			<summary>Enumerates the possible printer color cartridges.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PrinterColors.Custom1">
			<summary>Supports first custom color (Secondary color, usually red).</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PrinterColors.Custom2">
			<summary>Supports second custom color.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PrinterColors.Custom3">
			<summary>Supports third custom color.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PrinterColors.Custom4">
			<summary>Supports fourth custom color.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PrinterColors.Custom5">
			<summary>Supports fifth custom color.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PrinterColors.Custom6">
			<summary>Supports sixth custom color.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PrinterColors.Cyan">
			<summary>Supports cyan color for full color printing.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PrinterColors.Full">
			<summary>Supports full color.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PrinterColors.Magenta">
			<summary>Supports magenta color for full color printing.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PrinterColors.None">
			<summary>Supports no color.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PrinterColors.Primary">
			<summary>Supports primary color.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PrinterColors.Yellow">
			<summary>Supports yellow color for full color printing.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.PrinterErrorLevel">
			<summary>Enumerates the possible severity levels for the most recent error condition. </summary>
		</member>
		<member name="F:Microsoft.PointOfService.PrinterErrorLevel.Fatal">
			<summary>A nonrecoverable error has occurred. (For example, internal printer failure.)</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PrinterErrorLevel.None">
			<summary>No errors have occurred.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PrinterErrorLevel.Recoverable">
			<summary>A recoverable error has occurred. (For example, out of paper.)</summary>
		</member>
		<member name="T:Microsoft.PointOfService.PrinterLogoLocation">
			<summary>Enumerates the possible locations for setting a logo. </summary>
		</member>
		<member name="F:Microsoft.PointOfService.PrinterLogoLocation.Bottom">
			<summary>Puts the logo at the bottom of the document.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PrinterLogoLocation.Top">
			<summary>Puts the logo at the top of the document.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.PrinterMarkFeeds">
			<summary>Enumerates the possible kinds of mark-sensed paper handling.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PrinterMarkFeeds.CurrentTopOfForm">
			<summary>Feeds the mark-sensed paper to the present paper’s top of form. (Reverse feed if it is required).</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PrinterMarkFeeds.Cutter">
			<summary>Feeds the mark-sensed paper to the auto cutter cutting position.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PrinterMarkFeeds.NextTopOfForm">
			<summary>Feeds the mark-sensed paper to the next paper’s top of form.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PrinterMarkFeeds.None">
			<summary>Does not feed.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PrinterMarkFeeds.Takeup">
			<summary>Feeds the mark-sensed paper to the paper take-up position.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.PrinterSide">
			<summary>Enumerates possible sides of the print station document on which printing can occur.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PrinterSide.Opposite">
			<summary>The opposite of the current side.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PrinterSide.Side1">
			<summary>Default print side.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PrinterSide.Side2">
			<summary>The other side of the document (the reverse of default).</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PrinterSide.Unknown">
			<summary>Document is not inserted.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.PrinterStation">
			<summary>Enumerates the possible printer station modes.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PrinterStation.Journal">
			<summary>The current printer station is Journal.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PrinterStation.None">
			<summary>The current printer station is undefined.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PrinterStation.Receipt">
			<summary>The current printer station is Receipt.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PrinterStation.Slip">
			<summary>The current printer station is Slip.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PrinterStation.TwoReceiptJournal">
			<summary>The current printer station combines Receipt and Journal.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PrinterStation.TwoSlipJournal">
			<summary>The current printer station combines Slip and Journal.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PrinterStation.TwoSlipReceipt">
			<summary>The current printer station combines Receipt and Slip.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.PrinterTransactionControl">
			<summary>Enumerates the possible transaction modes for a printer station.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PrinterTransactionControl.Normal">
			<summary>Ends a transaction by printing the buffered data.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PrinterTransactionControl.Transaction">
			<summary>Starts a transaction.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.PrintRotation">
			<summary>Enumerates the possible rotation settings for a printer device. </summary>
		</member>
		<member name="F:Microsoft.PointOfService.PrintRotation.Barcode">
			<summary>Rotates bar code printing. (ORed with one of the previous rotation values.)</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PrintRotation.Bitmap">
			<summary>Rotates bitmap printing. (ORed with one of the previous rotation values.)</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PrintRotation.Left90">
			<summary>Rotates printing 90 degrees to the left (counter-clockwise).</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PrintRotation.Normal">
			<summary>Ends rotated printing.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PrintRotation.Right90">
			<summary>Rotates printing 90 degrees to the right side (clockwise).</summary>
		</member>
		<member name="F:Microsoft.PointOfService.PrintRotation.Rotate180">
			<summary>Rotates printing 180 degrees (print upside-down).</summary>
		</member>
		<member name="T:Microsoft.PointOfService.RangeOfCharacters">
			<summary>Defines a helper class that can be used to create an array representing custom glyphs for a Line Display device.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.RangeOfCharacters.#ctor(System.Char)">
			<summary>Creates an instance of the <see cref="RangeOfCharacters"></see> class based on a single character.</summary>
			<param name="singleCharacter">The character that the class instance should contain.</param>
		</member>
		<member name="M:Microsoft.PointOfService.RangeOfCharacters.#ctor(System.Char,System.Char)">
			<summary>Creates an instance of the <see cref="RangeOfCharacters"></see> class based on a range of characters.</summary>
			<param name="toCharacter">The ending character position for the range.</param>
			<param name="fromCharacter">The starting character position for the range.</param>
		</member>
		<member name="P:Microsoft.PointOfService.RangeOfCharacters.From">
			<summary>Gets or sets the starting character position for a range of characters.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.RangeOfCharacters.To">
			<summary>Gets or sets the ending character position for a range of characters.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.RemoteOrderDisplay">
			<summary>Defines the programmatic interface for a remote order display.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.RemoteOrderDisplay.#ctor">
			<summary>Creates an instance of the RemoteOrderDisplay class.</summary>
		</member>
		<member name="E:Microsoft.PointOfService.RemoteOrderDisplay.DataEvent">
			<summary>Notifies the application when input data from a video touch unit is available.</summary>
		</member>
		<member name="E:Microsoft.PointOfService.RemoteOrderDisplay.ErrorEvent">
			<summary>Notifies the application that a remote order display error has been detected and a suitable response by the application is necessary to process the error condition.</summary>
		</member>
		<member name="E:Microsoft.PointOfService.RemoteOrderDisplay.OutputCompleteEvent">
			<summary>Notifies the application that the queued output request associated with the <see cref="OutputID"></see> property has completed successfully.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.RemoteOrderDisplay.CharacterSetAnsi">
			<summary>A constant value that is used by the <see cref="M:Microsoft.PointOfService.RemoteOrderDisplay.SelectCharacterSet(Microsoft.PointOfService.DeviceUnits,System.Int32)"></see> method to set the video unit to use the ANSI character set.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.RemoteOrderDisplay.CharacterSetAscii">
			<summary>A constant value used by the <see cref="M:Microsoft.PointOfService.RemoteOrderDisplay.SelectCharacterSet(Microsoft.PointOfService.DeviceUnits,System.Int32)"></see> method to set the video unit to use the ASCII character set.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.RemoteOrderDisplay.CharacterSetUnicode">
			<summary>A constant value that is used by the <see cref="M:Microsoft.PointOfService.RemoteOrderDisplay.SelectCharacterSet(Microsoft.PointOfService.DeviceUnits,System.Int32)"></see> method to set the video unit to use the Unicode character set.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.RemoteOrderDisplay.ClockAll">
			<summary>A constant value that is used by the <see cref="ControlClock"></see> method to set all clocks to start at the same time.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.RemoteOrderDisplay.ExtendedErrorBadClock">
			<summary>Indicates a Pause, Resume, Start, Stop, or Move command was requested on an uninitialized clockId for any of the video units indicated in units.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.RemoteOrderDisplay.ExtendedErrorNoBuffers">
			<summary>Indicates the requested buffer exceeds the total number of video save buffers the remote order display device can support at once as specified in the <see cref="SystemVideoSaveBuffers"></see> property.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.RemoteOrderDisplay.ExtendedErrorNoClocks">
			<summary>Indicates the total number of clocks the remote order display device can support at one time as specified in the <see cref="SystemClocks"></see> property has been reached.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.RemoteOrderDisplay.ExtendedErrorNoRegion">
			<summary>Indicates bufferId does not contain a previously saved video region for the selected units.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.RemoteOrderDisplay.ExtendedErrorNoRoom">
			<summary>Indicates all the buffer memory has been allocated for a specific unit. The <see cref="ErrorUnits"></see> and <see cref="ErrorString"></see> properties are updated.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.RemoteOrderDisplay.ClearInput">
			<summary>Clears the device input that has been buffered for the unit specified by the <see cref="CurrentUnitId"></see> property.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.RemoteOrderDisplay.ClearOutput">
			<summary>Clears all outputs that have been buffered for the unit specified by the <see cref="CurrentUnitId"></see> property. This includes video and tone outputs.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.RemoteOrderDisplay.ClearVideo(Microsoft.PointOfService.DeviceUnits,Microsoft.PointOfService.VideoAttributes)">
			<summary>Clears the display area for the video unit(s) specified by the units parameter.</summary>
			<param name="units">Indicates which unit(s) to operate on.</param>
			<param name="attribute">The video attributes to clear.</param>
		</member>
		<member name="M:Microsoft.PointOfService.RemoteOrderDisplay.ClearVideoRegion(System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.PointOfService.VideoAttributes)">
			<summary>Clears the specified video region.</summary>
			<param name="width">The number of columns in the region.</param>
			<param name="row">The region's start row.</param>
			<param name="column">The region's start column.</param>
			<param name="height">The number of rows in the region.</param>
			<param name="attribute">The attribute to clear.</param>
		</member>
		<member name="M:Microsoft.PointOfService.RemoteOrderDisplay.ControlClock(Microsoft.PointOfService.DeviceUnits,Microsoft.PointOfService.ClockFunction,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.PointOfService.VideoAttributes,Microsoft.PointOfService.ClockMode)">
			<summary>Performs the clock command requested in clockFunction on the specified video unit(s).</summary>
			<param name="seconds">The initial seconds for the clock display.</param>
			<param name="units">The units to operate on.</param>
			<param name="hours">The initial hours for the clock display.</param>
			<param name="mode">The type of clock to display.</param>
			<param name="row">The clock's row.</param>
			<param name="clockFunction">The requested clock function.</param>
			<param name="minutes">The initial minutes for the clock display.</param>
			<param name="column">The clock's start column.</param>
			<param name="attribute">The video attribute.</param>
			<param name="clockId">Clock identification number. The valid values can be from 1 - Clocks. When the clockFunction parameter is Pause, Resume, or Stop, then clockId can be <see cref="ClockAll"></see> to specify all clocks started on the specified video unit(s).</param>
		</member>
		<member name="M:Microsoft.PointOfService.RemoteOrderDisplay.ControlCursor(Microsoft.PointOfService.DeviceUnits,Microsoft.PointOfService.VideoCursorType)">
			<summary>Enables or disables the cursor for the specified video unit(s).</summary>
			<param name="units">The units to operate on.</param>
			<param name="cursorType">The type of cursor to display.</param>
		</member>
		<member name="M:Microsoft.PointOfService.RemoteOrderDisplay.CopyVideoRegion(Microsoft.PointOfService.DeviceUnits,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
			<summary>Copies a region of the display area to a new location on the display area for the specified video unit(s).</summary>
			<param name="targetColumn">The start column of the target location.</param>
			<param name="units">The video units to operate on.</param>
			<param name="width">The number of columns in the region.</param>
			<param name="row">The region's start row.</param>
			<param name="column">The region's start column.</param>
			<param name="height">The number of rows in the region.</param>
			<param name="targetRow">The start row of the target location.</param>
		</member>
		<member name="M:Microsoft.PointOfService.RemoteOrderDisplay.DisplayData(Microsoft.PointOfService.DeviceUnits,System.Int32,System.Int32,Microsoft.PointOfService.VideoAttributes,System.String)">
			<summary>Displays the characters in data starting at the location that is specified by row and column, and continues in succeeding columns on the video unit(s) indicated in the units parameter.</summary>
			<param name="units">The video units to operate on.</param>
			<param name="data">The string of characters to display.</param>
			<param name="row">The start row for the text.</param>
			<param name="column">The start column for the text.</param>
			<param name="attribute">The video attribute.</param>
		</member>
		<member name="M:Microsoft.PointOfService.RemoteOrderDisplay.DrawBox(Microsoft.PointOfService.DeviceUnits,System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.PointOfService.VideoAttributes,Microsoft.PointOfService.BorderType)">
			<summary>Draws a box on the specified video unit(s).</summary>
			<param name="units">The units to operate on.</param>
			<param name="width">The number of columns in the box.</param>
			<param name="row">The box's start row.</param>
			<param name="borderType">The border type.</param>
			<param name="column">The box's start column.</param>
			<param name="height">The number of rows in the box.</param>
			<param name="attribute">The video attribute.</param>
		</member>
		<member name="M:Microsoft.PointOfService.RemoteOrderDisplay.FreeVideoRegion(Microsoft.PointOfService.DeviceUnits,System.Int32)">
			<summary>Frees any buffer memory allocated for the specified video unit(s).</summary>
			<param name="units">The units to operate on.</param>
			<param name="bufferId">Integer identifying the video buffer to free. Valid values range from 1 to the <see cref="VideoSaveBuffers"></see> property for the selected unit(s).</param>
		</member>
		<member name="M:Microsoft.PointOfService.RemoteOrderDisplay.ResetVideo(Microsoft.PointOfService.DeviceUnits)">
			<summary>Sets the specified video unit(s) to a turned on state.</summary>
			<param name="units">The units to operate on.</param>
		</member>
		<member name="M:Microsoft.PointOfService.RemoteOrderDisplay.RestoreVideoRegion(Microsoft.PointOfService.DeviceUnits,System.Int32,System.Int32,System.Int32)">
			<summary>Restores a previously saved video region of the display area from the requested bufferId for the specified video unit(s).</summary>
			<param name="targetColumn">The start column of the target location.</param>
			<param name="units">The units to operate on.</param>
			<param name="bufferId">Number identifying the source video buffer to use. Valid values range from 1 to the <see cref="VideoSaveBuffers"></see> property for the selected unit(s).</param>
			<param name="targetRow">The start row of the target location.</param>
		</member>
		<member name="M:Microsoft.PointOfService.RemoteOrderDisplay.SaveVideoRegion(Microsoft.PointOfService.DeviceUnits,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
			<summary>Saves the specified video region of the display area to one of the provided video buffers for the specified video unit(s). </summary>
			<param name="units">The units to operate on.</param>
			<param name="width">The number of columns in the region to save.</param>
			<param name="row">The start row of the region to save.</param>
			<param name="column">The start column of the region to save.</param>
			<param name="height">The number of rows in the region to save.</param>
			<param name="bufferId">Number identifying the video buffer to use. Valid values range from 1 to the <see cref="VideoSaveBuffers"></see> property for a selected unit(s).</param>
		</member>
		<member name="M:Microsoft.PointOfService.RemoteOrderDisplay.SelectCharacterSet(Microsoft.PointOfService.DeviceUnits,System.Int32)">
			<summary>Selects a compatible character set for the specified video unit(s).</summary>
			<param name="units">The units to operate on.</param>
			<param name="characterSet">The character set for displaying characters.</param>
		</member>
		<member name="M:Microsoft.PointOfService.RemoteOrderDisplay.SetCursor(Microsoft.PointOfService.DeviceUnits,System.Int32,System.Int32)">
			<summary>Updates the cursor position on the specified video unit(s).</summary>
			<param name="units">The units to operate on.</param>
			<param name="row">Row to put the cursor on.</param>
			<param name="column">Column to put the cursor on.</param>
		</member>
		<member name="M:Microsoft.PointOfService.RemoteOrderDisplay.TransactionDisplay(Microsoft.PointOfService.DeviceUnits,Microsoft.PointOfService.RemoteOrderDisplayTransaction)">
			<summary>Enters or exits transaction mode for the specified video unit(s).</summary>
			<param name="units">The units to operate on.</param>
			<param name="transactionFunction">Transaction control function.</param>
		</member>
		<member name="M:Microsoft.PointOfService.RemoteOrderDisplay.UpdateVideoRegionAttribute(Microsoft.PointOfService.DeviceUnits,Microsoft.PointOfService.VideoAttributeCommand,System.Int32,System.Int32,System.Int32,Microsoft.PointOfService.VideoAttributes)">
			<summary>Modifies the attribute on the specified video unit(s).</summary>
			<param name="units">The units to operate on.</param>
			<param name="width">The number of columns in the region.</param>
			<param name="height">The number of rows in the region.</param>
			<param name="column">The region’s start column.</param>
			<param name="attributeFunction">The attribute command.</param>
			<param name="attribute">The video attribute to use.</param>
		</member>
		<member name="M:Microsoft.PointOfService.RemoteOrderDisplay.VideoSound(Microsoft.PointOfService.DeviceUnits,System.Int32,System.Int32,System.Int32,System.Int32)">
			<summary>Sounds the video enunciator for the specified units.</summary>
			<param name="interSoundWait">When numberOfCycles is not 1, then pause for interSoundWait milliseconds before repeating the tone cycle (that is, before playing the tone again).</param>
			<param name="units">The unit(s) to operate on.</param>
			<param name="frequency">Tone frequency in Hertz.</param>
			<param name="numberOfCycles">If WaitForever, then start tone sounding and, repeat continuously. Otherwise, perform the specified number of cycles.</param>
			<param name="duration">Tone duration in milliseconds.</param>
		</member>
		<member name="P:Microsoft.PointOfService.RemoteOrderDisplay.AsyncMode">
			<summary>Gets or sets a Boolean value that indicates whether methods are performed asynchronously.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.RemoteOrderDisplay.AutoToneDuration">
			<summary>Gets or sets the duration (in milliseconds) of the automatic tone for the video unit specified by the <see cref="CurrentUnitId"></see> property.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.RemoteOrderDisplay.AutoToneFrequency">
			<summary>Gets or sets the frequency (in Hertz) of the automatic tone for the video unit specified by the <see cref="CurrentUnitId"></see> property.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.RemoteOrderDisplay.CapMapCharacterSet">
			<summary>Gets a Boolean value that indicates whether the service object can map characters to the character sets that are defined in <see cref="CharacterSetList"></see>.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.RemoteOrderDisplay.CapSelectCharacterSet">
			<summary>Gets a Boolean value that indicates whether the video unit specified by the <see cref="CurrentUnitId"></see> property can be loaded with an alternate, user-supplied character set.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.RemoteOrderDisplay.CapTone">
			<summary>Gets a Boolean value that indicates whether the video unit specified by the <see cref="CurrentUnitId"></see> property supports an enunciator.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.RemoteOrderDisplay.CapTouch">
			<summary>Gets a Boolean value that indicates whether the video unit specified by the <see cref="CurrentUnitId"></see> property supports the TouchUp, TouchDown, and TouchMove event types.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.RemoteOrderDisplay.CapTransaction">
			<summary>Gets a Boolean value that indicates whether transactions are supported by each video unit.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.RemoteOrderDisplay.CharacterSet">
			<summary>Gets the character set for displaying characters for the video unit specified by the <see cref="CurrentUnitId"></see> property.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.RemoteOrderDisplay.CharacterSetList">
			<summary>Gets the character set for the video unit specified by the <see cref="CurrentUnitId"></see> property.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.RemoteOrderDisplay.Clocks">
			<summary>Gets the number of clocks the video unit, specified by the <see cref="CurrentUnitId"></see> property, can support.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.RemoteOrderDisplay.CurrentUnitId">
			<summary>Gets or sets the current video unit ID. Up to 32 units are allowed on one remote order display device. The unit ID definitions range from Unit1 to Unit32.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.RemoteOrderDisplay.DataCount">
			<summary>Gets the total number of queued <see cref="DataEvent"></see> events.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.RemoteOrderDisplay.DataEventEnabled">
			<summary>Gets or sets a Boolean value that indicates whether a <see cref="DataEvent"></see> event is delivered when input data is queued.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.RemoteOrderDisplay.ErrorString">
			<summary>Gets an error description that occurred to the video units.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.RemoteOrderDisplay.ErrorUnits">
			<summary>Gets a bitwise mask of the video units that encountered an error.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.RemoteOrderDisplay.EventString">
			<summary>Gets an error description for an error event.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.RemoteOrderDisplay.EventType">
			<summary>Gets or sets event types. </summary>
		</member>
		<member name="P:Microsoft.PointOfService.RemoteOrderDisplay.EventUnitId">
			<summary>Gets a video unit ID.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.RemoteOrderDisplay.EventUnits">
			<summary>Gets device unit(s).</summary>
		</member>
		<member name="P:Microsoft.PointOfService.RemoteOrderDisplay.MapCharacterSet">
			<summary>Gets or sets a Boolean value that indicates whether transferred characters are mapped to another character set.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.RemoteOrderDisplay.OutputId">
			<summary>Gets the identifier of the most recently started asynchronous output.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.RemoteOrderDisplay.SystemClocks">
			<summary>Gets the total number of clocks the remote order display device can support at one time.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.RemoteOrderDisplay.SystemVideoSaveBuffers">
			<summary>Gets the total number of video save buffers the remote order display device can support at one time.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.RemoteOrderDisplay.Timeout">
			<summary>Gets or sets the timeout value in milliseconds used by the remote order display device to complete all supported output methods.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.RemoteOrderDisplay.UnitsOnline">
			<summary>Gets which video units are online.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.RemoteOrderDisplay.VideoDataCount">
			<summary>Gets the number of <see cref="DataEvent"></see> events queued for the video unit specified by the <see cref="CurrentUnitId"></see> property.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.RemoteOrderDisplay.VideoMode">
			<summary>Gets or sets the video Mode ID selected for the video unit specified by the <see cref="CurrentUnitId"></see> property.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.RemoteOrderDisplay.VideoModesList">
			<summary>Gets the video modes supported for the video unit specified by the <see cref="CurrentUnitId"></see> property.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.RemoteOrderDisplay.VideoSaveBuffers">
			<summary>Gets the number of save buffers for the video unit specified by the <see cref="CurrentUnitId"></see> property.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.RemoteOrderDisplayEventTypes">
			<summary>Lists the possible event types for touch video input on a Remote Order Display device.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.RemoteOrderDisplayEventTypes.TouchDown">
			<summary>Touch occurred in the down direction.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.RemoteOrderDisplayEventTypes.TouchMove">
			<summary>Touch direction moved.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.RemoteOrderDisplayEventTypes.TouchUp">
			<summary>Touch occurred in the up direction.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.RemoteOrderDisplayTransaction">
			<summary>Lists the possible transaction control functions for a Remote Order Display device.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.RemoteOrderDisplayTransaction.Normal">
			<summary>End a transaction by displaying the buffered data.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.RemoteOrderDisplayTransaction.Transaction">
			<summary>Begin a transaction.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.ReportType">
			<summary>Lists all report types used in POS for .NET.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ReportType.Date">
			<summary>Prints a report between two fiscal memory record numbers.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ReportType.EndOfDayOrdinal">
			<summary>Prints a report between two dates.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ReportType.Ordinal">
			<summary>Prints a report between two reports specified by report number.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.RFIDProtocols">
			<summary>Enumerates the available predefined RFID tag protocols the device supports.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.RFIDProtocols.All">
			<summary>All protocol tags.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.RFIDProtocols.EpcClass0">
			<summary>EPC class 0 read-only passive tags.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.RFIDProtocols.EpcClass1">
			<summary>EPC class 1 write once passive tags.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.RFIDProtocols.EpcClass1Gen2">
			<summary>EPC class 1 gen 2 (ISO 18000-6C) write-once passive tags.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.RFIDProtocols.EpcClass2">
			<summary>EPC class 2 rewritable tags.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.RFIDProtocols.Iso14443A">
			<summary>ISO 14443A HF tags.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.RFIDProtocols.Iso14443B">
			<summary>ISO 14443B HF tags.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.RFIDProtocols.Iso15693">
			<summary>ISO 15693 HF tags.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.RFIDProtocols.Iso180006B">
			<summary>ISO 18000-6B UHF tags.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.RFIDProtocols.Other">
			<summary>A tag that does not fit into one of the defined protocols.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.RFIDProtocols.RFIDSdt0Plus">
			<summary>Non-standard EPC class "0+" write-once passive tags.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.RFIDReadOptions">
			<summary>Enumerates the tags within range that meet a parameterized criteria.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.RFIDReadOptions.FullUserData">
			<summary>Reads the full UserData.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.RFIDReadOptions.IdAndFullUserData">
			<summary>Reads the ID and full UserData.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.RFIDReadOptions.IdAndPartialUserData">
			<summary>Reads the ID and the defined partial UserData.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.RFIDReadOptions.PartialUserData">
			<summary>Reads the defined partial UserData.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.RFIDReadOptions.TagId">
			<summary>Reads only the ID data.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.RFIDScanner">
			<summary>Defines the programmatic interface for an RFID Scanner device.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.RFIDScanner.#ctor">
			<summary>Creates an instance of the <see cref="T:Microsoft.PointOfService.RFIDScanner"></see> class.</summary>
		</member>
		<member name="E:Microsoft.PointOfService.RFIDScanner.DataEvent">
			<summary>Notifies the application that input data from the RFID Scanner is available.</summary>
		</member>
		<member name="E:Microsoft.PointOfService.RFIDScanner.ErrorEvent">
			<summary>Notifies the application that an RFID Scanner device error has been detected and a suitable response by the application is necessary to process the error condition.</summary>
		</member>
		<member name="E:Microsoft.PointOfService.RFIDScanner.OutputCompleteEvent">
			<summary>Notifies the application that the queued output request associated with the <see cref="P:Microsoft.PointOfService.RFIDScanner.OutputId"></see> attribute has completed successfully.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.RFIDScanner.ExtendedErrorAntennaFailure">
			<summary>Indicates if the RF antenna is in a state of failure.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.RFIDScanner.StatisticFailedTagDisableCount">
			<summary>Contains the count of failed tag disable attempts.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.RFIDScanner.StatisticFailedTagLockCount">
			<summary>Contains the count of failed tag lock attempts.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.RFIDScanner.StatisticFailedTagWriteCount">
			<summary>Contains the count of failed tag write attempts.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.RFIDScanner.StatisticGoodTagDisableCount">
			<summary>Contains the count of successful tag disable attempts.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.RFIDScanner.StatisticGoodTagLockCount">
			<summary>Contains the count of successful tag lock attempts.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.RFIDScanner.StatisticGoodTagWriteCount">
			<summary>Contains the count of successful tag write attempts.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.RFIDScanner.StatisticTagReadCount">
			<summary>Contains the count of read tags.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.RFIDScanner.StatusExcessNoise">
			<summary>Indicates the <see cref="T:Microsoft.PointOfService.RFIDScanner"></see> device is experiencing excess noise.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.RFIDScanner.StatusLowMemory">
			<summary>Indicates the <see cref="T:Microsoft.PointOfService.RFIDScanner"></see> device is low on memory.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.RFIDScanner.ClearInput">
			<summary>Clears the data and input error events.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.RFIDScanner.ClearInputProperties">
			<summary>Clears all data properties and sets them to their default values.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.RFIDScanner.ClearOutput">
			<summary>Clears the data and output error events.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.RFIDScanner.DisableTag(System.Byte[],System.Int32,System.Byte[])">
			<summary>Permanently disables the specific tag matching the tagID parameter.</summary>
			<param name="timeout">Allowed execution time, in milliseconds, before the method fails and a time-out <see cref="E:Microsoft.PointOfService.RFIDScanner.ErrorEvent"></see> is sent to the application. If <see cref="F:Microsoft.PointOfService.PosCommon.WaitForever"></see>, the service waits as long as needed until either the operation is complete or an error occurs.</param>
			<param name="password">Authorized key for reader that might be required for this operation; null if not applicable.</param>
			<param name="tagId">The ID of the tag it is disabling.</param>
		</member>
		<member name="M:Microsoft.PointOfService.RFIDScanner.FirstTag">
			<summary>Resets the service’s counter to the first tag in the tag list, and copies that tag’s information into the corresponding properties.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.RFIDScanner.LockTag(System.Byte[],System.Int32,System.Byte[])">
			<summary>Turns the tag into a read-only mode. </summary>
			<param name="timeout">Allowed execution time, in milliseconds, before the method fails and a time-out <see cref="E:Microsoft.PointOfService.RFIDScanner.ErrorEvent"></see> event is sent to the application. If <see cref="F:Microsoft.PointOfService.PosCommon.WaitForever"></see> the service waits as long as needed until either the operation is complete or an error occurs.</param>
			<param name="password">Authorized key for reader that might be required for this operation, null if not applicable.</param>
			<param name="tagId">The ID of the tag it is locking.</param>
		</member>
		<member name="M:Microsoft.PointOfService.RFIDScanner.NextTag">
			<summary>Moves the service’s counter to the next tag in the tag list, and copies that tag’s information into the corresponding properties.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.RFIDScanner.PreviousTag">
			<summary>Moves the service’s counter to the previous tag in the tag list, and copies that tag’s information into the corresponding properties.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.RFIDScanner.ReadTags(Microsoft.PointOfService.RFIDReadOptions,System.Byte[],System.Byte[],System.Int32,System.Int32,System.Int32,System.Byte[])">
			<summary>Performs a poll of all the tags within range that meet the parameterized criteria.</summary>
			<param name="filterMask">Holds a value which is used to mask the filterID. If the bitwise AND matches the bitwise AND of a tagId and the filterMask, the tagId will be returned. To get all tags in the field, pass in a filterMask of 0.</param>
			<param name="cmd">Command parameters from <see cref="T:Microsoft.PointOfService.RFIDReadOptions."></see></param>
			<param name="timeout">Allowed execution time, in milliseconds, before the method fails and a time-out <see cref="E:Microsoft.PointOfService.RFIDScanner.ErrorEvent"></see> is sent to the application. If <see cref="F:Microsoft.PointOfService.PosCommon.WaitForever"></see>, the service waits as long as needed until either the operation is complete or an error occurs.</param>
			<param name="filterId">Holds a bit pattern to be AND-ed with filterMask to determine which tag(s) to read.</param>
			<param name="password">Authorized key for reader that might be required for this operation; null if not applicable.</param>
			<param name="start">Indicates the zero-based position within the tags UserData field to begin reading from. This parameter only applies when cmd is set to <see cref="F:Microsoft.PointOfService.RFIDReadOptions.PartialUserData"></see> or <see cref="F:Microsoft.PointOfService.RFIDReadOptions.IdAndPartialUserData"></see>. Otherwise, it is ignored.</param>
			<param name="length">Indicates the number of bytes of user data to read starting at the position indicated by the start parameter. This parameter only applies when cmd is set to <see cref="F:Microsoft.PointOfService.RFIDReadOptions.PartialUserData"></see> or <see cref="F:Microsoft.PointOfService.RFIDReadOptions.IdAndPartialUserData"></see>. Otherwise, it is ignored.</param>
		</member>
		<member name="M:Microsoft.PointOfService.RFIDScanner.StartReadTags(Microsoft.PointOfService.RFIDReadOptions,System.Byte[],System.Byte[],System.Int32,System.Int32,System.Byte[])">
			<summary>Performs a continuous polling of tags that meet the parameterized criteria.</summary>
			<param name="filterMask">Holds a value which is used to mask the filterID. If the bitwise AND matches the bitwise AND of a tagId and the filterMask, the tagId will be returned. To get all tags in the field, pass in a filterMask of 0.</param>
			<param name="filterId">Holds a bit pattern to be AND-ed with filterMask to determine which tag(s) to read.</param>
			<param name="password">Authorized key for reader that might be required for this operation; null if not applicable.</param>
			<param name="start">Indicates the zero-based position within the tags UserData field to begin reading from. This parameter only applies when cmd is set to <see cref="F:Microsoft.PointOfService.RFIDReadOptions.PartialUserData"></see> or <see cref="F:Microsoft.PointOfService.RFIDReadOptions.PartialUserData"></see>. Otherwise, it is ignored.</param>
			<param name="length">Indicates the number of bytes of user data to read starting at the position indicated by the start parameter. This parameter only applies when cmd is set to <see cref="F:Microsoft.PointOfService.RFIDReadOptions.PartialUserData"></see> or <see cref="F:Microsoft.PointOfService.RFIDReadOptions.PartialUserData"></see>. Otherwise, it is ignored.</param>
		</member>
		<member name="M:Microsoft.PointOfService.RFIDScanner.StopReadTags(System.Byte[])">
			<summary>Stops the Continuous Read mode.</summary>
			<param name="password">Authorized key for reader that might be required for this operation; null if not applicable.</param>
		</member>
		<member name="M:Microsoft.PointOfService.RFIDScanner.WriteTagData(System.Byte[],System.Byte[],System.Int32,System.Int32,System.Byte[])">
			<summary>Overwrites the entire or part of the UserData field of targeted tag.</summary>
			<param name="timeout">Allowed execution time, in milliseconds, before the method fails and a timeout <see cref="E:Microsoft.PointOfService.RFIDScanner.ErrorEvent"></see> is sent to the application. If <see cref="F:Microsoft.PointOfService.PosCommon.WaitForever"></see>, the service will wait as long as needed until either the operation is complete or an error occurs.</param>
			<param name="userData">User data to be written.</param>
			<param name="password">Authorized key for reader that might be required for this operation, null if not applicable.</param>
			<param name="tagId">ID of the tag whose user data it is writing to.</param>
			<param name="start">Indicates the zero-based position within the tags userData field to begin writing to.</param>
		</member>
		<member name="M:Microsoft.PointOfService.RFIDScanner.WriteTagId(System.Byte[],System.Byte[],System.Int32,System.Byte[])">
			<summary>Overwrites the existing tag ID with a new ID.</summary>
			<param name="sourceTagId">The source tag ID from which it is writing the new ID.</param>
			<param name="timeout">Allowed execution time, in milliseconds, before the method fails and a time-out <see cref="E:Microsoft.PointOfService.RFIDScanner.ErrorEvent"></see> is sent to the application. If <see cref="F:Microsoft.PointOfService.PosCommon.WaitForever"></see>, the service waits as long as needed until either the operation is complete or an error occurs.</param>
			<param name="password">Authorized key for reader that might be required for this operation; null if not applicable.</param>
			<param name="destinationTagId">Destination ID of the new tag.</param>
		</member>
		<member name="T:Microsoft.PointOfService.Rotation">
			<summary>Lists the possible bitmap and bar code rotations for printing.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Rotation.Left90">
			<summary>Start rotated printing 90° to the left (counter-clockwise).</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Rotation.Normal">
			<summary>End rotated printing.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Rotation.Right90">
			<summary>Start rotated printing 90° to the right (clockwise).</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Rotation.Rotate180">
			<summary>Start rotated printing 180° (that is, print upside-down).</summary>
		</member>
		<member name="T:Microsoft.PointOfService.Scale">
			<summary>Defines the programmatic interface for a UPOS scale device.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.Scale.#ctor">
			<summary>Creates an instance of the <see cref="Scale"></see> class.</summary>
		</member>
		<member name="E:Microsoft.PointOfService.Scale.DataEvent">
			<summary>Fired by the service object to notify the application that an asynchronous <see cref="ReadWeight"></see> has completed.</summary>
		</member>
		<member name="E:Microsoft.PointOfService.Scale.ErrorEvent">
			<summary>Fired by the service object to notify the application that a scale device error has been detected and a suitable response by the application is necessary to process the error condition.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Scale.ExtendedErrorOverWeight">
			<summary>Indicates the weight was over <see cref="MaximumWeight."></see></summary>
		</member>
		<member name="F:Microsoft.PointOfService.Scale.ExtendedErrorSameWeight">
			<summary>Indicates the scale is reporting that the item/weight on the scale is identical to the previously reported item/weight (that is, the item has not been removed from the scale).</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Scale.ExtendedErrorUnderZero">
			<summary>Indicates the scale is reporting a weight that is less than zero due to a calibration error.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Scale.StatisticGoodWeightReadCount">
			<summary>Indicates good weight read count for statistics reporting.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Scale.StatusNotReady">
			<summary>Indicates the scale is not ready to weigh.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Scale.StatusStableWeight">
			<summary>Indicates scale weight is stable.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Scale.StatusWeightOverWeight">
			<summary>Indicates scale weight is overweight.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Scale.StatusWeightUnderZero">
			<summary>Indicates scale weight is less than zero.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Scale.StatusWeightUnstable">
			<summary>Indicates the scale weight is unstable.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Scale.StatusWeightZero">
			<summary>Indicates the scale weight is zero.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.Scale.ClearInput">
			<summary>Clears all device input that has been buffered.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.Scale.DisplayText(System.String)">
			<summary>Updates display text.</summary>
			<param name="data">The string of characters to display.</param>
		</member>
		<member name="M:Microsoft.PointOfService.Scale.ReadWeight(System.Int32)">
			<summary>Reads a weight from the scale.</summary>
			<param name="timeout">The number of milliseconds to wait for a settled weight before <see cref="ReadWeight"></see> fails. If zero, <see cref="ReadWeight"></see> attempts to read the scale weight, then returns the status immediately. If WaitForever, <see cref="ReadWeight"></see> waits as long as needed until a weight is successfully read or an error occurs.</param>
		</member>
		<member name="M:Microsoft.PointOfService.Scale.ZeroScale">
			<summary>Sets the scale weight to zero.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Scale.AsyncMode">
			<summary>Indicates whether <see cref="ReadWeight"></see> is performed asynchronously.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Scale.AutoDisable">
			<summary>Indicates whether POS for .NET automatically disables the scale when data is received.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Scale.CapDisplay">
			<summary>Indicates whether a scale has a display.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Scale.CapDisplayText">
			<summary>Indicates whether a scale can display text.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Scale.CapFreezeValue">
			<summary>Indicates whether a scale supports the freezeValue method.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Scale.CapPriceCalculating">
			<summary>Indicates whether a scale can calculate prices.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Scale.CapReadLiveWeightWithTare">
			<summary>Indicates whether a scale supports live weight measurements incorporating a tare value.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Scale.CapSetPriceCalculationMode">
			<summary>Indicates whether a scale supports different methods to calculate price.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Scale.CapSetUnitPriceWithWeightUnit">
			<summary>Indicates whether a scale can use different weight unit types apart from the default scale weight unite types..</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Scale.CapSpecialTare">
			<summary>Indicates whether a scale can use different tare values in replacement of or in addition to the default scale tare value used in determining the net weight.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Scale.CapTarePriority">
			<summary>Indicates whether a scale can use multiple tare values in a certain ranking order for the calculation of net weight and item price.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Scale.CapTareWeight">
			<summary>Indicates whether a scale supports a tare.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Scale.CapZeroScale">
			<summary>Indicates whether an application can set scale weight to zero.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Scale.ZeroValid">
			<summary>Indicates whether an application can report a valid weight as zero.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Scale.DataCount">
			<summary>Holds the number of currently queued <see cref="DataEvent"></see> events.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Scale.DataEventEnabled">
			<summary>Indicates whether a <see cref="DataEvent"></see> event is delivered when input data is queued.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Scale.IsExclusiveUseDevice">
			<summary>Indicates whether the <see cref="T:Microsoft.PointOfService.Scale"></see> is an exclusive-use device.</summary>
			<returns>A value of true indicates that the <see cref="T:Microsoft.PointOfService.Scale"></see> is exclusive-use. Otherwise, the value will be false.</returns>
		</member>
		<member name="P:Microsoft.PointOfService.Scale.MaxDisplayTextChars">
			<summary>Holds the number of characters that can be displayed.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Scale.MaximumWeight">
			<summary>Holds the maximum weight measurement possible from the scale.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Scale.MinimumWeight">
			<summary>Holds the minimum weight measurement possible from the scale.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Scale.SalesPrice">
			<summary>Holds the sales price read from a price-calculating scale.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Scale.TareWeight">
			<summary>Holds the tare weight of scale data.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Scale.UnitPrice">
			<summary>Holds the unit price of the article to be weighed.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Scale.WeightUnit">
			<summary>Holds the unit of weight of scale data.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.Scanner">
			<summary>Defines the programmatic interface for a UPOS Scanner device.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.Scanner.#ctor">
			<summary>Creates an instance of the <see cref="Scanner"></see> class.</summary>
		</member>
		<member name="E:Microsoft.PointOfService.Scanner.DataEvent">
			<summary>Raised by the Service Object to present scanned data from the device to the application.</summary>
		</member>
		<member name="E:Microsoft.PointOfService.Scanner.ErrorEvent">
			<summary>Raised by the Service Object to notify the application that an error has been detected while attempting to read scanned data.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.Scanner.StatisticGoodScanCount">
			<summary>Incremented for each successful scan.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.Scanner.ClearInput">
			<summary>Clears all device input that has been buffered.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.Scanner.ClearInputProperties">
			<summary>Resets the values of properties altered by <see cref="E:Microsoft.PointOfService.Scanner.DataEvent"></see> or <see cref="E:Microsoft.PointOfService.Scanner.ErrorEvent"></see>.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Scanner.AutoDisable">
			<summary>Get or sets a Boolean value whether POS for .NET automatically disables the Scanner after data is received.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Scanner.DataCount">
			<summary>Gets the number of data events currently queued by the Service Object.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Scanner.DataEventEnabled">
			<summary>Gets or sets a Boolean value that indicates whether POS for .NET can deliver the next queued event.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Scanner.DecodeData">
			<summary>Gets or sets a Boolean value that indicates whether the data can be decoded. </summary>
		</member>
		<member name="P:Microsoft.PointOfService.Scanner.IsExclusiveUseDevice">
			<summary>Gets a Boolean value that indicates whether the <see cref="T:Microsoft.PointOfService.Scanner"></see> is an exclusive-use device.</summary>
			<returns>A value of true indicates that the <see cref="T:Microsoft.PointOfService.Scanner"></see> class is exclusive-use. Otherwise, the value is false.</returns>
		</member>
		<member name="P:Microsoft.PointOfService.Scanner.ScanData">
			<summary>Gets a byte array of the data that is read from the scanner.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Scanner.ScanDataLabel">
			<summary>Gets the decoded bar code label.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.Scanner.ScanDataType">
			<summary>Gets the decoded bar code label type. Possible values are defined by the <see cref="BarCodeSymbology"></see> enumeration.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.SensorColor">
			<summary>Lists the image capture modes for available biometric capture operations.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.SensorColor.Color16">
			<summary>16 Colors</summary>
		</member>
		<member name="F:Microsoft.PointOfService.SensorColor.Color256">
			<summary>256 Colors</summary>
		</member>
		<member name="F:Microsoft.PointOfService.SensorColor.Full">
			<summary>Full Colors</summary>
		</member>
		<member name="F:Microsoft.PointOfService.SensorColor.Grayscale">
			<summary>Gray scale</summary>
		</member>
		<member name="F:Microsoft.PointOfService.SensorColor.Mono">
			<summary>Bi-tonal (B/W)</summary>
		</member>
		<member name="F:Microsoft.PointOfService.SensorColor.None">
			<summary>No color support specified.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.SensorOrientation">
			<summary>Indicates the requested orientation adjustment to the received sensor data prior to <see cref="T:Microsoft.PointOfService.BiometricsInformationRecord"></see> creation.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.SensorOrientation.Inverted">
			<summary>180°</summary>
		</member>
		<member name="F:Microsoft.PointOfService.SensorOrientation.Left">
			<summary>270°</summary>
		</member>
		<member name="F:Microsoft.PointOfService.SensorOrientation.Normal">
			<summary>0°</summary>
		</member>
		<member name="F:Microsoft.PointOfService.SensorOrientation.Right">
			<summary>90°°</summary>
		</member>
		<member name="T:Microsoft.PointOfService.SensorType">
			<summary>Lists the possible types of data that the Biometrics Scanner may be designed to capture.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.SensorType.FacialFeatures">
			<summary>Captures biometrics data regarding facial features.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.SensorType.Fingerprint">
			<summary>Captures biometrics data regarding fingerprints.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.SensorType.Gait">
			<summary>Captures biometrics data regarding gait.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.SensorType.HandGeometry">
			<summary>Captures biometrics data regarding hand geometry.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.SensorType.Iris">
			<summary>Captures biometrics data regarding the iris.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.SensorType.KeystrokeDynamics">
			<summary>Captures biometrics data regarding keystroke dynamics.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.SensorType.LipMovement">
			<summary>Captures biometrics data regarding lip movement.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.SensorType.Password">
			<summary>The password.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.SensorType.Retina">
			<summary>Captures biometrics data about the retina.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.SensorType.SignatureDynamics">
			<summary>Captures biometrics data regarding the signature dynamics.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.SensorType.ThermalFaceImage">
			<summary>Captures biometrics data regarding thermal face imaging.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.SensorType.ThermalHandImage">
			<summary>Captures biometrics data regarding thermal hand imaging.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.SensorType.Unspecified">
			<summary>Captures unspecified biometrics data.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.SensorType.Voice">
			<summary>Captures biometrics data regarding voice.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.ServiceIndex">
			<summary>Allows the extraction of information from Cash Changer subservices.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.ServiceIndex.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
			<summary>Creates an instance of the <see cref="T:Microsoft.PointOfService.ServiceIndex"></see> structure with the specified values.</summary>
			<param name="indexOfBillDispenser">Index of <see cref="T:Microsoft.PointOfService.BillDispenser"></see> service.</param>
			<param name="indexOfCoinDispenser">Index of <see cref="T:Microsoft.PointOfService.CoinDispenser"></see> service.</param>
			<param name="indexOfBillAcceptor">Index of <see cref="T:Microsoft.PointOfService.BillAcceptor"></see> service.</param>
			<param name="indexOfCoinAcceptor">Index of <see cref="T:Microsoft.PointOfService.CoinAcceptor"></see> service.</param>
		</member>
		<member name="P:Microsoft.PointOfService.ServiceIndex.IndexOfBillAcceptor">
			<summary>Gets the index of the <see cref="T:Microsoft.PointOfService.BillAcceptor"></see> subservice.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.ServiceIndex.IndexOfBillDispenser">
			<summary>Gets the index of the <see cref="T:Microsoft.PointOfService.BillDispenser"></see> subservice.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.ServiceIndex.IndexOfCoinAcceptor">
			<summary>Gets the index of the <see cref="T:Microsoft.PointOfService.CoinAcceptor"></see> subservice.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.ServiceIndex.IndexOfCoinDispenser">
			<summary>Gets the index of the <see cref="T:Microsoft.PointOfService.CoinDispenser"></see> subservice.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.ServiceObjectAttribute">
			<summary>Defines a class-level attribute that can be used to identify the service object that implements the class.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.ServiceObjectAttribute.#ctor(System.String,System.String,System.String,System.Int32,System.Int32)">
			<summary>Creates an instance of the <see cref="ServiceObjectAttribute"></see> class with the specified parameters.</summary>
			<param name="type">The type of service object.</param>
			<param name="description">A description of the service object.</param>
			<param name="na me">The name of the service object.</param>
			<param name="uposVersionMajor">Major version.</param>
			<param name="uposVersionMinor">Minor version.</param>
		</member>
		<member name="P:Microsoft.PointOfService.ServiceObjectAttribute.Compatibility">
			<summary>Gets the compatibility level with any .NET or COM service object. </summary>
		</member>
		<member name="P:Microsoft.PointOfService.ServiceObjectAttribute.Description">
			<summary>Gets a description of the service object.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.ServiceObjectAttribute.Name">
			<summary>Gets a name of the service object.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.ServiceObjectAttribute.Type">
			<summary>Gets the tyoe of the service object.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.ServiceObjectAttribute.UposVersion">
			<summary>Gets the UPOS version number of the service object.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.ServiceObjectAttribute.UposVersionMajor">
			<summary>Gets the UPOS major version number for the service object.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.ServiceObjectAttribute.UposVersionMinor">
			<summary>Gets the UPOS minor version number of the service object.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.SignatureCapture">
			<summary>Defines the programmatic interface for a UPOS signature capture device.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.SignatureCapture.#ctor">
			<summary>Creates an instance of the <see cref="SignatureCapture"></see> class.</summary>
		</member>
		<member name="E:Microsoft.PointOfService.SignatureCapture.DataEvent">
			<summary>Raised by the service object to notify the application that input data is available.</summary>
		</member>
		<member name="E:Microsoft.PointOfService.SignatureCapture.ErrorEvent">
			<summary>Raised by the service object to notify the application that a device error has been detected and a suitable response by the application is necessary to process the error condition.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.SignatureCapture.StatisticFailedSignatureReadCount">
			<summary>Indicates the number of failed signature reads.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.SignatureCapture.StatisticGoodSignatureReadCount">
			<summary>Indicates the number of good signature reads.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.SignatureCapture.BeginCapture(System.String)">
			<summary>Begins the capture of a signature.</summary>
			<param name="formName">Contains the platform-specific location for obtaining form or data screen information for display on the device screen.</param>
		</member>
		<member name="M:Microsoft.PointOfService.SignatureCapture.ClearInput">
			<summary>Clears all device input that has been buffered.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.SignatureCapture.ClearInputProperties">
			<summary>Resets the values of properties altered by <see cref="E:Microsoft.PointOfService.SignatureCapture.DataEvent"></see> or <see cref="E:Microsoft.PointOfService.SignatureCapture.ErrorEvent"></see>.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.SignatureCapture.EndCapture">
			<summary>Ends signature capture.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.SignatureCapture.AutoDisable">
			<summary>Indicates whether POS for .NET automatically disables the device when data is received.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.SignatureCapture.CapDisplay">
			<summary>Indicates whether the device can display a form or data entry screen.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.SignatureCapture.CapRealTimeData">
			<summary>Indicates whether the device can supply data in real-time.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.SignatureCapture.CapUserTerminated">
			<summary>Indicates whether a user can terminate a signature capture.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.SignatureCapture.DataCount">
			<summary>Holds the number of currently queued <see cref="DataEvent"></see> events.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.SignatureCapture.DataEventEnabled">
			<summary>Indicates whether a <see cref="DataEvent"></see> event is delivered when input data is queued.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.SignatureCapture.IsExclusiveUseDevice">
			<summary>Indicates whether or not the <see cref="T:Microsoft.PointOfService.SignatureCapture"></see> is exclusive-use.</summary>
			<returns>A value of true indicates that the <see cref="T:Microsoft.PointOfService.SignatureCapture"></see> is exclusive-use. Otherwise, the value will be false.</returns>
		</member>
		<member name="P:Microsoft.PointOfService.SignatureCapture.MaximumX">
			<summary>Holds the maximum horizontal coordinate of the signature capture device.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.SignatureCapture.MaximumY">
			<summary>Holds the maximum vertical coordinate of the signature capture device.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.SignatureCapture.PointArray">
			<summary>Holds the signature captured from the device.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.SignatureCapture.RawData">
			<summary>Holds the signature captured from the device in a device-specific format.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.SignatureCapture.RealTimeDataEnabled">
			<summary>Indicates whether signature data can be gathered in real time.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.SmartCardInterfaceModes">
			<summary>Lists the possible communication modes for Smart Card devices.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.SmartCardInterfaceModes.Apdu">
			<summary>Same as Block mode except that the block of string data that contains commands and data sent to the SCR/W service object conforms to the ISO/IEC 7816 APDU (Application Protocol Data Units) standard for smart cards. ISO and EMV messaging formats are supported and selectable if the SCR/W has the capability to switch to one of these formats. </summary>
		</member>
		<member name="F:Microsoft.PointOfService.SmartCardInterfaceModes.Block">
			<summary>A block of string data that contains commands and data is sent to the SCR/W device service object. The application and the SCR/W service object need to agree upon a communication protocol and data format before using this mode.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.SmartCardInterfaceModes.Transaction">
			<summary>Basic ASCII format for commands and data interchange.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.SmartCardInterfaceModes.Xml">
			<summary>A block of string data that contains commands and data is sent to the SCR/W service object. The application and the SCR/W service object agree to use a communication protocol and data format defined in this standard consistent with the XML Data Dictionary and XML schema guidelines as outlined in the NRF-ARTS IX Retail XML standard.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.SmartCardIsoEmvModes">
			<summary>Lists the valid message standards for a Smart Card device.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.SmartCardIsoEmvModes.Emv">
			<summary>APDU messaging format conforms to the EMV standard. </summary>
		</member>
		<member name="F:Microsoft.PointOfService.SmartCardIsoEmvModes.Iso">
			<summary>APDU messaging format conforms to the ISO standard.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.SmartCardReadAction">
			<summary>Lists the possible types of processing of the data that is to be done by the smart card. </summary>
		</member>
		<member name="F:Microsoft.PointOfService.SmartCardReadAction.ExecuteAndReadData">
			<summary>The data being read from the smart card present in the SCR/W is data that was processed by a program currently resident on the smart card. When this action is requested the smart card program is started and sends back the data that it has processed.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.SmartCardReadAction.ReadData">
			<summary>The data being read from the smart card present in the SCR/W is from the data area on the smart card.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.SmartCardReadAction.ReadProgram">
			<summary>The data being read from the smart card present in the SCR/W is an executable program that was found in the smart card memory associated with executable programs.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.SmartCardReadAction.XmlReadBlockData">
			<summary>The data being read is XML data that the SCR/W is sending to the application. It is up to the application to parse the data being returned.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.SmartCardRW">
			<summary>Defines the programmatic interface for a UPOS smart card reader/writer device.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.SmartCardRW.#ctor">
			<summary>Creates an instance of the <see cref="SmartCardRW"></see> class.</summary>
		</member>
		<member name="E:Microsoft.PointOfService.SmartCardRW.DataEvent">
			<summary>Fired by the service object to present input data from the device to an application.</summary>
		</member>
		<member name="E:Microsoft.PointOfService.SmartCardRW.ErrorEvent">
			<summary>Fired by the service object to notify the application that a SCR/W error has been detected and a suitable response by the application is necessary to process the error condition.</summary>
		</member>
		<member name="E:Microsoft.PointOfService.SmartCardRW.OutputCompleteEvent">
			<summary>Fired by the service object to notify the application that the queued output request associated with the <see cref="OutputCompleteEventArgs.OutputId"></see> property has completed successfully.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.SmartCardRW.ExtendedErrorNoCard">
			<summary>Indicates no card is detected in the smart card reader/writer device but a card was expected.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.SmartCardRW.ExtendedErrorRead">
			<summary>Indicates there was a read error.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.SmartCardRW.ExtendedErrorTorn">
			<summary>Indicates the smart card was prematurely removed from the smart card reader/writer unexpectedly.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.SmartCardRW.ExtendedErrorWrite">
			<summary>Indicates there was a write error.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.SmartCardRW.StatusCardPresent">
			<summary>Indicates a card is in the device.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.SmartCardRW.StatusNoCard">
			<summary>Indicates no card is detected in the device.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.SmartCardRW.BeginInsertion(System.Int32)">
			<summary>Initiates smart card insertion processing.</summary>
			<param name="timeout">The number of milliseconds before failing the method.If zero, the method initiates insertion mode and either returns immediately if successful, or raises an exception. If WaitForever, the method initiates the begin insertion mode, then waits as long as needed until either the smart card is inserted or an error occurs.</param>
		</member>
		<member name="M:Microsoft.PointOfService.SmartCardRW.BeginRemoval(System.Int32)">
			<summary>Initiates smart card removal processing.</summary>
			<param name="timeout">The number of milliseconds before failing the methodIf 0, the method initiates the begin removal mode and either returns immediately or raises an exception. If WaitForever, the method initiates the begin removal mode, then waits as long as needed until either the smart card is removed or an error occurs.</param>
		</member>
		<member name="M:Microsoft.PointOfService.SmartCardRW.ClearInput">
			<summary>Clears all queued data and input error events and sets the <see cref="State"></see> property to Idle.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.SmartCardRW.ClearInputProperties">
			<summary>Resets the values of properties altered by <see cref="E:Microsoft.PointOfService.SmartCardRW.DataEvent"></see> or <see cref="E:Microsoft.PointOfService.SmartCardRW.ErrorEvent"></see>.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.SmartCardRW.ClearOutput">
			<summary>Clears all buffered output data, including all asynchronous output. </summary>
		</member>
		<member name="M:Microsoft.PointOfService.SmartCardRW.EndInsertion">
			<summary>Ends smart card insertion processing.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.SmartCardRW.EndRemoval">
			<summary>Ends smart card removal processing.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.SmartCardRW.ReadData(Microsoft.PointOfService.SmartCardReadAction,System.Byte[])">
			<summary>Reads data from a smart card.</summary>
			<param name="data">The data that is to be read by the smart card.</param>
			<param name="action">Indicates the type of data processing to be done by the smart card.</param>
		</member>
		<member name="M:Microsoft.PointOfService.SmartCardRW.WriteData(Microsoft.PointOfService.SmartCardWriteAction,System.Byte[])">
			<summary>Writes data to a smart card.</summary>
			<param name="data">The data that is to be sent to the smart card.</param>
			<param name="action">Indicates the type of processing of the data that is to be done by the smart card.</param>
		</member>
		<member name="P:Microsoft.PointOfService.SmartCardRW.CapCardErrorDetection">
			<summary>Indicates whether the smart card device can report a "torn" card.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.SmartCardRW.CapInterfaceMode">
			<summary>Indicates the interface modes the device is capable of supporting.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.SmartCardRW.CapIsoEmvMode">
			<summary>Indicates the supported message modes when <see cref="InterfaceMode"></see> is APDU.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.SmartCardRW.CapSCPresentSensor">
			<summary>Indicates if the device can sense a smart card in a user-available slot. </summary>
		</member>
		<member name="P:Microsoft.PointOfService.SmartCardRW.CapSCSlots">
			<summary>Indicates the number of slots available to a user.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.SmartCardRW.CapTransmissionProtocol">
			<summary>Indicates the types of transmission protocols supported by the device.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.SmartCardRW.DataCount">
			<summary>Holds the number of currently queued <see cref="DataEvent"></see> events.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.SmartCardRW.DataEventEnabled">
			<summary>Indicates whether a <see cref="DataEvent"></see> event is delivered when input data is queued.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.SmartCardRW.InterfaceMode">
			<summary>Holds the current communication interface mode.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.SmartCardRW.IsExclusiveUseDevice">
			<summary>Indicates whether the <see cref="T:Microsoft.PointOfService.SmartCardRW"></see> is an exclusive-use device.</summary>
			<returns>A value of true indicates that the <see cref="T:Microsoft.PointOfService.SmartCardRW"></see> is exclusive-use. Otherwise, the value is false.</returns>
		</member>
		<member name="P:Microsoft.PointOfService.SmartCardRW.IsoEmvMode">
			<summary>Holds the message modes the device is using when <see cref="InterfaceMode"></see> is APDU.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.SmartCardRW.OutputId">
			<summary>Holds the identifier of the most recently started asynchronous output.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.SmartCardRW.SCPresentSensor">
			<summary>Indicates a smart card is in position to exchange data.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.SmartCardRW.SCSlot">
			<summary>Holds the current slot available to a user.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.SmartCardRW.TransactionInProgress">
			<summary>Indicates whether a smart card has been detected.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.SmartCardRW.TransmissionProtocol">
			<summary>Holds the transmission protocols the device currently supports.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.SmartCardTransmissionProtocols">
			<summary>Lists the possible types of transmission protocols for a Smart Card device.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.SmartCardTransmissionProtocols.T0">
			<summary>Asynchronous, Half Duplex, Character, Transmission Protocol Mode </summary>
		</member>
		<member name="F:Microsoft.PointOfService.SmartCardTransmissionProtocols.T1">
			<summary>Asynchronous, Half Duplex, Block Transmission Protocol Mode </summary>
		</member>
		<member name="T:Microsoft.PointOfService.SmartCardWriteAction">
			<summary>Lists the possible types of processing of the data that is to be done by the smart card.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.SmartCardWriteAction.ExecuteData">
			<summary>The data being sent to the smart card present in the SCR/W is to be stored in the data area on the smart card.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.SmartCardWriteAction.Reset">
			<summary>The smart card present in the SCR/W is instructed to reset to its "power on" state and ready to execute an application command.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.SmartCardWriteAction.SecurityFuse">
			<summary>The smart card present in the SCR/W will have its security fuse activated to prevent future data from being stored in the smart card.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.SmartCardWriteAction.StoreData">
			<summary>The data being sent to the smart card present in the SCR/W is to be stored in the data area on the smart card.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.SmartCardWriteAction.StoreProgram">
			<summary>The data being sent to the smart card present in the SCR/W is an executable program and is placed in the smart card memory associated with executable programs.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.SmartCardWriteAction.XmlBlockData">
			<summary>The data being sent is XML data and is to be parsed by the SCR/W to determine what actions are to take place.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.Statistic">
			<summary>Defines the programmatic interface used to create an array, or list, of device statistics.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.Statistic.#ctor(System.String,System.Object)">
			<summary>Initializes a new instance of <see cref="Statistic"></see> from parameters specifying the instance's constituent parts.</summary>
			<param name="name">Statistic name.</param>
			<param name="value">Statistic value.</param>
		</member>
		<member name="T:Microsoft.PointOfService.StatisticCategories">
			<summary>Lists the possible categories of device statistics that can be retrieved, reset, or updated.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.StatisticCategories.All">
			<summary>All available statistics for the device.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.StatisticCategories.Manufacturer">
			<summary>Manufacturer-defined statistics.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.StatisticCategories.Upos">
			<summary>Unified POS-defined statistics.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.StatusNotify">
			<summary>Lists the possible scale weight notification capabilities a service object can use for a Scale device. </summary>
		</member>
		<member name="F:Microsoft.PointOfService.StatusNotify.Disabled">
			<summary>The service object will not provide any scale weight state notifications to the application or set any related <see cref="ExtendedErrorCode"></see> values. No scale weight state notification <see cref="StatusUpdateEvent"></see>s will be raised, and <see cref="ScaleLiveWeight"></see> may not be set.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.StatusNotify.Enabled">
			<summary>The service object will raise scale weight state notification <see cref="StatusUpdateEvent"></see>s and update the <see cref="ScaleLiveWeight"></see> property beginning when <see cref="DeviceEnabled"></see> is set to TRUE.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.StatusUpdateEventArgs">
			<summary>Defines the programmatic interface for the transmission of Status Update Events.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.StatusUpdateEventArgs.#ctor(System.Int32)">
			<summary>Creates an instance of the <see cref="StatusUpdateEventArgs"></see> class with the specified data.</summary>
			<param name="status">Device-specific status, describing the type of status change.</param>
		</member>
		<member name="P:Microsoft.PointOfService.StatusUpdateEventArgs.Status">
			<summary>Holds the device-specific status, describing the type of status change.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.StatusUpdateEventHandler">
			<summary>Defines the method that will handle a <see cref="T:Microsoft.PointOfService.StatusUpdateEventArgs"></see> events.</summary>
		</member>
        <member name="T:Microsoft.PointOfService.TransitionEventArgs">
            <summary>Defines the programmatic interface for the transmission of Transition Events.</summary>
        </member>
        <member name="M:Microsoft.PointOfService.TransitionEventArgs.#ctor(System.Int32,System.Int32,System.String)">
            <summary>Creates an instance of the <see cref="TransitionEventArgs"></see> class with the specified data.</summary>
            <param name="eventNumber">The ID number of the asynchronous I/O device process condition that is the cause for the event.</param>
            <param name="data">Additional information about appropriate response which is dependent upon the specific process condition.</param>
            <param name="infoString">Information about the specific event that has occurred.</param>
        </member>
        <member name="P:Microsoft.PointOfService.TransitionEventArgs.EventNumber">
            <summary>Holds the ID number of the asunchronous I/O device process condition that is the cause for the event.</summary>
        </member>
        <member name="P:Microsoft.PointOfService.TransitionEventArgs.Data">
            <summary>Holds additional information about appropriate response whish is dependent upon the specific process condition.</summary>
        </member>
        <member name="P:Microsoft.PointOfService.TransitionEventArgs.String">
            <summary>Holds information about he specific event that has occurred.</summary>
        </member>
        <member name="T:Microsoft.PointOfService.TransitionEventHandler">
            <summary>Defines the method that will handle a <see cref="T:Microsoft.PointOfService.TransitionEventArgs"></see> events.</summary>
        </member>
        <member name="T:Microsoft.PointOfService.SystemStateChangeReason">
			<summary>Lists the possible actions an application can allow for a PosPower device.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.SystemStateChangeReason.Allow">
			<summary>The request should be allowed.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.SystemStateChangeReason.Deny">
			<summary>The request should be denied.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.SystemStateChangeReason.Request">
			<summary>The system should enter the requested standby or suspend state.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.ToneIndicator">
			<summary>Defines the programmatic interface for a UPOS Tone Indicator device.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.ToneIndicator.#ctor">
			<summary>Creates an instance of the <see cref="ToneIndicator"></see> class.</summary>
		</member>
		<member name="E:Microsoft.PointOfService.ToneIndicator.ErrorEvent">
			<summary>Raised by the Service Object to notify the application that an error has been detected at the device and a suitable response is necessary to process the error condition.</summary>
		</member>
		<member name="E:Microsoft.PointOfService.ToneIndicator.OutputCompleteEvent">
			<summary>Raised by the Service Object to notify the application that the queued output request has completed successfully.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.ToneIndicator.StatisticToneSoundedCount">
			<summary>Indicates the number of tones sounded.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.ToneIndicator.ClearOutput">
			<summary>Clears all buffered output data. This includes all asynchronous output.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.ToneIndicator.Sound(System.Int32,System.Int32)">
			<summary>Sounds the indicator or starts it sounding asynchronously.</summary>
			<param name="interSoundWait">When numberOfCycles is not one, then pause for InterSoundWait milliseconds before repeating the tone cycle (before playing tone1 again).</param>
			<param name="numberOfCycles">If <see cref="WaitForever"></see>, then start the indicator sounding, and repeat continuously.Otherwise, perform the specified number of cycles.</param>
		</member>
		<member name="M:Microsoft.PointOfService.ToneIndicator.SoundImmediate">
			<summary>Sounds the hardware tone generator one time, synchronously.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.ToneIndicator.AsyncMode">
			<summary>Gets or sets a Boolean value to indicate whether the <see cref="Sound"></see> method is performed asynchronously.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.ToneIndicator.CapPitch">
			<summary>Gets a Boolean value to indicate whether the hardware tone generator can vary the tone pitch.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.ToneIndicator.CapVolume">
			<summary>Gets a Boolean value to indicate  whether the hardware tone generator can vary the tone volume.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.ToneIndicator.InterToneWait">
			<summary>Gets or sets the number of milliseconds of silence between tone1 and tone2.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.ToneIndicator.IsExclusiveUseDevice">
			<summary>Gets a Boolean value that indicates whether the <see cref="T:Microsoft.PointOfService.ToneIndicator"></see> is an exclusive-use device.</summary>
			<returns>A value of true indicates that the <see cref="T:Microsoft.PointOfService.ToneIndicator"></see> is an exclusive-use device. Otherwise, the value is false.</returns>
		</member>
		<member name="P:Microsoft.PointOfService.ToneIndicator.OutputId">
			<summary>Gets the identifier of the most recently started asynchronous output.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.ToneIndicator.Tone1Duration">
			<summary>Gets or sets the duration of the first tone in milliseconds.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.ToneIndicator.Tone1Pitch">
			<summary>Gets or sets the pitch or frequency of the first tone in Hertz.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.ToneIndicator.Tone1Volume">
			<summary>Gets or sets the volume of the first tone.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.ToneIndicator.Tone2Duration">
			<summary>Gets or sets the duration of the second tone in milliseconds.  </summary>
		</member>
		<member name="P:Microsoft.PointOfService.ToneIndicator.Tone2Pitch">
			<summary>Gets or sets the pitch or frequency of the second tone in Hertz.</summary>
		</member>
		<member name="P:Microsoft.PointOfService.ToneIndicator.Tone2Volume">
			<summary>Gets or sets the volume of the second tone.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.TotalsFileInfo">
			<summary>Defines the programmatic structure used by the service object to identify the current totals file for the application.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.TotalsFileInfo.#ctor(System.Int32,System.Int32)">
			<summary>Creates an instance of the <see cref="TotalsFileInfo"></see> structure from parameters specifying the instance's handle to the totals file and totals file size.</summary>
			<param name="size">Totals file size.</param>
			<param name="handle">Handle to the totals file.</param>
		</member>
		<member name="M:Microsoft.PointOfService.TotalsFileInfo.Equals(System.Object)">
			<summary>Determines whether the specified object is equal to the current TotalsFileInfo.</summary>
			<returns>True if the specified object is equal to the current TotalsFileInfo class; otherwise, false.</returns>
			<param name="o">The object to be compared with the current TotalsFileInfo class.</param>
		</member>
		<member name="M:Microsoft.PointOfService.TotalsFileInfo.Equals(Microsoft.PointOfService.TotalsFileInfo)">
			<summary>Determines whether the specified TotalsFileInfo class of the object is equal to the current TotalsFileinfo.</summary>
			<returns>True if the specified TotalsFileInfo is equal to the current TotalsFileInfo class; otherwise, false.</returns>
			<param name="info">The TotalsFileInfo to be compared with the current TotalsFileInfo class.</param>
		</member>
		<member name="M:Microsoft.PointOfService.TotalsFileInfo.Equals(Microsoft.PointOfService.TotalsFileInfo,Microsoft.PointOfService.TotalsFileInfo)">
			<summary>Determines whether the specified TotalsFileInfo instances are equal.</summary>
			<returns>True if a is equal to b; otherwise, false.</returns>
			<param name="a">The first TotalsFileInfo instance.</param>
			<param name="b">The second TotalsFileInfo instance.</param>
		</member>
		<member name="M:Microsoft.PointOfService.TotalsFileInfo.GetHashCode">
			<summary>Returns the hash code of the current TotalsFileInfo class.</summary>
			<returns>An Int32 representation of the hash code for the current TotalsFileInfo class.</returns>
		</member>
		<member name="M:Microsoft.PointOfService.TotalsFileInfo.op_Equality(Microsoft.PointOfService.TotalsFileInfo,System.Object)">
			<summary>Compares the specified TotalsFileInfo class and object to determine whether they are the same.</summary>
			<returns>True if a is equal to b; otherwise, false.</returns>
			<param name="a">The TotalsFileInfo to be compared to b.</param>
			<param name="b">The object to be compared to a.</param>
		</member>
		<member name="M:Microsoft.PointOfService.TotalsFileInfo.op_Inequality(Microsoft.PointOfService.TotalsFileInfo,System.Object)">
			<summary>Compares the specified TotalsFileInfo class and object to determine whether they are different.</summary>
			<returns>True if a is not equal to b; otherwise, false.</returns>
			<param name="a">The TotalsFileInfo class to be compared to b.</param>
			<param name="b">The object to be compared to a.</param>
		</member>
		<member name="T:Microsoft.PointOfService.TransactionControl">
			<summary>Enumerates the transaction mode.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.TransactionControl.Normal">
			<summary>Ends the transaction mode by executing the buffer operation.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.TransactionControl.Transaction">
			<summary>Begins a transaction.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.TransactionLogType">
			<summary>Enumerates the transaction log type.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.TransactionLogType.Reporting">
			<summary>Gets transaction log as an intermediate total.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.TransactionLogType.Settlement">
			<summary>The transaction log for the device is fixed and erased. (Whether it is erased or not depends on the implementation.)</summary>
		</member>
		<member name="T:Microsoft.PointOfService.UpsChargeStates">
			<summary>Lists the possible UPS charge states for a PosPower device.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.UpsChargeStates.Critical">
			<summary>UPS battery is in a critical state and can be disconnected at any time without further warning.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.UpsChargeStates.Full">
			<summary>UPS battery is near full charge.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.UpsChargeStates.Low">
			<summary>UPS battery is near zero charge. Application shutdown should be started to ensure that it can be completed before the battery charge is depleted. A minimum of two minutes of normal system operation can be assumed when this state is entered, unless this is the first charge state reported upon entering the "Off" power state.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.UpsChargeStates.Warning">
			<summary>UPS battery is near 50% charge.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.VatInfo">
			<summary>Defines the programmatic structure used to build a list of adjustments for value added tax (VAT) information.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.VatInfo.#ctor(System.Int32,System.Decimal)">
			<summary>Creates an instance of the VatInfo structure from parameters specifying the  VAT identifier and VAT amount.</summary>
			<param name="amount">The VAT amount.</param>
			<param name="id">The VAT identifier.</param>
		</member>
		<member name="M:Microsoft.PointOfService.VatInfo.Equals(System.Object)">
			<summary>Determines whether the specified object is equal to the current VatInfo.</summary>
			<returns>True if the specified object is equal to the current VatInfo; otherwise, false.</returns>
			<param name="o">The object to be compared.</param>
		</member>
		<member name="M:Microsoft.PointOfService.VatInfo.Equals(Microsoft.PointOfService.VatInfo)">
			<summary>Determines whether the specified VatInfo is equal to the current VatInfo.</summary>
			<returns>True if the specified VatInfo is equal to the current VatInfo; otherwise, false.</returns>
			<param name="vatInfo">The VatInfo to be compared.</param>
		</member>
		<member name="M:Microsoft.PointOfService.VatInfo.Equals(Microsoft.PointOfService.VatInfo,Microsoft.PointOfService.VatInfo)">
			<summary>Determines whether the specified VatInfo instances are equal.</summary>
			<returns>True if a is equal to b; otherwise, false.</returns>
			<param name="a">The VatInfo to be compared with b.</param>
			<param name="b">The VatInfo to be compared with a.</param>
		</member>
		<member name="M:Microsoft.PointOfService.VatInfo.GetHashCode">
			<summary>Returns the hash code of the current VatInfo.</summary>
			<returns>Returns an Int32 representation of the hash code for the current VatInfo.</returns>
		</member>
		<member name="M:Microsoft.PointOfService.VatInfo.op_Equality(Microsoft.PointOfService.VatInfo,System.Object)">
			<summary>Compares the specified VatInfo and object to determine whether they are the same.</summary>
			<returns>True if a is equal to b; otherwise, false.</returns>
			<param name="a">The VatInfo to be compared to b.</param>
			<param name="b">The object to be compared to a.</param>
		</member>
		<member name="M:Microsoft.PointOfService.VatInfo.op_Inequality(Microsoft.PointOfService.VatInfo,System.Object)">
			<summary>Compares the specified VatInfo and object to determine whether they are different.</summary>
			<returns>True if a is not equal to b; otherwise, false.</returns>
			<param name="a">The VatInfo to be compared to b.</param>
			<param name="b">The object to be compared to a.</param>
		</member>
		<member name="T:Microsoft.PointOfService.VideoAttributeCommand">
			<summary>Lists the possible video region attibutes for a Remote Order Display device.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.VideoAttributeCommand.BlinkOff">
			<summary>Turn off blinking in the region.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.VideoAttributeCommand.BlinkOn">
			<summary>Turn on blinking in the region.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.VideoAttributeCommand.IntensityOff">
			<summary>Turn off foreground intensity in the region.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.VideoAttributeCommand.IntensityOn">
			<summary>Turn on foreground intensity in the region.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.VideoAttributeCommand.ReverseOff">
			<summary>Remove reverse video from the region.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.VideoAttributeCommand.ReverseOn">
			<summary>Reverse video the region.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.VideoAttributeCommand.Set">
			<summary>Set the region with the new attribute.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.VideoAttributes">
			<summary>Lists the possible foreground and background colors, and blinking and intensity attributes of a video display on a Remote Order Display device.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.VideoAttributes.BackgroundBlack">
			<summary>Black background</summary>
		</member>
		<member name="F:Microsoft.PointOfService.VideoAttributes.BackgroundBlue">
			<summary>Blue background</summary>
		</member>
		<member name="F:Microsoft.PointOfService.VideoAttributes.BackgroundBrown">
			<summary>Brown background</summary>
		</member>
		<member name="F:Microsoft.PointOfService.VideoAttributes.BackgroundCyan">
			<summary>Cyan background</summary>
		</member>
		<member name="F:Microsoft.PointOfService.VideoAttributes.BackgroundGray">
			<summary>Gray background</summary>
		</member>
		<member name="F:Microsoft.PointOfService.VideoAttributes.BackgroundGreen">
			<summary>Green background</summary>
		</member>
		<member name="F:Microsoft.PointOfService.VideoAttributes.BackgroundMagenta">
			<summary>Magenta background</summary>
		</member>
		<member name="F:Microsoft.PointOfService.VideoAttributes.BackgroundRed">
			<summary>Red background</summary>
		</member>
		<member name="F:Microsoft.PointOfService.VideoAttributes.Blink">
			<summary>Blinking</summary>
		</member>
		<member name="F:Microsoft.PointOfService.VideoAttributes.ForegroundBlack">
			<summary>Black foreground</summary>
		</member>
		<member name="F:Microsoft.PointOfService.VideoAttributes.ForegroundBlue">
			<summary>Blue foreground</summary>
		</member>
		<member name="F:Microsoft.PointOfService.VideoAttributes.ForegroundBrown">
			<summary>Brown foreground</summary>
		</member>
		<member name="F:Microsoft.PointOfService.VideoAttributes.ForegroundCyan">
			<summary>Cyan foreground</summary>
		</member>
		<member name="F:Microsoft.PointOfService.VideoAttributes.ForegroundGray">
			<summary>Gray foreground</summary>
		</member>
		<member name="F:Microsoft.PointOfService.VideoAttributes.ForegroundGreen">
			<summary>Green foreground</summary>
		</member>
		<member name="F:Microsoft.PointOfService.VideoAttributes.ForegroundMagenta">
			<summary>Magenta foreground</summary>
		</member>
		<member name="F:Microsoft.PointOfService.VideoAttributes.ForegroundRed">
			<summary>Red foreground</summary>
		</member>
		<member name="F:Microsoft.PointOfService.VideoAttributes.Intensity">
			<summary>Intensity</summary>
		</member>
		<member name="T:Microsoft.PointOfService.VideoCursorType">
			<summary>Lists the possible video cursor types for a Remote Order Display device.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.VideoCursorType.Block">
			<summary>Enable a solid block cursor.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.VideoCursorType.BlockBlink">
			<summary>Enable a blinking solid block cursor.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.VideoCursorType.Line">
			<summary>Enable a solid underscore line.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.VideoCursorType.LineBlink">
			<summary>Enable a blinking solid underscore cursor.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.VideoCursorType.Off">
			<summary>Disable the cursor.</summary>
		</member>
		<member name="T:Microsoft.PointOfService.VideoMode">
			<summary>Defines the programmatic structure used by the service object to build an array of video modes supported by each online video unit.</summary>
		</member>
		<member name="M:Microsoft.PointOfService.VideoMode.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean)">
			<summary>Creates an instance of the <see cref="VideoMode"></see> structure from parameters specifying the instance's constituent parts.</summary>
			<param name="colors">Number of colors.</param>
			<param name="isColor">true if video is color; otherwise, false.</param>
			<param name="columns">Number of columns.</param>
			<param name="rows">Number of rows.</param>
		</member>
		<member name="M:Microsoft.PointOfService.VideoMode.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
			<summary>Creates an instance of the <see cref="VideoMode"></see> structure from parameters specifying the instance's constituent parts.</summary>
			<param name="colors">The number of colors</param>
			<param name="isColor">true if video is color; otherwise, false.</param>
			<param name="columns">The number of columns.</param>
			<param name="modelId">Id of the video unit, determined by the Remote Order Display system.</param>
			<param name="rows">The number of rows.</param>
		</member>
		<member name="M:Microsoft.PointOfService.VideoMode.Equals(System.Object)">
			<summary>Determines whether the specified object is equal to the current VideoMode.</summary>
			<returns>True if the specified object is equal to the current VideoMode; otherwise, false.</returns>
			<param name="o">The object to be compared to the current VideoMode</param>
		</member>
		<member name="M:Microsoft.PointOfService.VideoMode.Equals(Microsoft.PointOfService.VideoMode)">
			<summary>Determines whether the specified VideoMode is equal to the current VideoMode.</summary>
			<returns>True if the specified VideoMode is equal to the current VideoMode; otherwise, false.</returns>
			<param name="mode">The Videomode to be compared to the current Videomode.</param>
		</member>
		<member name="M:Microsoft.PointOfService.VideoMode.Equals(Microsoft.PointOfService.VideoMode,Microsoft.PointOfService.VideoMode)">
			<summary>Determines whether the specified VideoMode instances are equal.</summary>
			<returns>True if the two instances of VideoMode contain the same values; otherwise, false.</returns>
			<param name="a">The first VideoMode to compare.</param>
			<param name="b">The second VideoMode to compare.</param>
		</member>
		<member name="M:Microsoft.PointOfService.VideoMode.GetHashCode">
			<summary>Returns the hash code of the current VideoMode.</summary>
			<returns>Returns the Int32 representation of the hash code for the current Videomode</returns>
		</member>
		<member name="M:Microsoft.PointOfService.VideoMode.op_Equality(Microsoft.PointOfService.VideoMode,System.Object)">
			<summary>Compares the specified VideoMode and object to determine whether they are the same.</summary>
			<returns>True if a is equal to b; otherwise, false.</returns>
			<param name="a">The VideoMode to be compared to b.</param>
			<param name="b">The object to be compared to a.</param>
		</member>
		<member name="M:Microsoft.PointOfService.VideoMode.op_Inequality(Microsoft.PointOfService.VideoMode,System.Object)">
			<summary>Compares the specified VideoMode and object to determine whether they are different.</summary>
			<returns>True if a is not equal to b; otherwise, false.</returns>
			<param name="a">The VideoMode to be compared to b</param>
			<param name="b">The Object to be compared to a</param>
		</member>
		<member name="P:Microsoft.PointOfService.VideoMode.Colors">
			<summary>Gets the number of colors the video unit supports.</summary>
			<returns>The number of colors supported by the current video unit.</returns>
		</member>
		<member name="P:Microsoft.PointOfService.VideoMode.Rows">
			<summary>Gets the number of rows the video unit supports. </summary>
			<returns>The number of rows supported by the current video unit.</returns>
		</member>
		<member name="T:Microsoft.PointOfService.WeightUnit">
			<summary>Lists the valid weight units for a Scale device.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.WeightUnit.Gram">
			<summary>gram</summary>
		</member>
		<member name="F:Microsoft.PointOfService.WeightUnit.Kilogram">
			<summary>kilogram</summary>
		</member>
		<member name="F:Microsoft.PointOfService.WeightUnit.Ounce">
			<summary>ounce</summary>
		</member>
		<member name="F:Microsoft.PointOfService.WeightUnit.Pound">
			<summary>pound</summary>
		</member>
		<member name="T:Microsoft.PointOfService.WriteTagSections">
			<summary>Enumerates the writable fields in the tag.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.WriteTagSections.All">
			<summary>All fields in the tag are writable.</summary>
		</member>
		<member name="F:Microsoft.PointOfService.WriteTagSections.IdOnly">
			<summary>The ID field in the tag is writable. </summary>
		</member>
		<member name="F:Microsoft.PointOfService.WriteTagSections.None">
			<summary>No writable fields in the tag. </summary>
		</member>
		<member name="F:Microsoft.PointOfService.WriteTagSections.UserData">
			<summary>The UserData field in the tag is writable.</summary>
		</member>
	</members>
</doc>